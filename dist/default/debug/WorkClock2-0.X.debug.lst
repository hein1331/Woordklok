

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Jul 17 00:13:06 2018

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F27K40
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK7,global,class=BANK7,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	cstackBANK8,global,class=BANK8,space=1,delta=1,noexec
    21                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    22                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    24                           	psect	text0,global,reloc=2,class=CODE,delta=1
    25                           	psect	text1,global,reloc=2,class=CODE,delta=1
    26                           	psect	text2,global,reloc=2,class=CODE,delta=1
    27                           	psect	text3,global,reloc=2,class=CODE,delta=1
    28                           	psect	text4,global,reloc=2,class=CODE,delta=1
    29                           	psect	text5,global,reloc=2,class=CODE,delta=1
    30                           	psect	text6,global,reloc=2,class=CODE,delta=1
    31                           	psect	text7,global,reloc=2,class=CODE,delta=1
    32                           	psect	text8,global,reloc=2,class=CODE,delta=1
    33                           	psect	text9,global,reloc=2,class=CODE,delta=1
    34                           	psect	text10,global,reloc=2,class=CODE,delta=1
    35                           	psect	text11,global,reloc=2,class=CODE,delta=1
    36                           	psect	text12,global,reloc=2,class=CODE,delta=1
    37                           	psect	text13,global,reloc=2,class=CODE,delta=1
    38                           	psect	text14,global,reloc=2,class=CODE,delta=1
    39                           	psect	text15,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    41                           	psect	text17,global,reloc=2,class=CODE,delta=1
    42                           	psect	text18,global,reloc=2,class=CODE,delta=1
    43                           	psect	text19,global,reloc=2,class=CODE,delta=1
    44                           	psect	text20,global,reloc=2,class=CODE,delta=1
    45                           	psect	text21,global,reloc=2,class=CODE,delta=1
    46                           	psect	text22,global,reloc=2,class=CODE,delta=1
    47                           	psect	text23,global,reloc=2,class=CODE,delta=1
    48                           	psect	text24,global,reloc=2,class=CODE,delta=1
    49                           	psect	text25,global,reloc=2,class=CODE,delta=1
    50                           	psect	text26,global,reloc=2,class=CODE,delta=1
    51                           	psect	text27,global,reloc=2,class=CODE,delta=1
    52                           	psect	text28,global,reloc=2,class=CODE,delta=1
    53                           	psect	text29,global,reloc=2,class=CODE,delta=1
    54                           	psect	text30,global,reloc=2,class=CODE,delta=1
    55                           	psect	text31,global,reloc=2,class=CODE,delta=1
    56                           	psect	text32,global,reloc=2,class=CODE,delta=1
    57                           	psect	text33,global,reloc=2,class=CODE,delta=1
    58                           	psect	text34,global,reloc=2,class=CODE,delta=1
    59                           	psect	text35,global,reloc=2,class=CODE,delta=1
    60                           	psect	text36,global,reloc=2,class=CODE,delta=1
    61                           	psect	text37,global,reloc=2,class=CODE,delta=1
    62                           	psect	text38,global,reloc=2,class=CODE,delta=1
    63                           	psect	text39,global,reloc=2,class=CODE,delta=1
    64                           	psect	text40,global,reloc=2,class=CODE,delta=1
    65                           	psect	text41,global,reloc=2,class=CODE,delta=1
    66                           	psect	text42,global,reloc=2,class=CODE,delta=1
    67                           	psect	text43,global,reloc=2,class=CODE,delta=1
    68                           	psect	text44,global,reloc=2,class=CODE,delta=1
    69                           	psect	text45,global,reloc=2,class=CODE,delta=1
    70                           	psect	text46,global,reloc=2,class=CODE,delta=1
    71                           	psect	text47,global,reloc=2,class=CODE,delta=1
    72                           	psect	text48,global,reloc=2,class=CODE,delta=1
    73                           	psect	text49,global,reloc=2,class=CODE,delta=1
    74                           	psect	text50,global,reloc=2,class=CODE,delta=1
    75                           	psect	text51,global,reloc=2,class=CODE,delta=1
    76                           	psect	text52,global,reloc=2,class=CODE,delta=1
    77                           	psect	text53,global,reloc=2,class=CODE,delta=1
    78                           	psect	text54,global,reloc=2,class=CODE,delta=1
    79                           	psect	text55,global,reloc=2,class=CODE,delta=1
    80                           	psect	text56,global,reloc=2,class=CODE,delta=1
    81                           	psect	text57,global,reloc=2,class=CODE,delta=1
    82                           	psect	text58,global,reloc=2,class=CODE,delta=1
    83                           	psect	text59,global,reloc=2,class=CODE,delta=1
    84                           	psect	text60,global,reloc=2,class=CODE,delta=1
    85                           	psect	text61,global,reloc=2,class=CODE,delta=1
    86                           	psect	text62,global,reloc=2,class=CODE,delta=1
    87                           	psect	text63,global,reloc=2,class=CODE,delta=1
    88                           	psect	text64,global,reloc=2,class=CODE,delta=1
    89                           	psect	text65,global,reloc=2,class=CODE,delta=1
    90                           	psect	text66,global,reloc=2,class=CODE,delta=1
    91                           	psect	text67,global,reloc=2,class=CODE,delta=1,group=1
    92                           	psect	text68,global,reloc=2,class=CODE,delta=1,group=1
    93                           	psect	text69,global,reloc=2,class=CODE,delta=1,group=1
    94                           	psect	text70,global,reloc=2,class=CODE,delta=1
    95                           	psect	text71,global,reloc=2,class=CODE,delta=1
    96                           	psect	text72,global,reloc=2,class=CODE,delta=1
    97                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=1
    98                           	psect	text74,global,reloc=2,class=CODE,delta=1
    99                           	psect	text75,global,reloc=2,class=CODE,delta=1
   100                           	psect	text76,global,reloc=2,class=CODE,delta=1
   101                           	psect	text77,global,reloc=2,class=CODE,delta=1
   102                           	psect	text78,global,reloc=2,class=CODE,delta=1
   103                           	psect	text79,global,reloc=2,class=CODE,delta=1,group=1
   104                           	psect	text80,global,reloc=2,class=CODE,delta=1
   105                           	psect	text81,global,reloc=2,class=CODE,delta=1
   106                           	psect	text82,global,reloc=2,class=CODE,delta=1
   107                           	psect	text83,global,reloc=2,class=CODE,delta=1
   108                           	psect	text84,global,reloc=2,class=CODE,delta=1
   109                           	psect	text85,global,reloc=2,class=CODE,delta=1
   110                           	psect	text86,global,reloc=2,class=CODE,delta=1
   111                           	psect	text87,global,reloc=2,class=CODE,delta=1
   112                           	psect	text88,global,reloc=2,class=CODE,delta=1
   113                           	psect	text89,global,reloc=2,class=CODE,delta=1
   114                           	psect	text90,global,reloc=2,class=CODE,delta=1
   115                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   116                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   117                           	psect	text92,global,reloc=2,class=CODE,delta=1
   118                           	psect	text93,global,reloc=2,class=CODE,delta=1
   119                           	psect	text94,global,reloc=2,class=CODE,delta=1
   120                           	psect	text95,global,reloc=2,class=CODE,delta=1
   121                           	psect	text96,global,reloc=2,class=CODE,delta=1
   122                           	psect	text97,global,reloc=2,class=CODE,delta=1
   123                           	psect	text98,global,reloc=2,class=CODE,delta=1
   124                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   125                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   126                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   127  0000                     
   128                           ; Version 1.43
   129                           ; Generated 25/07/2017 GMT
   130                           ; 
   131                           ; Copyright © 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   132                           ; All rights reserved.
   133                           ; 
   134                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   135                           ; 
   136                           ; Redistribution and use in source and binary forms, with or without modification, are
   137                           ; permitted provided that the following conditions are met:
   138                           ; 
   139                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   140                           ;        conditions and the following disclaimer.
   141                           ; 
   142                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   143                           ;        of conditions and the following disclaimer in the documentation and/or other
   144                           ;        materials provided with the distribution.
   145                           ; 
   146                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   147                           ;        software without specific prior written permission.
   148                           ; 
   149                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   150                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   151                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   152                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   153                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   154                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   155                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   156                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   157                           ; 
   158                           ; 
   159                           ; Code-generator required, PIC18F27K40 Definitions
   160                           ; 
   161                           ; SFR Addresses
   162  0000                     
   163                           	psect	idataBANK0
   164  004C46                     __pidataBANK0:
   165                           	opt stack 0
   166                           
   167                           ;initializer for _randx
   168  004C46  0001               	dw	1
   169  004C48  0000               	dw	0
   170                           
   171                           	psect	smallconst
   172  000F00                     __psmallconst:
   173                           	opt stack 0
   174  000F00  00                 	db	0
   175  000F01                     _BTBLINK:
   176                           	opt stack 0
   177  000F01  04E2               	dw	1250
   178  000F03                     __end_of_BTBLINK:
   179                           	opt stack 0
   180  000F03                     _BTCNTMAX:
   181                           	opt stack 0
   182  000F03  09C4               	dw	2500
   183  000F05                     __end_of_BTCNTMAX:
   184                           	opt stack 0
   185  000F05  00                 	db	0	; dummy byte at the end
   186  0000                     
   187                           	psect	nvBANK0
   188  0000D4                     __pnvBANK0:
   189                           	opt stack 0
   190  0000D4                     _curr_stat:
   191                           	opt stack 0
   192  0000D4                     	ds	2
   193  0000D6                     _LED_TIM_VAL:
   194                           	opt stack 0
   195  0000D6                     	ds	2
   196  0000                     _IPR0bits	set	3770
   197  0000                     _PIE0bits	set	3778
   198  0000                     _PIE3bits	set	3781
   199  0000                     _RC2STAbits	set	3741
   200  0000                     _RC2REG	set	3737
   201  0000                     _TX2REG	set	3738
   202  0000                     _TX2STAbits	set	3742
   203  0000                     _RC6PPS	set	3837
   204  0000                     _RC7PPS	set	3838
   205  0000                     _RB5PPS	set	3828
   206  0000                     _RB7PPS	set	3830
   207  0000                     _RC4PPS	set	3835
   208  0000                     _RC3PPS	set	3834
   209  0000                     _SSP1CLKPPS	set	3767
   210  0000                     _SSP1DATPPS	set	3768
   211  0000                     _PIR4bits	set	3790
   212  0000                     _PIR0bits	set	3786
   213  0000                     _PIR1bits	set	3787
   214  0000                     _PIR3bits	set	3789
   215  0000                     _ADACT	set	3926
   216  0000                     _ADREFbits	set	3928
   217  0000                     _ADPCH	set	3935
   218  0000                     _ADCLKbits	set	3927
   219  0000                     _ANSELBbits	set	3865
   220  0000                     _IOCCNbits	set	3867
   221  0000                     _IOCCPbits	set	3868
   222  0000                     _IOCANbits	set	3851
   223  0000                     _IOCAPbits	set	3852
   224  0000                     _ANSELCbits	set	3873
   225  0000                     _ANSELAbits	set	3857
   226  0000                     _IOCCFbits	set	3866
   227  0000                     _IOCAFbits	set	3850
   228  0000                     _TMR1	set	4045
   229  0000                     _INTCONbits	set	4082
   230  0000                     _ADRESL	set	3939
   231  0000                     _ADRESH	set	3940
   232  0000                     _ADCON0bits	set	3936
   233  0000                     _TMR1CLK	set	4050
   234  0000                     _T1CONbits	set	4047
   235  0000                     _RC1STAbits	set	3997
   236  0000                     _RC1REG	set	3993
   237  0000                     _TX1REG	set	3994
   238  0000                     _TX1STAbits	set	3998
   239  0000                     _SSP1BUF	set	3986
   240  0000                     _SSP1CON2bits	set	3991
   241  0000                     _SSP1STATbits	set	3989
   242  0000                     _SSP1CON1bits	set	3990
   243  0000                     _SSP1STAT	set	3989
   244  0000                     _SSP1ADD	set	3987
   245  0000                     _SSP1CON2	set	3991
   246  0000                     _SSP1CON1	set	3990
   247  0000                     _TMR0L	set	4051
   248  0000                     _TMR0H	set	4052
   249  0000                     _T0CON1bits	set	4054
   250  0000                     _T0CON0bits	set	4053
   251  0000                     _TRISBbits	set	3977
   252  0000                     _TRISCbits	set	3978
   253  0000                     _PORTCbits	set	3983
   254  0000                     _TRISAbits	set	3976
   255  0000                     _PORTAbits	set	3981
   256  0000                     _PCON0	set	4055
   257                           
   258                           ; #config settings
   259  0000                     
   260                           	psect	cinit
   261  00337A                     __pcinit:
   262                           	opt stack 0
   263  00337A                     start_initialization:
   264                           	opt stack 0
   265  00337A                     __initialization:
   266                           	opt stack 0
   267                           
   268                           ; Initialize objects allocated to BANK0 (4 bytes)
   269                           ; load TBLPTR registers with __pidataBANK0
   270  00337A  0E46               	movlw	low __pidataBANK0
   271  00337C  6EF6               	movwf	tblptrl,c
   272  00337E  0E4C               	movlw	high __pidataBANK0
   273  003380  6EF7               	movwf	tblptrh,c
   274  003382  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   275  003384  6EF8               	movwf	tblptru,c
   276  003386  EE00  F0D8         	lfsr	0,__pdataBANK0
   277  00338A  EE10 F004          	lfsr	1,4
   278  00338E                     copy_data0:
   279  00338E  0009               	tblrd		*+
   280  003390  CFF5 FFEE          	movff	tablat,postinc0
   281  003394  50E5               	movf	postdec1,w,c
   282  003396  50E1               	movf	fsr1l,w,c
   283  003398  E1FA               	bnz	copy_data0
   284                           
   285                           ; Clear objects allocated to BIGRAM (576 bytes)
   286  00339A  EE08  F0C6         	lfsr	0,__pbssBIGRAM
   287  00339E  EE12 F040          	lfsr	1,576
   288  0033A2                     clear_0:
   289  0033A2  6AEE               	clrf	postinc0,c
   290  0033A4  50E5               	movf	postdec1,w,c
   291  0033A6  50E1               	movf	fsr1l,w,c
   292  0033A8  E1FC               	bnz	clear_0
   293  0033AA  50E2               	movf	fsr1h,w,c
   294  0033AC  E1FA               	bnz	clear_0
   295                           
   296                           ; Clear objects allocated to BANK7 (200 bytes)
   297  0033AE  EE07  F000         	lfsr	0,__pbssBANK7
   298  0033B2  0EC8               	movlw	200
   299  0033B4                     clear_1:
   300  0033B4  6AEE               	clrf	postinc0,c
   301  0033B6  06E8               	decf	wreg,f,c
   302  0033B8  E1FD               	bnz	clear_1
   303                           
   304                           ; Clear objects allocated to BANK6 (200 bytes)
   305  0033BA  EE06  F000         	lfsr	0,__pbssBANK6
   306  0033BE  0EC8               	movlw	200
   307  0033C0                     clear_2:
   308  0033C0  6AEE               	clrf	postinc0,c
   309  0033C2  06E8               	decf	wreg,f,c
   310  0033C4  E1FD               	bnz	clear_2
   311                           
   312                           ; Clear objects allocated to BANK5 (200 bytes)
   313  0033C6  EE05  F000         	lfsr	0,__pbssBANK5
   314  0033CA  0EC8               	movlw	200
   315  0033CC                     clear_3:
   316  0033CC  6AEE               	clrf	postinc0,c
   317  0033CE  06E8               	decf	wreg,f,c
   318  0033D0  E1FD               	bnz	clear_3
   319                           
   320                           ; Clear objects allocated to BANK4 (200 bytes)
   321  0033D2  EE04  F000         	lfsr	0,__pbssBANK4
   322  0033D6  0EC8               	movlw	200
   323  0033D8                     clear_4:
   324  0033D8  6AEE               	clrf	postinc0,c
   325  0033DA  06E8               	decf	wreg,f,c
   326  0033DC  E1FD               	bnz	clear_4
   327                           
   328                           ; Clear objects allocated to BANK3 (256 bytes)
   329  0033DE  EE03  F000         	lfsr	0,__pbssBANK3
   330  0033E2  EE11 F000          	lfsr	1,256
   331  0033E6                     clear_5:
   332  0033E6  6AEE               	clrf	postinc0,c
   333  0033E8  50E5               	movf	postdec1,w,c
   334  0033EA  50E1               	movf	fsr1l,w,c
   335  0033EC  E1FC               	bnz	clear_5
   336  0033EE  50E2               	movf	fsr1h,w,c
   337  0033F0  E1FA               	bnz	clear_5
   338                           
   339                           ; Clear objects allocated to BANK2 (247 bytes)
   340  0033F2  EE02  F000         	lfsr	0,__pbssBANK2
   341  0033F6  0EF7               	movlw	247
   342  0033F8                     clear_6:
   343  0033F8  6AEE               	clrf	postinc0,c
   344  0033FA  06E8               	decf	wreg,f,c
   345  0033FC  E1FD               	bnz	clear_6
   346                           
   347                           ; Clear objects allocated to BANK1 (50 bytes)
   348  0033FE  EE01  F037         	lfsr	0,__pbssBANK1
   349  003402  0E32               	movlw	50
   350  003404                     clear_7:
   351  003404  6AEE               	clrf	postinc0,c
   352  003406  06E8               	decf	wreg,f,c
   353  003408  E1FD               	bnz	clear_7
   354                           
   355                           ; Clear objects allocated to BANK0 (43 bytes)
   356  00340A  EE00  F0A9         	lfsr	0,__pbssBANK0
   357  00340E  0E2B               	movlw	43
   358  003410                     clear_8:
   359  003410  6AEE               	clrf	postinc0,c
   360  003412  06E8               	decf	wreg,f,c
   361  003414  E1FD               	bnz	clear_8
   362                           
   363                           ; Clear objects allocated to COMRAM (28 bytes)
   364  003416  EE00  F027         	lfsr	0,__pbssCOMRAM
   365  00341A  0E1C               	movlw	28
   366  00341C                     clear_9:
   367  00341C  6AEE               	clrf	postinc0,c
   368  00341E  06E8               	decf	wreg,f,c
   369  003420  E1FD               	bnz	clear_9
   370  003422                     end_of_initialization:
   371                           	opt stack 0
   372  003422                     __end_of__initialization:
   373                           	opt stack 0
   374  003422  9043               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   375  003424  9243               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   376  003426  0100               	movlb	0
   377  003428  EF83  F007         	goto	_main	;jump to C main() function
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           postdec1	equ	0xFE5
   385                           fsr1h	equ	0xFE2
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	bssCOMRAM
   389  000027                     __pbssCOMRAM:
   390                           	opt stack 0
   391  000027                     _time_quality:
   392                           	opt stack 0
   393  000027                     	ds	4
   394  00002B                     _bt_str:
   395                           	opt stack 0
   396  00002B                     	ds	2
   397  00002D                     _tim_dat:
   398                           	opt stack 0
   399  00002D                     	ds	2
   400  00002F                     _usb_ser_str_cntr:
   401                           	opt stack 0
   402  00002F                     	ds	2
   403  000031                     _bt_ser_str_cntr:
   404                           	opt stack 0
   405  000031                     	ds	2
   406  000033                     _curr_bt_cnt:
   407                           	opt stack 0
   408  000033                     	ds	2
   409  000035                     _bt_cnt:
   410                           	opt stack 0
   411  000035                     	ds	2
   412  000037                     _curr_b_cnt:
   413                           	opt stack 0
   414  000037                     	ds	2
   415  000039                     _b_cnt:
   416                           	opt stack 0
   417  000039                     	ds	2
   418  00003B                     _curr_g_cnt:
   419                           	opt stack 0
   420  00003B                     	ds	2
   421  00003D                     _g_cnt:
   422                           	opt stack 0
   423  00003D                     	ds	2
   424  00003F                     _curr_r_cnt:
   425                           	opt stack 0
   426  00003F                     	ds	2
   427  000041                     _r_cnt:
   428                           	opt stack 0
   429  000041                     	ds	2
   430                           tblptru	equ	0xFF8
   431                           tblptrh	equ	0xFF7
   432                           tblptrl	equ	0xFF6
   433                           tablat	equ	0xFF5
   434                           postinc0	equ	0xFEE
   435                           wreg	equ	0xFE8
   436                           postdec1	equ	0xFE5
   437                           fsr1h	equ	0xFE2
   438                           fsr1l	equ	0xFE1
   439                           
   440                           	psect	bssBANK0
   441  0000A9                     __pbssBANK0:
   442                           	opt stack 0
   443  0000A9                     _usb_str:
   444                           	opt stack 0
   445  0000A9                     	ds	2
   446  0000AB                     _aud_jack_stat:
   447                           	opt stack 0
   448  0000AB                     	ds	2
   449  0000AD                     _bt_connected:
   450                           	opt stack 0
   451  0000AD                     	ds	2
   452  0000AF                     _counter:
   453                           	opt stack 0
   454  0000AF                     	ds	2
   455  0000B1                     _fft_ready:
   456                           	opt stack 0
   457  0000B1                     	ds	2
   458  0000B3                     _i:
   459                           	opt stack 0
   460  0000B3                     	ds	2
   461  0000B5                     _usb_str_ready:
   462                           	opt stack 0
   463  0000B5                     	ds	2
   464  0000B7                     _bt_str_ready:
   465                           	opt stack 0
   466  0000B7                     	ds	2
   467  0000B9                     _usb_ser_str_read_start:
   468                           	opt stack 0
   469  0000B9                     	ds	2
   470  0000BB                     _bt_ser_str_read_start:
   471                           	opt stack 0
   472  0000BB                     	ds	2
   473  0000BD                     _i2c_bus_busy:
   474                           	opt stack 0
   475  0000BD                     	ds	2
   476  0000BF                     _toggle:
   477                           	opt stack 0
   478  0000BF                     	ds	2
   479  0000C1                     _time:
   480                           	opt stack 0
   481  0000C1                     	ds	2
   482  0000C3                     _ADC_TIM_VAL:
   483                           	opt stack 0
   484  0000C3                     	ds	2
   485  0000C5                     _curr_time:
   486                           	opt stack 0
   487  0000C5                     	ds	12
   488  0000D1                     _ADC_SAM_FREQ:
   489                           	opt stack 0
   490  0000D1                     	ds	3
   491                           tblptru	equ	0xFF8
   492                           tblptrh	equ	0xFF7
   493                           tblptrl	equ	0xFF6
   494                           tablat	equ	0xFF5
   495                           postinc0	equ	0xFEE
   496                           wreg	equ	0xFE8
   497                           postdec1	equ	0xFE5
   498                           fsr1h	equ	0xFE2
   499                           fsr1l	equ	0xFE1
   500                           
   501                           	psect	dataBANK0
   502  0000D8                     __pdataBANK0:
   503                           	opt stack 0
   504  0000D8                     _randx:
   505                           	opt stack 0
   506  0000D8                     	ds	4
   507                           tblptru	equ	0xFF8
   508                           tblptrh	equ	0xFF7
   509                           tblptrl	equ	0xFF6
   510                           tablat	equ	0xFF5
   511                           postinc0	equ	0xFEE
   512                           wreg	equ	0xFE8
   513                           postdec1	equ	0xFE5
   514                           fsr1h	equ	0xFE2
   515                           fsr1l	equ	0xFE1
   516                           
   517                           	psect	bssBANK1
   518  000137                     __pbssBANK1:
   519                           	opt stack 0
   520  000137                     _data_usb:
   521                           	opt stack 0
   522  000137                     	ds	50
   523                           tblptru	equ	0xFF8
   524                           tblptrh	equ	0xFF7
   525                           tblptrl	equ	0xFF6
   526                           tablat	equ	0xFF5
   527                           postinc0	equ	0xFEE
   528                           wreg	equ	0xFE8
   529                           postdec1	equ	0xFE5
   530                           fsr1h	equ	0xFE2
   531                           fsr1l	equ	0xFE1
   532                           
   533                           	psect	bssBANK2
   534  000200                     __pbssBANK2:
   535                           	opt stack 0
   536  000200                     _data:
   537                           	opt stack 0
   538  000200                     	ds	200
   539  0002C8                     _dat:
   540                           	opt stack 0
   541  0002C8                     	ds	47
   542                           tblptru	equ	0xFF8
   543                           tblptrh	equ	0xFF7
   544                           tblptrl	equ	0xFF6
   545                           tablat	equ	0xFF5
   546                           postinc0	equ	0xFEE
   547                           wreg	equ	0xFE8
   548                           postdec1	equ	0xFE5
   549                           fsr1h	equ	0xFE2
   550                           fsr1l	equ	0xFE1
   551                           
   552                           	psect	bssBANK3
   553  000300                     __pbssBANK3:
   554                           	opt stack 0
   555  000300                     _realNumbers:
   556                           	opt stack 0
   557  000300                     	ds	128
   558  000380                     _imaginaryNumbers:
   559                           	opt stack 0
   560  000380                     	ds	128
   561                           tblptru	equ	0xFF8
   562                           tblptrh	equ	0xFF7
   563                           tblptrl	equ	0xFF6
   564                           tablat	equ	0xFF5
   565                           postinc0	equ	0xFEE
   566                           wreg	equ	0xFE8
   567                           postdec1	equ	0xFE5
   568                           fsr1h	equ	0xFE2
   569                           fsr1l	equ	0xFE1
   570                           
   571                           	psect	bssBANK4
   572  000400                     __pbssBANK4:
   573                           	opt stack 0
   574  000400                     _bt_ser_str:
   575                           	opt stack 0
   576  000400                     	ds	200
   577                           tblptru	equ	0xFF8
   578                           tblptrh	equ	0xFF7
   579                           tblptrl	equ	0xFF6
   580                           tablat	equ	0xFF5
   581                           postinc0	equ	0xFEE
   582                           wreg	equ	0xFE8
   583                           postdec1	equ	0xFE5
   584                           fsr1h	equ	0xFE2
   585                           fsr1l	equ	0xFE1
   586                           
   587                           	psect	bssBANK5
   588  000500                     __pbssBANK5:
   589                           	opt stack 0
   590  000500                     _usb_ser_str:
   591                           	opt stack 0
   592  000500                     	ds	200
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           postinc0	equ	0xFEE
   598                           wreg	equ	0xFE8
   599                           postdec1	equ	0xFE5
   600                           fsr1h	equ	0xFE2
   601                           fsr1l	equ	0xFE1
   602                           
   603                           	psect	bssBANK6
   604  000600                     __pbssBANK6:
   605                           	opt stack 0
   606  000600                     _bt_ser_str_dat:
   607                           	opt stack 0
   608  000600                     	ds	200
   609                           tblptru	equ	0xFF8
   610                           tblptrh	equ	0xFF7
   611                           tblptrl	equ	0xFF6
   612                           tablat	equ	0xFF5
   613                           postinc0	equ	0xFEE
   614                           wreg	equ	0xFE8
   615                           postdec1	equ	0xFE5
   616                           fsr1h	equ	0xFE2
   617                           fsr1l	equ	0xFE1
   618                           
   619                           	psect	bssBANK7
   620  000700                     __pbssBANK7:
   621                           	opt stack 0
   622  000700                     _usb_ser_str_dat:
   623                           	opt stack 0
   624  000700                     	ds	200
   625                           tblptru	equ	0xFF8
   626                           tblptrh	equ	0xFF7
   627                           tblptrl	equ	0xFF6
   628                           tablat	equ	0xFF5
   629                           postinc0	equ	0xFEE
   630                           wreg	equ	0xFE8
   631                           postdec1	equ	0xFE5
   632                           fsr1h	equ	0xFE2
   633                           fsr1l	equ	0xFE1
   634                           
   635                           	psect	bssBIGRAM
   636  0008C6                     __pbssBIGRAM:
   637                           	opt stack 0
   638  0008C6                     _led_cont:
   639                           	opt stack 0
   640  0008C6                     	ds	576
   641                           tblptru	equ	0xFF8
   642                           tblptrh	equ	0xFF7
   643                           tblptrl	equ	0xFF6
   644                           tablat	equ	0xFF5
   645                           postinc0	equ	0xFEE
   646                           wreg	equ	0xFE8
   647                           postdec1	equ	0xFE5
   648                           fsr1h	equ	0xFE2
   649                           fsr1l	equ	0xFE1
   650                           
   651                           	psect	cstackBANK8
   652  000800                     __pcstackBANK8:
   653                           	opt stack 0
   654  000800                     main@all_on:
   655                           	opt stack 0
   656                           
   657                           ; 192 bytes @ 0x0
   658  000800                     	ds	192
   659  0008C0                     main@n:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0xC0
   663  0008C0                     	ds	1
   664  0008C1                     main@m:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0xC1
   668  0008C1                     	ds	1
   669  0008C2                     main@i:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0xC2
   673  0008C2                     	ds	2
   674  0008C4                     main@board:
   675                           	opt stack 0
   676                           
   677                           ; 2 bytes @ 0xC4
   678  0008C4                     	ds	2
   679                           tblptru	equ	0xFF8
   680                           tblptrh	equ	0xFF7
   681                           tblptrl	equ	0xFF6
   682                           tablat	equ	0xFF5
   683                           postinc0	equ	0xFEE
   684                           wreg	equ	0xFE8
   685                           postdec1	equ	0xFE5
   686                           fsr1h	equ	0xFE2
   687                           fsr1l	equ	0xFE1
   688                           
   689                           	psect	cstackBANK1
   690  000100                     __pcstackBANK1:
   691                           	opt stack 0
   692  000100                     ??_I2C_Master_Wait:
   693  000100                     set_status_led@status:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x0
   697  000100                     	ds	1
   698  000101                     ?_I2C_Master_Read:
   699                           	opt stack 0
   700  000101                     I2C_Master_Write@d:
   701                           	opt stack 0
   702  000101                     I2C_Master_Read@final_read:
   703                           	opt stack 0
   704                           
   705                           ; 2 bytes @ 0x1
   706  000101                     	ds	1
   707  000102                     set_status_led@error_override:
   708                           	opt stack 0
   709                           
   710                           ; 2 bytes @ 0x2
   711  000102                     	ds	1
   712  000103                     I2C_Master_Read@temp:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x3
   716  000103                     	ds	1
   717  000104                     ??_set_status_led:
   718                           
   719                           ; 1 bytes @ 0x4
   720  000104                     	ds	1
   721  000105                     ?_i2c_read:
   722                           	opt stack 0
   723  000105                     i2c_read@reg_addr:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0x5
   727  000105                     	ds	1
   728  000106                     ?_i2c_write:
   729                           	opt stack 0
   730  000106                     i2c_write@data:
   731                           	opt stack 0
   732  000106                     i2c_read@data_read_len:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x6
   736  000106                     	ds	2
   737  000108                     i2c_write@data_len:
   738                           	opt stack 0
   739  000108                     i2c_read@data:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x8
   743  000108                     	ds	2
   744  00010A                     ??_i2c_read:
   745  00010A                     i2c_write@addr:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0xA
   749  00010A                     	ds	1
   750  00010B                     i2c_write@reg_addr:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0xB
   754  00010B                     	ds	1
   755  00010C                     ??_i2c_write:
   756                           
   757                           ; 1 bytes @ 0xC
   758  00010C                     	ds	1
   759  00010D                     i2c_write@index:
   760                           	opt stack 0
   761                           
   762                           ; 2 bytes @ 0xD
   763  00010D                     	ds	2
   764  00010F                     ?_i2c_write_single:
   765                           	opt stack 0
   766  00010F                     i2c_write_single@addr:
   767                           	opt stack 0
   768  00010F                     i2c_read@addr:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0xF
   772  00010F                     	ds	1
   773  000110                     i2c_write_single@reg_addr:
   774                           	opt stack 0
   775  000110                     i2c_read@index:
   776                           	opt stack 0
   777                           
   778                           ; 2 bytes @ 0x10
   779  000110                     	ds	1
   780  000111                     i2c_write_single@data:
   781                           	opt stack 0
   782                           
   783                           ; 1 bytes @ 0x11
   784  000111                     	ds	1
   785  000112                     ?_set_page:
   786                           	opt stack 0
   787  000112                     i2c_read_single@reg_addr:
   788                           	opt stack 0
   789  000112                     set_page@page:
   790                           	opt stack 0
   791                           
   792                           ; 2 bytes @ 0x12
   793  000112                     	ds	1
   794  000113                     i2c_read_single@addr:
   795                           	opt stack 0
   796                           
   797                           ; 1 bytes @ 0x13
   798  000113                     	ds	1
   799  000114                     i2c_read_single@temp:
   800                           	opt stack 0
   801  000114                     set_page@cont_addr:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0x14
   805  000114                     	ds	1
   806  000115                     set_page@succ:
   807                           	opt stack 0
   808                           
   809                           ; 2 bytes @ 0x15
   810  000115                     	ds	2
   811  000117                     ??_init_led:
   812                           
   813                           ; 1 bytes @ 0x17
   814  000117                     	ds	2
   815  000119                     init_led@all_on:
   816                           	opt stack 0
   817                           
   818                           ; 24 bytes @ 0x19
   819  000119                     	ds	24
   820  000131                     init_led@i:
   821                           	opt stack 0
   822                           
   823                           ; 2 bytes @ 0x31
   824  000131                     	ds	2
   825  000133                     init_led@board:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x33
   829  000133                     	ds	2
   830  000135                     ??_main:
   831                           
   832                           ; 1 bytes @ 0x35
   833  000135                     	ds	2
   834                           tblptru	equ	0xFF8
   835                           tblptrh	equ	0xFF7
   836                           tblptrl	equ	0xFF6
   837                           tablat	equ	0xFF5
   838                           postinc0	equ	0xFEE
   839                           wreg	equ	0xFE8
   840                           postdec1	equ	0xFE5
   841                           fsr1h	equ	0xFE2
   842                           fsr1l	equ	0xFE1
   843                           
   844                           	psect	cstackBANK0
   845  000060                     __pcstackBANK0:
   846                           	opt stack 0
   847  000060                     ??i1_i2c_read:
   848  000060                     ?i1_i2c_write:
   849                           	opt stack 0
   850  000060                     prog_sw_process@prog_sw_stat:
   851                           	opt stack 0
   852  000060                     set_pixel_pwm@x:
   853                           	opt stack 0
   854  000060                     i1i2c_write@data:
   855                           	opt stack 0
   856  000060                     ___lmul@product:
   857                           	opt stack 0
   858                           
   859                           ; 4 bytes @ 0x0
   860  000060                     	ds	2
   861  000062                     set_pixel_pwm@y:
   862                           	opt stack 0
   863  000062                     i1i2c_write@data_len:
   864                           	opt stack 0
   865                           
   866                           ; 2 bytes @ 0x2
   867  000062                     	ds	2
   868  000064                     ?___awmod:
   869                           	opt stack 0
   870  000064                     set_pixel_pwm@pwm:
   871                           	opt stack 0
   872  000064                     i1i2c_write@addr:
   873                           	opt stack 0
   874  000064                     ___awmod@dividend:
   875                           	opt stack 0
   876                           
   877                           ; 2 bytes @ 0x4
   878  000064                     	ds	1
   879  000065                     i1i2c_write@reg_addr:
   880                           	opt stack 0
   881  000065                     i1i2c_read@addr:
   882                           	opt stack 0
   883  000065                     set_pixel_pwm@clr:
   884                           	opt stack 0
   885                           
   886                           ; 2 bytes @ 0x5
   887  000065                     	ds	1
   888  000066                     ?i1_i2c_write_single:
   889                           	opt stack 0
   890  000066                     i1i2c_write_single@addr:
   891                           	opt stack 0
   892  000066                     ___awmod@divisor:
   893                           	opt stack 0
   894  000066                     i1i2c_read@index:
   895                           	opt stack 0
   896                           
   897                           ; 2 bytes @ 0x6
   898  000066                     	ds	1
   899  000067                     i1i2c_write_single@reg_addr:
   900                           	opt stack 0
   901  000067                     set_pixel_pwm@board:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x7
   905  000067                     	ds	1
   906  000068                     ?_get_time:
   907                           	opt stack 0
   908  000068                     ?i1_set_page:
   909                           	opt stack 0
   910  000068                     ___awmod@counter:
   911                           	opt stack 0
   912  000068                     i1set_page@page:
   913                           	opt stack 0
   914                           
   915                           ; 2 bytes @ 0x8
   916  000068                     	ds	1
   917  000069                     ___awmod@sign:
   918                           	opt stack 0
   919  000069                     set_pixel_pwm@index:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x9
   923  000069                     	ds	1
   924  00006A                     ??_get_time:
   925  00006A                     i1set_page@cont_addr:
   926                           	opt stack 0
   927  00006A                     get_random_color@clr:
   928                           	opt stack 0
   929                           
   930                           ; 2 bytes @ 0xA
   931  00006A                     	ds	1
   932  00006B                     set_pixel@x:
   933                           	opt stack 0
   934  00006B                     i1set_page@succ:
   935                           	opt stack 0
   936                           
   937                           ; 2 bytes @ 0xB
   938  00006B                     	ds	1
   939  00006C                     get_time@data:
   940                           	opt stack 0
   941                           
   942                           ; 7 bytes @ 0xC
   943  00006C                     	ds	1
   944  00006D                     ??_refresh_led:
   945  00006D                     set_pixel@y:
   946                           	opt stack 0
   947                           
   948                           ; 2 bytes @ 0xD
   949  00006D                     	ds	2
   950  00006F                     refresh_led@succ:
   951                           	opt stack 0
   952  00006F                     set_pixel@clr:
   953                           	opt stack 0
   954                           
   955                           ; 2 bytes @ 0xF
   956  00006F                     	ds	2
   957  000071                     refresh_led@board:
   958                           	opt stack 0
   959  000071                     set_white_pixel@x:
   960                           	opt stack 0
   961  000071                     draw_circle@x0:
   962                           	opt stack 0
   963  000071                     set_gelukkige@clr:
   964                           	opt stack 0
   965  000071                     set_verjaars@clr:
   966                           	opt stack 0
   967  000071                     set_trou@clr:
   968                           	opt stack 0
   969  000071                     set_dag@clr:
   970                           	opt stack 0
   971  000071                     set_minell@clr:
   972                           	opt stack 0
   973  000071                     set_en_mj@clr:
   974                           	opt stack 0
   975  000071                     set_jason@clr:
   976                           	opt stack 0
   977                           
   978                           ; 3 bytes @ 0x11
   979  000071                     	ds	2
   980  000073                     ??_clear_led:
   981  000073                     set_white_pixel@y:
   982                           	opt stack 0
   983  000073                     draw_circle@y0:
   984                           	opt stack 0
   985                           
   986                           ; 2 bytes @ 0x13
   987  000073                     	ds	2
   988  000075                     clear_led@i:
   989                           	opt stack 0
   990  000075                     draw_circle@radius:
   991                           	opt stack 0
   992  000075                     set_white_pixel@white:
   993                           	opt stack 0
   994                           
   995                           ; 3 bytes @ 0x15
   996  000075                     	ds	2
   997  000077                     clear_led@j:
   998                           	opt stack 0
   999  000077                     draw_circle@clr:
  1000                           	opt stack 0
  1001                           
  1002                           ; 2 bytes @ 0x17
  1003  000077                     	ds	2
  1004  000079                     ??_draw_circle:
  1005  000079                     set_time_led@time:
  1006                           	opt stack 0
  1007                           
  1008                           ; 2 bytes @ 0x19
  1009  000079                     	ds	2
  1010  00007B                     ??_set_time_led:
  1011                           
  1012                           ; 1 bytes @ 0x1B
  1013  00007B                     	ds	2
  1014  00007D                     draw_circle@dy:
  1015                           	opt stack 0
  1016  00007D                     set_time_led@hour:
  1017                           	opt stack 0
  1018                           
  1019                           ; 2 bytes @ 0x1D
  1020  00007D                     	ds	2
  1021  00007F                     draw_circle@dx:
  1022                           	opt stack 0
  1023  00007F                     set_time_led@teen:
  1024                           	opt stack 0
  1025                           
  1026                           ; 2 bytes @ 0x1F
  1027  00007F                     	ds	2
  1028  000081                     draw_circle@err:
  1029                           	opt stack 0
  1030  000081                     set_time_led@min:
  1031                           	opt stack 0
  1032                           
  1033                           ; 2 bytes @ 0x21
  1034  000081                     	ds	2
  1035  000083                     draw_circle@x:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x23
  1039  000083                     	ds	2
  1040  000085                     draw_circle@y:
  1041                           	opt stack 0
  1042                           
  1043                           ; 2 bytes @ 0x25
  1044  000085                     	ds	2
  1045  000087                     ??_set_load_led:
  1046                           
  1047                           ; 1 bytes @ 0x27
  1048  000087                     	ds	2
  1049  000089                     set_load_led@x:
  1050                           	opt stack 0
  1051                           
  1052                           ; 2 bytes @ 0x29
  1053  000089                     	ds	2
  1054  00008B                     set_load_led@y:
  1055                           	opt stack 0
  1056                           
  1057                           ; 2 bytes @ 0x2B
  1058  00008B                     	ds	2
  1059  00008D                     set_load_led@radius:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x2D
  1063  00008D                     	ds	2
  1064  00008F                     set_load_led@color:
  1065                           	opt stack 0
  1066                           
  1067                           ; 3 bytes @ 0x2F
  1068  00008F                     	ds	3
  1069  000092                     screen_update@time:
  1070                           	opt stack 0
  1071                           
  1072                           ; 2 bytes @ 0x32
  1073  000092                     	ds	2
  1074  000094                     ??_low_pri_isr:
  1075                           
  1076                           ; 1 bytes @ 0x34
  1077  000094                     	ds	21
  1078                           tblptru	equ	0xFF8
  1079                           tblptrh	equ	0xFF7
  1080                           tblptrl	equ	0xFF6
  1081                           tablat	equ	0xFF5
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           postdec1	equ	0xFE5
  1085                           fsr1h	equ	0xFE2
  1086                           fsr1l	equ	0xFE1
  1087                           
  1088                           	psect	cstackCOMRAM
  1089  000001                     __pcstackCOMRAM:
  1090                           	opt stack 0
  1091  000001                     ??_process_adc:
  1092  000001                     ?_bt_msg_received:
  1093                           	opt stack 0
  1094  000001                     ?i2___wmul:
  1095                           	opt stack 0
  1096  000001                     process_usb_serial@data:
  1097                           	opt stack 0
  1098  000001                     i2___wmul@multiplier:
  1099                           	opt stack 0
  1100                           
  1101                           ; 2 bytes @ 0x0
  1102  000001                     	ds	2
  1103  000003                     process_bt_serial@data:
  1104                           	opt stack 0
  1105  000003                     i2___wmul@multiplicand:
  1106                           	opt stack 0
  1107                           
  1108                           ; 2 bytes @ 0x2
  1109  000003                     	ds	2
  1110  000005                     i2___wmul@product:
  1111                           	opt stack 0
  1112                           
  1113                           ; 2 bytes @ 0x4
  1114  000005                     	ds	2
  1115  000007                     ??_pwm_process:
  1116                           
  1117                           ; 1 bytes @ 0x6
  1118  000007                     	ds	2
  1119  000009                     _pwm_process$892:
  1120                           	opt stack 0
  1121                           
  1122                           ; 1 bytes @ 0x8
  1123  000009                     	ds	1
  1124  00000A                     _pwm_process$893:
  1125                           	opt stack 0
  1126                           
  1127                           ; 1 bytes @ 0x9
  1128  00000A                     	ds	1
  1129  00000B                     ??_high_pri_isr:
  1130                           
  1131                           ; 1 bytes @ 0xA
  1132  00000B                     	ds	18
  1133  00001D                     ??i1_I2C_Master_Wait:
  1134  00001D                     ?_time_needs_to_be_set:
  1135                           	opt stack 0
  1136  00001D                     ?___wmul:
  1137                           	opt stack 0
  1138  00001D                     ?___lwdiv:
  1139                           	opt stack 0
  1140  00001D                     ?___lmul:
  1141                           	opt stack 0
  1142  00001D                     ___wmul@multiplier:
  1143                           	opt stack 0
  1144  00001D                     ___lwdiv@dividend:
  1145                           	opt stack 0
  1146  00001D                     i1set_status_led@status:
  1147                           	opt stack 0
  1148  00001D                     ___lmul@multiplier:
  1149                           	opt stack 0
  1150                           
  1151                           ; 4 bytes @ 0x1C
  1152  00001D                     	ds	1
  1153  00001E                     ?i1_I2C_Master_Read:
  1154                           	opt stack 0
  1155  00001E                     i1I2C_Master_Write@d:
  1156                           	opt stack 0
  1157  00001E                     i1I2C_Master_Read@final_read:
  1158                           	opt stack 0
  1159                           
  1160                           ; 2 bytes @ 0x1D
  1161  00001E                     	ds	1
  1162  00001F                     ___wmul@multiplicand:
  1163                           	opt stack 0
  1164  00001F                     ___lwdiv@divisor:
  1165                           	opt stack 0
  1166  00001F                     i1set_status_led@error_override:
  1167                           	opt stack 0
  1168                           
  1169                           ; 2 bytes @ 0x1E
  1170  00001F                     	ds	1
  1171  000020                     i1I2C_Master_Read@temp:
  1172                           	opt stack 0
  1173                           
  1174                           ; 2 bytes @ 0x1F
  1175  000020                     	ds	1
  1176  000021                     ??i1_set_status_led:
  1177  000021                     ___lwdiv@counter:
  1178                           	opt stack 0
  1179  000021                     ___wmul@product:
  1180                           	opt stack 0
  1181  000021                     ___lmul@multiplicand:
  1182                           	opt stack 0
  1183                           
  1184                           ; 4 bytes @ 0x20
  1185  000021                     	ds	1
  1186  000022                     ?i1_i2c_read:
  1187                           	opt stack 0
  1188  000022                     i1i2c_read@reg_addr:
  1189                           	opt stack 0
  1190  000022                     ___lwdiv@quotient:
  1191                           	opt stack 0
  1192                           
  1193                           ; 2 bytes @ 0x21
  1194  000022                     	ds	1
  1195  000023                     ??_audio_jack_process:
  1196  000023                     ??i1_i2c_write:
  1197  000023                     set_error_state@error:
  1198                           	opt stack 0
  1199  000023                     i1i2c_read@data_read_len:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0x22
  1203  000023                     	ds	1
  1204  000024                     ??_set_pixel_pwm:
  1205  000024                     i1i2c_write@index:
  1206                           	opt stack 0
  1207                           
  1208                           ; 2 bytes @ 0x23
  1209  000024                     	ds	1
  1210  000025                     ??_prog_sw_process:
  1211  000025                     ?_rand:
  1212                           	opt stack 0
  1213  000025                     i1i2c_read@data:
  1214                           	opt stack 0
  1215                           
  1216                           ; 2 bytes @ 0x24
  1217  000025                     	ds	1
  1218  000026                     i1i2c_write_single@data:
  1219                           	opt stack 0
  1220                           
  1221                           ; 1 bytes @ 0x25
  1222  000026                     	ds	1
  1223  000027                     tblptru	equ	0xFF8
  1224                           tblptrh	equ	0xFF7
  1225                           tblptrl	equ	0xFF6
  1226                           tablat	equ	0xFF5
  1227                           postinc0	equ	0xFEE
  1228                           wreg	equ	0xFE8
  1229                           postdec1	equ	0xFE5
  1230                           fsr1h	equ	0xFE2
  1231                           fsr1l	equ	0xFE1
  1232                           
  1233                           ; 1 bytes @ 0x26
  1234 ;;
  1235 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1236 ;;
  1237 ;; *************** function _main *****************
  1238 ;; Defined at:
  1239 ;;		line 27 in file "main.c"
  1240 ;; Parameters:    Size  Location     Type
  1241 ;;		None
  1242 ;; Auto vars:     Size  Location     Type
  1243 ;;  n               1  192[BANK8 ] unsigned char 
  1244 ;;  board           2  196[BANK8 ] int 
  1245 ;;  i               2  194[BANK8 ] unsigned int 
  1246 ;;  all_on        192    0[BANK8 ] unsigned char [192]
  1247 ;;  m               1  193[BANK8 ] unsigned char 
  1248 ;; Return value:  Size  Location     Type
  1249 ;;                  1    wreg      void 
  1250 ;; Registers used:
  1251 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1252 ;; Tracked objects:
  1253 ;;		On entry : 0/0
  1254 ;;		On exit  : 0/0
  1255 ;;		Unchanged: 0/0
  1256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1257 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1258 ;;      Locals:         0       0       0       0       0       0       0       0       0     198       0       0       
      +0       0       0       0
  1259 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1260 ;;      Totals:         0       0       2       0       0       0       0       0       0     198       0       0       
      +0       0       0       0
  1261 ;;Total ram usage:      200 bytes
  1262 ;; Hardware stack levels required when called:   19
  1263 ;; This function calls:
  1264 ;;		_i2c_read_single
  1265 ;;		_i2c_write
  1266 ;;		_i2c_write_single
  1267 ;;		_init_comm
  1268 ;;		_init_io
  1269 ;;		_init_led
  1270 ;;		_init_pwm
  1271 ;;		_set_page
  1272 ;;		_set_status_led
  1273 ;; This function is called by:
  1274 ;;		Startup code after reset
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278                           	psect	text0
  1279  000F06                     __ptext0:
  1280                           	opt stack 0
  1281  000F06                     _main:
  1282                           	opt stack 12
  1283                           
  1284                           ;main.c: 29: PCON0;
  1285                           
  1286                           ;incstack = 0
  1287  000F06  50D7               	movf	4055,w,c	;volatile
  1288                           
  1289                           ;main.c: 31: init_io();
  1290  000F08  EC0D  F01B         	call	_init_io	;wreg free
  1291                           
  1292                           ;main.c: 33: init_pwm();
  1293  000F0C  EC4B  F01D         	call	_init_pwm	;wreg free
  1294                           
  1295                           ;main.c: 35: init_comm();
  1296  000F10  ECCE  F025         	call	_init_comm	;wreg free
  1297                           
  1298                           ;main.c: 47: init_led();
  1299  000F14  EC54  F00F         	call	_init_led	;wreg free
  1300                           
  1301                           ;main.c: 55: _delay((unsigned long)((1000)*(64000000/4000.0)));
  1302  000F18  0E52               	movlw	82
  1303  000F1A  0101               	movlb	1	; () banked
  1304  000F1C  6F36               	movwf	(??_main+1)& (0+255),b
  1305  000F1E  0E2B               	movlw	43
  1306  000F20  0101               	movlb	1	; () banked
  1307  000F22  6F35               	movwf	??_main& (0+255),b
  1308  000F24  0E00               	movlw	0
  1309  000F26                     u10467:
  1310  000F26  2EE8               	decfsz	wreg,f,c
  1311  000F28  D7FE               	bra	u10467
  1312  000F2A  2F35               	decfsz	??_main& (0+255),f,b
  1313  000F2C  D7FC               	bra	u10467
  1314  000F2E  2F36               	decfsz	(??_main+1)& (0+255),f,b
  1315  000F30  D7FA               	bra	u10467
  1316  000F32  F000               	nop	
  1317                           
  1318                           ;main.c: 64: char all_on[192];
  1319                           ;main.c: 65: for(unsigned int i = 0; i < 192; i++)
  1320  000F34  0E00               	movlw	0
  1321  000F36  0108               	movlb	8	; () banked
  1322  000F38  6FC3               	movwf	(main@i+1)& (0+255),b
  1323  000F3A  0E00               	movlw	0
  1324  000F3C  6FC2               	movwf	main@i& (0+255),b
  1325  000F3E                     l6129:
  1326                           
  1327                           ; BSR set to: 8
  1328  000F3E  0108               	movlb	8	; () banked
  1329  000F40  51C3               	movf	(main@i+1)& (0+255),w,b
  1330  000F42  E113               	bnz	l6139
  1331  000F44  0EC0               	movlw	192
  1332  000F46  0108               	movlb	8	; () banked
  1333  000F48  5DC2               	subwf	main@i& (0+255),w,b
  1334  000F4A  B0D8               	btfsc	status,0,c
  1335  000F4C  D00E               	goto	u8830
  1336                           
  1337                           ; BSR set to: 8
  1338                           ;main.c: 66: all_on[i] = 0xFF;
  1339                           
  1340                           ; BSR set to: 8
  1341                           
  1342                           ; BSR set to: 8
  1343  000F4E  0E00               	movlw	low main@all_on
  1344  000F50  0108               	movlb	8	; () banked
  1345  000F52  25C2               	addwf	main@i& (0+255),w,b
  1346  000F54  6ED9               	movwf	fsr2l,c
  1347  000F56  0E08               	movlw	high main@all_on
  1348  000F58  0108               	movlb	8	; () banked
  1349  000F5A  21C3               	addwfc	(main@i+1)& (0+255),w,b
  1350  000F5C  6EDA               	movwf	fsr2h,c
  1351  000F5E  0EFF               	movlw	255
  1352  000F60  6EDF               	movwf	indf2,c
  1353                           
  1354                           ; BSR set to: 8
  1355  000F62  0108               	movlb	8	; () banked
  1356  000F64  4BC2               	infsnz	main@i& (0+255),f,b
  1357  000F66  2BC3               	incf	(main@i+1)& (0+255),f,b
  1358  000F68  D7EA               	goto	l6129
  1359  000F6A                     u8830:
  1360  000F6A                     l6139:
  1361                           
  1362                           ; BSR set to: 8
  1363                           ;main.c: 67: _delay((unsigned long)((10)*(64000000/4000.0)));
  1364  000F6A  0ED0               	movlw	208
  1365  000F6C  0101               	movlb	1	; () banked
  1366  000F6E  6F35               	movwf	??_main& (0+255),b
  1367  000F70  0EC9               	movlw	201
  1368  000F72                     u10477:
  1369  000F72  2EE8               	decfsz	wreg,f,c
  1370  000F74  D7FE               	bra	u10477
  1371  000F76  2F35               	decfsz	??_main& (0+255),f,b
  1372  000F78  D7FC               	bra	u10477
  1373  000F7A  D000               	nop2	
  1374                           
  1375                           ;main.c: 68: set_page(0, (char)((2 == 0)*0b10111110 + (2 == 1)*0b10100000 + (2 == 2)*0b1
      +                          0100110));
  1376  000F7C  0E00               	movlw	0
  1377  000F7E  0101               	movlb	1	; () banked
  1378  000F80  6F13               	movwf	(set_page@page+1)& (0+255),b
  1379  000F82  0E00               	movlw	0
  1380  000F84  6F12               	movwf	set_page@page& (0+255),b
  1381  000F86  0EA6               	movlw	166
  1382  000F88  0101               	movlb	1	; () banked
  1383  000F8A  6F14               	movwf	set_page@cont_addr& (0+255),b
  1384  000F8C  EC87  F024         	call	_set_page	;wreg free
  1385                           
  1386                           ;main.c: 69: _delay((unsigned long)((10)*(64000000/4000.0)));
  1387  000F90  0ED0               	movlw	208
  1388  000F92  0101               	movlb	1	; () banked
  1389  000F94  6F35               	movwf	??_main& (0+255),b
  1390  000F96  0EC9               	movlw	201
  1391  000F98                     u10487:
  1392  000F98  2EE8               	decfsz	wreg,f,c
  1393  000F9A  D7FE               	bra	u10487
  1394  000F9C  2F35               	decfsz	??_main& (0+255),f,b
  1395  000F9E  D7FC               	bra	u10487
  1396  000FA0  D000               	nop2	
  1397                           
  1398                           ;main.c: 70: char m = i2c_read_single((char)((2 == 0)*0b10111110 + (2 == 1)*0b10100000 +
      +                           (2 == 2)*0b10100110), 0x11);
  1399  000FA2  0E11               	movlw	17
  1400  000FA4  0101               	movlb	1	; () banked
  1401  000FA6  6F12               	movwf	i2c_read_single@reg_addr& (0+255),b
  1402  000FA8  0EA6               	movlw	166
  1403  000FAA  EC7E  F025         	call	_i2c_read_single
  1404  000FAE  0108               	movlb	8	; () banked
  1405  000FB0  6FC1               	movwf	main@m& (0+255),b
  1406  000FB2                     l6145:
  1407                           
  1408                           ; BSR set to: 8
  1409                           ;main.c: 72: {
  1410                           ;main.c: 73: for(int board = 2; board < 3; board++)
  1411  000FB2  0E00               	movlw	0
  1412  000FB4  0108               	movlb	8	; () banked
  1413  000FB6  6FC5               	movwf	(main@board+1)& (0+255),b
  1414  000FB8  0E02               	movlw	2
  1415  000FBA  6FC4               	movwf	main@board& (0+255),b
  1416                           
  1417                           ; BSR set to: 8
  1418  000FBC  0108               	movlb	8	; () banked
  1419  000FBE  BFC5               	btfsc	(main@board+1)& (0+255),7,b
  1420  000FC0  D008               	goto	l70
  1421  000FC2  0108               	movlb	8	; () banked
  1422  000FC4  51C5               	movf	(main@board+1)& (0+255),w,b
  1423  000FC6  E1F5               	bnz	l6145
  1424  000FC8  0E03               	movlw	3
  1425  000FCA  0108               	movlb	8	; () banked
  1426  000FCC  5DC4               	subwf	main@board& (0+255),w,b
  1427  000FCE  B0D8               	btfsc	status,0,c
  1428  000FD0  D7F0               	goto	l69
  1429  000FD2                     l70:
  1430                           
  1431                           ; BSR set to: 8
  1432                           ;main.c: 74: {
  1433                           ;main.c: 75: set_page(3, (char)((board == 0)*0b10111110 + (board == 1)*0b10100000 + (boa
      +                          rd == 2)*0b10100110));
  1434                           
  1435                           ; BSR set to: 8
  1436  000FD2  0E00               	movlw	0
  1437  000FD4  0101               	movlb	1	; () banked
  1438  000FD6  6F13               	movwf	(set_page@page+1)& (0+255),b
  1439  000FD8  0E03               	movlw	3
  1440  000FDA  6F12               	movwf	set_page@page& (0+255),b
  1441  000FDC  0E02               	movlw	2
  1442  000FDE  0108               	movlb	8	; () banked
  1443  000FE0  19C4               	xorwf	main@board& (0+255),w,b
  1444  000FE2  0108               	movlb	8	; () banked
  1445  000FE4  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1446  000FE6  A4D8               	btfss	status,2,c
  1447  000FE8  D002               	goto	u8850
  1448  000FEA  0E01               	movlw	1
  1449  000FEC  D001               	goto	u8860
  1450  000FEE                     u8850:
  1451  000FEE  0E00               	movlw	0
  1452  000FF0                     u8860:
  1453  000FF0  0DA6               	mullw	166
  1454  000FF2  CFF3 F135          	movff	prodl,??_main
  1455  000FF6  0108               	movlb	8	; () banked
  1456  000FF8  05C4               	decf	main@board& (0+255),w,b
  1457  000FFA  0108               	movlb	8	; () banked
  1458  000FFC  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1459  000FFE  A4D8               	btfss	status,2,c
  1460  001000  D002               	goto	u8870
  1461  001002  0E01               	movlw	1
  1462  001004  D001               	goto	u8880
  1463  001006                     u8870:
  1464  001006  0E00               	movlw	0
  1465  001008                     u8880:
  1466  001008  0DA0               	mullw	160
  1467  00100A  CFF3 F136          	movff	prodl,??_main+1
  1468  00100E  0108               	movlb	8	; () banked
  1469  001010  51C4               	movf	main@board& (0+255),w,b
  1470  001012  0108               	movlb	8	; () banked
  1471  001014  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1472  001016  A4D8               	btfss	status,2,c
  1473  001018  D002               	goto	u8890
  1474  00101A  0E01               	movlw	1
  1475  00101C  D001               	goto	u8900
  1476  00101E                     u8890:
  1477  00101E  0E00               	movlw	0
  1478  001020                     u8900:
  1479  001020  0DBE               	mullw	190
  1480  001022  50F3               	movf	prodl,w,c
  1481  001024  0101               	movlb	1	; () banked
  1482  001026  2536               	addwf	(??_main+1)& (0+255),w,b
  1483  001028  0101               	movlb	1	; () banked
  1484  00102A  2535               	addwf	??_main& (0+255),w,b
  1485  00102C  0101               	movlb	1	; () banked
  1486  00102E  6F14               	movwf	set_page@cont_addr& (0+255),b
  1487  001030  EC87  F024         	call	_set_page	;wreg free
  1488                           
  1489                           ;main.c: 76: _delay((unsigned long)((10)*(64000000/4000.0)));
  1490  001034  0ED0               	movlw	208
  1491  001036  0101               	movlb	1	; () banked
  1492  001038  6F35               	movwf	??_main& (0+255),b
  1493  00103A  0EC9               	movlw	201
  1494  00103C                     u10497:
  1495  00103C  2EE8               	decfsz	wreg,f,c
  1496  00103E  D7FE               	bra	u10497
  1497  001040  2F35               	decfsz	??_main& (0+255),f,b
  1498  001042  D7FC               	bra	u10497
  1499  001044  D000               	nop2	
  1500                           
  1501                           ;main.c: 77: i2c_write_single(255, (char)((board == 0)*0b10111110 + (board == 1)*0b10100
      +                          000 + (board == 2)*0b10100110), 0x01);
  1502  001046  0E02               	movlw	2
  1503  001048  0108               	movlb	8	; () banked
  1504  00104A  19C4               	xorwf	main@board& (0+255),w,b
  1505  00104C  0108               	movlb	8	; () banked
  1506  00104E  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1507  001050  A4D8               	btfss	status,2,c
  1508  001052  D002               	goto	u8910
  1509  001054  0E01               	movlw	1
  1510  001056  D001               	goto	u8920
  1511  001058                     u8910:
  1512  001058  0E00               	movlw	0
  1513  00105A                     u8920:
  1514  00105A  0DA6               	mullw	166
  1515  00105C  CFF3 F135          	movff	prodl,??_main
  1516  001060  0108               	movlb	8	; () banked
  1517  001062  05C4               	decf	main@board& (0+255),w,b
  1518  001064  0108               	movlb	8	; () banked
  1519  001066  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1520  001068  A4D8               	btfss	status,2,c
  1521  00106A  D002               	goto	u8930
  1522  00106C  0E01               	movlw	1
  1523  00106E  D001               	goto	u8940
  1524  001070                     u8930:
  1525  001070  0E00               	movlw	0
  1526  001072                     u8940:
  1527  001072  0DA0               	mullw	160
  1528  001074  CFF3 F136          	movff	prodl,??_main+1
  1529  001078  0108               	movlb	8	; () banked
  1530  00107A  51C4               	movf	main@board& (0+255),w,b
  1531  00107C  0108               	movlb	8	; () banked
  1532  00107E  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1533  001080  A4D8               	btfss	status,2,c
  1534  001082  D002               	goto	u8950
  1535  001084  0E01               	movlw	1
  1536  001086  D001               	goto	u8960
  1537  001088                     u8950:
  1538  001088  0E00               	movlw	0
  1539  00108A                     u8960:
  1540  00108A  0DBE               	mullw	190
  1541  00108C  50F3               	movf	prodl,w,c
  1542  00108E  0101               	movlb	1	; () banked
  1543  001090  2536               	addwf	(??_main+1)& (0+255),w,b
  1544  001092  0101               	movlb	1	; () banked
  1545  001094  2535               	addwf	??_main& (0+255),w,b
  1546  001096  0101               	movlb	1	; () banked
  1547  001098  6F0F               	movwf	i2c_write_single@addr& (0+255),b
  1548  00109A  0E01               	movlw	1
  1549  00109C  0101               	movlb	1	; () banked
  1550  00109E  6F10               	movwf	i2c_write_single@reg_addr& (0+255),b
  1551  0010A0  0EFF               	movlw	255
  1552  0010A2  EC38  F025         	call	_i2c_write_single
  1553                           
  1554                           ;main.c: 78: _delay((unsigned long)((10)*(64000000/4000.0)));
  1555  0010A6  0ED0               	movlw	208
  1556  0010A8  0101               	movlb	1	; () banked
  1557  0010AA  6F35               	movwf	??_main& (0+255),b
  1558  0010AC  0EC9               	movlw	201
  1559  0010AE                     u10507:
  1560  0010AE  2EE8               	decfsz	wreg,f,c
  1561  0010B0  D7FE               	bra	u10507
  1562  0010B2  2F35               	decfsz	??_main& (0+255),f,b
  1563  0010B4  D7FC               	bra	u10507
  1564  0010B6  D000               	nop2	
  1565                           
  1566                           ;main.c: 79: set_page(0, (char)((board == 0)*0b10111110 + (board == 1)*0b10100000 + (boa
      +                          rd == 2)*0b10100110));
  1567  0010B8  0E00               	movlw	0
  1568  0010BA  0101               	movlb	1	; () banked
  1569  0010BC  6F13               	movwf	(set_page@page+1)& (0+255),b
  1570  0010BE  0E00               	movlw	0
  1571  0010C0  6F12               	movwf	set_page@page& (0+255),b
  1572  0010C2  0E02               	movlw	2
  1573  0010C4  0108               	movlb	8	; () banked
  1574  0010C6  19C4               	xorwf	main@board& (0+255),w,b
  1575  0010C8  0108               	movlb	8	; () banked
  1576  0010CA  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1577  0010CC  A4D8               	btfss	status,2,c
  1578  0010CE  D002               	goto	u8970
  1579  0010D0  0E01               	movlw	1
  1580  0010D2  D001               	goto	u8980
  1581  0010D4                     u8970:
  1582  0010D4  0E00               	movlw	0
  1583  0010D6                     u8980:
  1584  0010D6  0DA6               	mullw	166
  1585  0010D8  CFF3 F135          	movff	prodl,??_main
  1586  0010DC  0108               	movlb	8	; () banked
  1587  0010DE  05C4               	decf	main@board& (0+255),w,b
  1588  0010E0  0108               	movlb	8	; () banked
  1589  0010E2  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1590  0010E4  A4D8               	btfss	status,2,c
  1591  0010E6  D002               	goto	u8990
  1592  0010E8  0E01               	movlw	1
  1593  0010EA  D001               	goto	u9000
  1594  0010EC                     u8990:
  1595  0010EC  0E00               	movlw	0
  1596  0010EE                     u9000:
  1597  0010EE  0DA0               	mullw	160
  1598  0010F0  CFF3 F136          	movff	prodl,??_main+1
  1599  0010F4  0108               	movlb	8	; () banked
  1600  0010F6  51C4               	movf	main@board& (0+255),w,b
  1601  0010F8  0108               	movlb	8	; () banked
  1602  0010FA  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1603  0010FC  A4D8               	btfss	status,2,c
  1604  0010FE  D002               	goto	u9010
  1605  001100  0E01               	movlw	1
  1606  001102  D001               	goto	u9020
  1607  001104                     u9010:
  1608  001104  0E00               	movlw	0
  1609  001106                     u9020:
  1610  001106  0DBE               	mullw	190
  1611  001108  50F3               	movf	prodl,w,c
  1612  00110A  0101               	movlb	1	; () banked
  1613  00110C  2536               	addwf	(??_main+1)& (0+255),w,b
  1614  00110E  0101               	movlb	1	; () banked
  1615  001110  2535               	addwf	??_main& (0+255),w,b
  1616  001112  0101               	movlb	1	; () banked
  1617  001114  6F14               	movwf	set_page@cont_addr& (0+255),b
  1618  001116  EC87  F024         	call	_set_page	;wreg free
  1619                           
  1620                           ;main.c: 80: _delay((unsigned long)((10)*(64000000/4000.0)));
  1621  00111A  0ED0               	movlw	208
  1622  00111C  0101               	movlb	1	; () banked
  1623  00111E  6F35               	movwf	??_main& (0+255),b
  1624  001120  0EC9               	movlw	201
  1625  001122                     u10517:
  1626  001122  2EE8               	decfsz	wreg,f,c
  1627  001124  D7FE               	bra	u10517
  1628  001126  2F35               	decfsz	??_main& (0+255),f,b
  1629  001128  D7FC               	bra	u10517
  1630  00112A  D000               	nop2	
  1631                           
  1632                           ;main.c: 81: i2c_write(all_on, 0xBF, (char)((board == 0)*0b10111110 + (board == 1)*0b101
      +                          00000 + (board == 2)*0b10100110), 0x00);
  1633  00112C  0E00               	movlw	low main@all_on
  1634  00112E  0101               	movlb	1	; () banked
  1635  001130  6F06               	movwf	i2c_write@data& (0+255),b
  1636  001132  0E08               	movlw	high main@all_on
  1637  001134  0101               	movlb	1	; () banked
  1638  001136  6F07               	movwf	(i2c_write@data+1)& (0+255),b
  1639  001138  0E00               	movlw	0
  1640  00113A  0101               	movlb	1	; () banked
  1641  00113C  6F09               	movwf	(i2c_write@data_len+1)& (0+255),b
  1642  00113E  0EBF               	movlw	191
  1643  001140  6F08               	movwf	i2c_write@data_len& (0+255),b
  1644  001142  0E02               	movlw	2
  1645  001144  0108               	movlb	8	; () banked
  1646  001146  19C4               	xorwf	main@board& (0+255),w,b
  1647  001148  0108               	movlb	8	; () banked
  1648  00114A  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1649  00114C  A4D8               	btfss	status,2,c
  1650  00114E  D002               	goto	u9030
  1651  001150  0E01               	movlw	1
  1652  001152  D001               	goto	u9040
  1653  001154                     u9030:
  1654  001154  0E00               	movlw	0
  1655  001156                     u9040:
  1656  001156  0DA6               	mullw	166
  1657  001158  CFF3 F135          	movff	prodl,??_main
  1658  00115C  0108               	movlb	8	; () banked
  1659  00115E  05C4               	decf	main@board& (0+255),w,b
  1660  001160  0108               	movlb	8	; () banked
  1661  001162  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1662  001164  A4D8               	btfss	status,2,c
  1663  001166  D002               	goto	u9050
  1664  001168  0E01               	movlw	1
  1665  00116A  D001               	goto	u9060
  1666  00116C                     u9050:
  1667  00116C  0E00               	movlw	0
  1668  00116E                     u9060:
  1669  00116E  0DA0               	mullw	160
  1670  001170  CFF3 F136          	movff	prodl,??_main+1
  1671  001174  0108               	movlb	8	; () banked
  1672  001176  51C4               	movf	main@board& (0+255),w,b
  1673  001178  0108               	movlb	8	; () banked
  1674  00117A  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1675  00117C  A4D8               	btfss	status,2,c
  1676  00117E  D002               	goto	u9070
  1677  001180  0E01               	movlw	1
  1678  001182  D001               	goto	u9080
  1679  001184                     u9070:
  1680  001184  0E00               	movlw	0
  1681  001186                     u9080:
  1682  001186  0DBE               	mullw	190
  1683  001188  50F3               	movf	prodl,w,c
  1684  00118A  0101               	movlb	1	; () banked
  1685  00118C  2536               	addwf	(??_main+1)& (0+255),w,b
  1686  00118E  0101               	movlb	1	; () banked
  1687  001190  2535               	addwf	??_main& (0+255),w,b
  1688  001192  0101               	movlb	1	; () banked
  1689  001194  6F0A               	movwf	i2c_write@addr& (0+255),b
  1690  001196  0E00               	movlw	0
  1691  001198  0101               	movlb	1	; () banked
  1692  00119A  6F0B               	movwf	i2c_write@reg_addr& (0+255),b
  1693  00119C  EC6A  F015         	call	_i2c_write	;wreg free
  1694                           
  1695                           ;main.c: 82: _delay((unsigned long)((10)*(64000000/4000.0)));
  1696  0011A0  0ED0               	movlw	208
  1697  0011A2  0101               	movlb	1	; () banked
  1698  0011A4  6F35               	movwf	??_main& (0+255),b
  1699  0011A6  0EC9               	movlw	201
  1700  0011A8                     u10527:
  1701  0011A8  2EE8               	decfsz	wreg,f,c
  1702  0011AA  D7FE               	bra	u10527
  1703  0011AC  2F35               	decfsz	??_main& (0+255),f,b
  1704  0011AE  D7FC               	bra	u10527
  1705  0011B0  D000               	nop2	
  1706                           
  1707                           ;main.c: 83: set_page(3, (char)((board == 0)*0b10111110 + (board == 1)*0b10100000 + (boa
      +                          rd == 2)*0b10100110));
  1708  0011B2  0E00               	movlw	0
  1709  0011B4  0101               	movlb	1	; () banked
  1710  0011B6  6F13               	movwf	(set_page@page+1)& (0+255),b
  1711  0011B8  0E03               	movlw	3
  1712  0011BA  6F12               	movwf	set_page@page& (0+255),b
  1713  0011BC  0E02               	movlw	2
  1714  0011BE  0108               	movlb	8	; () banked
  1715  0011C0  19C4               	xorwf	main@board& (0+255),w,b
  1716  0011C2  0108               	movlb	8	; () banked
  1717  0011C4  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1718  0011C6  A4D8               	btfss	status,2,c
  1719  0011C8  D002               	goto	u9090
  1720  0011CA  0E01               	movlw	1
  1721  0011CC  D001               	goto	u9100
  1722  0011CE                     u9090:
  1723  0011CE  0E00               	movlw	0
  1724  0011D0                     u9100:
  1725  0011D0  0DA6               	mullw	166
  1726  0011D2  CFF3 F135          	movff	prodl,??_main
  1727  0011D6  0108               	movlb	8	; () banked
  1728  0011D8  05C4               	decf	main@board& (0+255),w,b
  1729  0011DA  0108               	movlb	8	; () banked
  1730  0011DC  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1731  0011DE  A4D8               	btfss	status,2,c
  1732  0011E0  D002               	goto	u9110
  1733  0011E2  0E01               	movlw	1
  1734  0011E4  D001               	goto	u9120
  1735  0011E6                     u9110:
  1736  0011E6  0E00               	movlw	0
  1737  0011E8                     u9120:
  1738  0011E8  0DA0               	mullw	160
  1739  0011EA  CFF3 F136          	movff	prodl,??_main+1
  1740  0011EE  0108               	movlb	8	; () banked
  1741  0011F0  51C4               	movf	main@board& (0+255),w,b
  1742  0011F2  0108               	movlb	8	; () banked
  1743  0011F4  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1744  0011F6  A4D8               	btfss	status,2,c
  1745  0011F8  D002               	goto	u9130
  1746  0011FA  0E01               	movlw	1
  1747  0011FC  D001               	goto	u9140
  1748  0011FE                     u9130:
  1749  0011FE  0E00               	movlw	0
  1750  001200                     u9140:
  1751  001200  0DBE               	mullw	190
  1752  001202  50F3               	movf	prodl,w,c
  1753  001204  0101               	movlb	1	; () banked
  1754  001206  2536               	addwf	(??_main+1)& (0+255),w,b
  1755  001208  0101               	movlb	1	; () banked
  1756  00120A  2535               	addwf	??_main& (0+255),w,b
  1757  00120C  0101               	movlb	1	; () banked
  1758  00120E  6F14               	movwf	set_page@cont_addr& (0+255),b
  1759  001210  EC87  F024         	call	_set_page	;wreg free
  1760                           
  1761                           ;main.c: 84: _delay((unsigned long)((10)*(64000000/4000.0)));
  1762  001214  0ED0               	movlw	208
  1763  001216  0101               	movlb	1	; () banked
  1764  001218  6F35               	movwf	??_main& (0+255),b
  1765  00121A  0EC9               	movlw	201
  1766  00121C                     u10537:
  1767  00121C  2EE8               	decfsz	wreg,f,c
  1768  00121E  D7FE               	bra	u10537
  1769  001220  2F35               	decfsz	??_main& (0+255),f,b
  1770  001222  D7FC               	bra	u10537
  1771  001224  D000               	nop2	
  1772                           
  1773                           ;main.c: 85: i2c_write_single(0b00000101, (char)((board == 0)*0b10111110 + (board == 1)*
      +                          0b10100000 + (board == 2)*0b10100110), 0x00);
  1774  001226  0E02               	movlw	2
  1775  001228  0108               	movlb	8	; () banked
  1776  00122A  19C4               	xorwf	main@board& (0+255),w,b
  1777  00122C  0108               	movlb	8	; () banked
  1778  00122E  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1779  001230  A4D8               	btfss	status,2,c
  1780  001232  D002               	goto	u9150
  1781  001234  0E01               	movlw	1
  1782  001236  D001               	goto	u9160
  1783  001238                     u9150:
  1784  001238  0E00               	movlw	0
  1785  00123A                     u9160:
  1786  00123A  0DA6               	mullw	166
  1787  00123C  CFF3 F135          	movff	prodl,??_main
  1788  001240  0108               	movlb	8	; () banked
  1789  001242  05C4               	decf	main@board& (0+255),w,b
  1790  001244  0108               	movlb	8	; () banked
  1791  001246  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1792  001248  A4D8               	btfss	status,2,c
  1793  00124A  D002               	goto	u9170
  1794  00124C  0E01               	movlw	1
  1795  00124E  D001               	goto	u9180
  1796  001250                     u9170:
  1797  001250  0E00               	movlw	0
  1798  001252                     u9180:
  1799  001252  0DA0               	mullw	160
  1800  001254  CFF3 F136          	movff	prodl,??_main+1
  1801  001258  0108               	movlb	8	; () banked
  1802  00125A  51C4               	movf	main@board& (0+255),w,b
  1803  00125C  0108               	movlb	8	; () banked
  1804  00125E  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1805  001260  A4D8               	btfss	status,2,c
  1806  001262  D002               	goto	u9190
  1807  001264  0E01               	movlw	1
  1808  001266  D001               	goto	u9200
  1809  001268                     u9190:
  1810  001268  0E00               	movlw	0
  1811  00126A                     u9200:
  1812  00126A  0DBE               	mullw	190
  1813  00126C  50F3               	movf	prodl,w,c
  1814  00126E  0101               	movlb	1	; () banked
  1815  001270  2536               	addwf	(??_main+1)& (0+255),w,b
  1816  001272  0101               	movlb	1	; () banked
  1817  001274  2535               	addwf	??_main& (0+255),w,b
  1818  001276  0101               	movlb	1	; () banked
  1819  001278  6F0F               	movwf	i2c_write_single@addr& (0+255),b
  1820  00127A  0E00               	movlw	0
  1821  00127C  0101               	movlb	1	; () banked
  1822  00127E  6F10               	movwf	i2c_write_single@reg_addr& (0+255),b
  1823  001280  0E05               	movlw	5
  1824  001282  EC38  F025         	call	_i2c_write_single
  1825                           
  1826                           ;main.c: 86: _delay((unsigned long)((10)*(64000000/4000.0)));
  1827  001286  0ED0               	movlw	208
  1828  001288  0101               	movlb	1	; () banked
  1829  00128A  6F35               	movwf	??_main& (0+255),b
  1830  00128C  0EC9               	movlw	201
  1831  00128E                     u10547:
  1832  00128E  2EE8               	decfsz	wreg,f,c
  1833  001290  D7FE               	bra	u10547
  1834  001292  2F35               	decfsz	??_main& (0+255),f,b
  1835  001294  D7FC               	bra	u10547
  1836  001296  D000               	nop2	
  1837                           
  1838                           ;main.c: 87: set_page(1, (char)((board == 0)*0b10111110 + (board == 1)*0b10100000 + (boa
      +                          rd == 2)*0b10100110));
  1839  001298  0E00               	movlw	0
  1840  00129A  0101               	movlb	1	; () banked
  1841  00129C  6F13               	movwf	(set_page@page+1)& (0+255),b
  1842  00129E  0E01               	movlw	1
  1843  0012A0  6F12               	movwf	set_page@page& (0+255),b
  1844  0012A2  0E02               	movlw	2
  1845  0012A4  0108               	movlb	8	; () banked
  1846  0012A6  19C4               	xorwf	main@board& (0+255),w,b
  1847  0012A8  0108               	movlb	8	; () banked
  1848  0012AA  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1849  0012AC  A4D8               	btfss	status,2,c
  1850  0012AE  D002               	goto	u9210
  1851  0012B0  0E01               	movlw	1
  1852  0012B2  D001               	goto	u9220
  1853  0012B4                     u9210:
  1854  0012B4  0E00               	movlw	0
  1855  0012B6                     u9220:
  1856  0012B6  0DA6               	mullw	166
  1857  0012B8  CFF3 F135          	movff	prodl,??_main
  1858  0012BC  0108               	movlb	8	; () banked
  1859  0012BE  05C4               	decf	main@board& (0+255),w,b
  1860  0012C0  0108               	movlb	8	; () banked
  1861  0012C2  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1862  0012C4  A4D8               	btfss	status,2,c
  1863  0012C6  D002               	goto	u9230
  1864  0012C8  0E01               	movlw	1
  1865  0012CA  D001               	goto	u9240
  1866  0012CC                     u9230:
  1867  0012CC  0E00               	movlw	0
  1868  0012CE                     u9240:
  1869  0012CE  0DA0               	mullw	160
  1870  0012D0  CFF3 F136          	movff	prodl,??_main+1
  1871  0012D4  0108               	movlb	8	; () banked
  1872  0012D6  51C4               	movf	main@board& (0+255),w,b
  1873  0012D8  0108               	movlb	8	; () banked
  1874  0012DA  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1875  0012DC  A4D8               	btfss	status,2,c
  1876  0012DE  D002               	goto	u9250
  1877  0012E0  0E01               	movlw	1
  1878  0012E2  D001               	goto	u9260
  1879  0012E4                     u9250:
  1880  0012E4  0E00               	movlw	0
  1881  0012E6                     u9260:
  1882  0012E6  0DBE               	mullw	190
  1883  0012E8  50F3               	movf	prodl,w,c
  1884  0012EA  0101               	movlb	1	; () banked
  1885  0012EC  2536               	addwf	(??_main+1)& (0+255),w,b
  1886  0012EE  0101               	movlb	1	; () banked
  1887  0012F0  2535               	addwf	??_main& (0+255),w,b
  1888  0012F2  0101               	movlb	1	; () banked
  1889  0012F4  6F14               	movwf	set_page@cont_addr& (0+255),b
  1890  0012F6  EC87  F024         	call	_set_page	;wreg free
  1891                           
  1892                           ;main.c: 88: _delay((unsigned long)((10)*(64000000/4000.0)));
  1893  0012FA  0ED0               	movlw	208
  1894  0012FC  0101               	movlb	1	; () banked
  1895  0012FE  6F35               	movwf	??_main& (0+255),b
  1896  001300  0EC9               	movlw	201
  1897  001302                     u10557:
  1898  001302  2EE8               	decfsz	wreg,f,c
  1899  001304  D7FE               	bra	u10557
  1900  001306  2F35               	decfsz	??_main& (0+255),f,b
  1901  001308  D7FC               	bra	u10557
  1902  00130A  D000               	nop2	
  1903                           
  1904                           ;main.c: 89: i2c_write_single(0xFF, (char)((board == 0)*0b10111110 + (board == 1)*0b1010
      +                          0000 + (board == 2)*0b10100110), 0x00);
  1905  00130C  0E02               	movlw	2
  1906  00130E  0108               	movlb	8	; () banked
  1907  001310  19C4               	xorwf	main@board& (0+255),w,b
  1908  001312  0108               	movlb	8	; () banked
  1909  001314  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1910  001316  A4D8               	btfss	status,2,c
  1911  001318  D002               	goto	u9270
  1912  00131A  0E01               	movlw	1
  1913  00131C  D001               	goto	u9280
  1914  00131E                     u9270:
  1915  00131E  0E00               	movlw	0
  1916  001320                     u9280:
  1917  001320  0DA6               	mullw	166
  1918  001322  CFF3 F135          	movff	prodl,??_main
  1919  001326  0108               	movlb	8	; () banked
  1920  001328  05C4               	decf	main@board& (0+255),w,b
  1921  00132A  0108               	movlb	8	; () banked
  1922  00132C  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1923  00132E  A4D8               	btfss	status,2,c
  1924  001330  D002               	goto	u9290
  1925  001332  0E01               	movlw	1
  1926  001334  D001               	goto	u9300
  1927  001336                     u9290:
  1928  001336  0E00               	movlw	0
  1929  001338                     u9300:
  1930  001338  0DA0               	mullw	160
  1931  00133A  CFF3 F136          	movff	prodl,??_main+1
  1932  00133E  0108               	movlb	8	; () banked
  1933  001340  51C4               	movf	main@board& (0+255),w,b
  1934  001342  0108               	movlb	8	; () banked
  1935  001344  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1936  001346  A4D8               	btfss	status,2,c
  1937  001348  D002               	goto	u9310
  1938  00134A  0E01               	movlw	1
  1939  00134C  D001               	goto	u9320
  1940  00134E                     u9310:
  1941  00134E  0E00               	movlw	0
  1942  001350                     u9320:
  1943  001350  0DBE               	mullw	190
  1944  001352  50F3               	movf	prodl,w,c
  1945  001354  0101               	movlb	1	; () banked
  1946  001356  2536               	addwf	(??_main+1)& (0+255),w,b
  1947  001358  0101               	movlb	1	; () banked
  1948  00135A  2535               	addwf	??_main& (0+255),w,b
  1949  00135C  0101               	movlb	1	; () banked
  1950  00135E  6F0F               	movwf	i2c_write_single@addr& (0+255),b
  1951  001360  0E00               	movlw	0
  1952  001362  0101               	movlb	1	; () banked
  1953  001364  6F10               	movwf	i2c_write_single@reg_addr& (0+255),b
  1954  001366  0EFF               	movlw	255
  1955  001368  EC38  F025         	call	_i2c_write_single
  1956                           
  1957                           ;main.c: 90: _delay((unsigned long)((10)*(64000000/4000.0)));
  1958  00136C  0ED0               	movlw	208
  1959  00136E  0101               	movlb	1	; () banked
  1960  001370  6F35               	movwf	??_main& (0+255),b
  1961  001372  0EC9               	movlw	201
  1962  001374                     u10567:
  1963  001374  2EE8               	decfsz	wreg,f,c
  1964  001376  D7FE               	bra	u10567
  1965  001378  2F35               	decfsz	??_main& (0+255),f,b
  1966  00137A  D7FC               	bra	u10567
  1967  00137C  D000               	nop2	
  1968                           
  1969                           ;main.c: 91: i2c_write_single(0xFF, (char)((board == 0)*0b10111110 + (board == 1)*0b1010
      +                          0000 + (board == 2)*0b10100110), 0x01);
  1970  00137E  0E02               	movlw	2
  1971  001380  0108               	movlb	8	; () banked
  1972  001382  19C4               	xorwf	main@board& (0+255),w,b
  1973  001384  0108               	movlb	8	; () banked
  1974  001386  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1975  001388  A4D8               	btfss	status,2,c
  1976  00138A  D002               	goto	u9330
  1977  00138C  0E01               	movlw	1
  1978  00138E  D001               	goto	u9340
  1979  001390                     u9330:
  1980  001390  0E00               	movlw	0
  1981  001392                     u9340:
  1982  001392  0DA6               	mullw	166
  1983  001394  CFF3 F135          	movff	prodl,??_main
  1984  001398  0108               	movlb	8	; () banked
  1985  00139A  05C4               	decf	main@board& (0+255),w,b
  1986  00139C  0108               	movlb	8	; () banked
  1987  00139E  11C5               	iorwf	(main@board+1)& (0+255),w,b
  1988  0013A0  A4D8               	btfss	status,2,c
  1989  0013A2  D002               	goto	u9350
  1990  0013A4  0E01               	movlw	1
  1991  0013A6  D001               	goto	u9360
  1992  0013A8                     u9350:
  1993  0013A8  0E00               	movlw	0
  1994  0013AA                     u9360:
  1995  0013AA  0DA0               	mullw	160
  1996  0013AC  CFF3 F136          	movff	prodl,??_main+1
  1997  0013B0  0108               	movlb	8	; () banked
  1998  0013B2  51C4               	movf	main@board& (0+255),w,b
  1999  0013B4  0108               	movlb	8	; () banked
  2000  0013B6  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2001  0013B8  A4D8               	btfss	status,2,c
  2002  0013BA  D002               	goto	u9370
  2003  0013BC  0E01               	movlw	1
  2004  0013BE  D001               	goto	u9380
  2005  0013C0                     u9370:
  2006  0013C0  0E00               	movlw	0
  2007  0013C2                     u9380:
  2008  0013C2  0DBE               	mullw	190
  2009  0013C4  50F3               	movf	prodl,w,c
  2010  0013C6  0101               	movlb	1	; () banked
  2011  0013C8  2536               	addwf	(??_main+1)& (0+255),w,b
  2012  0013CA  0101               	movlb	1	; () banked
  2013  0013CC  2535               	addwf	??_main& (0+255),w,b
  2014  0013CE  0101               	movlb	1	; () banked
  2015  0013D0  6F0F               	movwf	i2c_write_single@addr& (0+255),b
  2016  0013D2  0E01               	movlw	1
  2017  0013D4  0101               	movlb	1	; () banked
  2018  0013D6  6F10               	movwf	i2c_write_single@reg_addr& (0+255),b
  2019  0013D8  0EFF               	movlw	255
  2020  0013DA  EC38  F025         	call	_i2c_write_single
  2021                           
  2022                           ;main.c: 92: _delay((unsigned long)((10)*(64000000/4000.0)));
  2023  0013DE  0ED0               	movlw	208
  2024  0013E0  0101               	movlb	1	; () banked
  2025  0013E2  6F35               	movwf	??_main& (0+255),b
  2026  0013E4  0EC9               	movlw	201
  2027  0013E6                     u10577:
  2028  0013E6  2EE8               	decfsz	wreg,f,c
  2029  0013E8  D7FE               	bra	u10577
  2030  0013EA  2F35               	decfsz	??_main& (0+255),f,b
  2031  0013EC  D7FC               	bra	u10577
  2032  0013EE  D000               	nop2	
  2033                           
  2034                           ;main.c: 93: i2c_write_single(0xFF, (char)((board == 0)*0b10111110 + (board == 1)*0b1010
      +                          0000 + (board == 2)*0b10100110), 0x02);
  2035  0013F0  0E02               	movlw	2
  2036  0013F2  0108               	movlb	8	; () banked
  2037  0013F4  19C4               	xorwf	main@board& (0+255),w,b
  2038  0013F6  0108               	movlb	8	; () banked
  2039  0013F8  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2040  0013FA  A4D8               	btfss	status,2,c
  2041  0013FC  D002               	goto	u9390
  2042  0013FE  0E01               	movlw	1
  2043  001400  D001               	goto	u9400
  2044  001402                     u9390:
  2045  001402  0E00               	movlw	0
  2046  001404                     u9400:
  2047  001404  0DA6               	mullw	166
  2048  001406  CFF3 F135          	movff	prodl,??_main
  2049  00140A  0108               	movlb	8	; () banked
  2050  00140C  05C4               	decf	main@board& (0+255),w,b
  2051  00140E  0108               	movlb	8	; () banked
  2052  001410  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2053  001412  A4D8               	btfss	status,2,c
  2054  001414  D002               	goto	u9410
  2055  001416  0E01               	movlw	1
  2056  001418  D001               	goto	u9420
  2057  00141A                     u9410:
  2058  00141A  0E00               	movlw	0
  2059  00141C                     u9420:
  2060  00141C  0DA0               	mullw	160
  2061  00141E  CFF3 F136          	movff	prodl,??_main+1
  2062  001422  0108               	movlb	8	; () banked
  2063  001424  51C4               	movf	main@board& (0+255),w,b
  2064  001426  0108               	movlb	8	; () banked
  2065  001428  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2066  00142A  A4D8               	btfss	status,2,c
  2067  00142C  D002               	goto	u9430
  2068  00142E  0E01               	movlw	1
  2069  001430  D001               	goto	u9440
  2070  001432                     u9430:
  2071  001432  0E00               	movlw	0
  2072  001434                     u9440:
  2073  001434  0DBE               	mullw	190
  2074  001436  50F3               	movf	prodl,w,c
  2075  001438  0101               	movlb	1	; () banked
  2076  00143A  2536               	addwf	(??_main+1)& (0+255),w,b
  2077  00143C  0101               	movlb	1	; () banked
  2078  00143E  2535               	addwf	??_main& (0+255),w,b
  2079  001440  0101               	movlb	1	; () banked
  2080  001442  6F0F               	movwf	i2c_write_single@addr& (0+255),b
  2081  001444  0E02               	movlw	2
  2082  001446  0101               	movlb	1	; () banked
  2083  001448  6F10               	movwf	i2c_write_single@reg_addr& (0+255),b
  2084  00144A  0EFF               	movlw	255
  2085  00144C  EC38  F025         	call	_i2c_write_single
  2086                           
  2087                           ;main.c: 94: _delay((unsigned long)((10)*(64000000/4000.0)));
  2088  001450  0ED0               	movlw	208
  2089  001452  0101               	movlb	1	; () banked
  2090  001454  6F35               	movwf	??_main& (0+255),b
  2091  001456  0EC9               	movlw	201
  2092  001458                     u10587:
  2093  001458  2EE8               	decfsz	wreg,f,c
  2094  00145A  D7FE               	bra	u10587
  2095  00145C  2F35               	decfsz	??_main& (0+255),f,b
  2096  00145E  D7FC               	bra	u10587
  2097  001460  D000               	nop2	
  2098                           
  2099                           ;main.c: 95: set_page(0, (char)((board == 0)*0b10111110 + (board == 1)*0b10100000 + (boa
      +                          rd == 2)*0b10100110));
  2100  001462  0E00               	movlw	0
  2101  001464  0101               	movlb	1	; () banked
  2102  001466  6F13               	movwf	(set_page@page+1)& (0+255),b
  2103  001468  0E00               	movlw	0
  2104  00146A  6F12               	movwf	set_page@page& (0+255),b
  2105  00146C  0E02               	movlw	2
  2106  00146E  0108               	movlb	8	; () banked
  2107  001470  19C4               	xorwf	main@board& (0+255),w,b
  2108  001472  0108               	movlb	8	; () banked
  2109  001474  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2110  001476  A4D8               	btfss	status,2,c
  2111  001478  D002               	goto	u9450
  2112  00147A  0E01               	movlw	1
  2113  00147C  D001               	goto	u9460
  2114  00147E                     u9450:
  2115  00147E  0E00               	movlw	0
  2116  001480                     u9460:
  2117  001480  0DA6               	mullw	166
  2118  001482  CFF3 F135          	movff	prodl,??_main
  2119  001486  0108               	movlb	8	; () banked
  2120  001488  05C4               	decf	main@board& (0+255),w,b
  2121  00148A  0108               	movlb	8	; () banked
  2122  00148C  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2123  00148E  A4D8               	btfss	status,2,c
  2124  001490  D002               	goto	u9470
  2125  001492  0E01               	movlw	1
  2126  001494  D001               	goto	u9480
  2127  001496                     u9470:
  2128  001496  0E00               	movlw	0
  2129  001498                     u9480:
  2130  001498  0DA0               	mullw	160
  2131  00149A  CFF3 F136          	movff	prodl,??_main+1
  2132  00149E  0108               	movlb	8	; () banked
  2133  0014A0  51C4               	movf	main@board& (0+255),w,b
  2134  0014A2  0108               	movlb	8	; () banked
  2135  0014A4  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2136  0014A6  A4D8               	btfss	status,2,c
  2137  0014A8  D002               	goto	u9490
  2138  0014AA  0E01               	movlw	1
  2139  0014AC  D001               	goto	u9500
  2140  0014AE                     u9490:
  2141  0014AE  0E00               	movlw	0
  2142  0014B0                     u9500:
  2143  0014B0  0DBE               	mullw	190
  2144  0014B2  50F3               	movf	prodl,w,c
  2145  0014B4  0101               	movlb	1	; () banked
  2146  0014B6  2536               	addwf	(??_main+1)& (0+255),w,b
  2147  0014B8  0101               	movlb	1	; () banked
  2148  0014BA  2535               	addwf	??_main& (0+255),w,b
  2149  0014BC  0101               	movlb	1	; () banked
  2150  0014BE  6F14               	movwf	set_page@cont_addr& (0+255),b
  2151  0014C0  EC87  F024         	call	_set_page	;wreg free
  2152                           
  2153                           ;main.c: 96: _delay((unsigned long)((10)*(64000000/4000.0)));
  2154  0014C4  0ED0               	movlw	208
  2155  0014C6  0101               	movlb	1	; () banked
  2156  0014C8  6F35               	movwf	??_main& (0+255),b
  2157  0014CA  0EC9               	movlw	201
  2158  0014CC                     u10597:
  2159  0014CC  2EE8               	decfsz	wreg,f,c
  2160  0014CE  D7FE               	bra	u10597
  2161  0014D0  2F35               	decfsz	??_main& (0+255),f,b
  2162  0014D2  D7FC               	bra	u10597
  2163  0014D4  D000               	nop2	
  2164                           
  2165                           ;main.c: 97: m = i2c_read_single((char)((board == 0)*0b10111110 + (board == 1)*0b1010000
      +                          0 + (board == 2)*0b10100110), 0x18);
  2166  0014D6  0E18               	movlw	24
  2167  0014D8  0101               	movlb	1	; () banked
  2168  0014DA  6F12               	movwf	i2c_read_single@reg_addr& (0+255),b
  2169  0014DC  0E02               	movlw	2
  2170  0014DE  0108               	movlb	8	; () banked
  2171  0014E0  19C4               	xorwf	main@board& (0+255),w,b
  2172  0014E2  0108               	movlb	8	; () banked
  2173  0014E4  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2174  0014E6  A4D8               	btfss	status,2,c
  2175  0014E8  D002               	goto	u9510
  2176  0014EA  0E01               	movlw	1
  2177  0014EC  D001               	goto	u9520
  2178  0014EE                     u9510:
  2179  0014EE  0E00               	movlw	0
  2180  0014F0                     u9520:
  2181  0014F0  0DA6               	mullw	166
  2182  0014F2  CFF3 F135          	movff	prodl,??_main
  2183  0014F6  0108               	movlb	8	; () banked
  2184  0014F8  05C4               	decf	main@board& (0+255),w,b
  2185  0014FA  0108               	movlb	8	; () banked
  2186  0014FC  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2187  0014FE  A4D8               	btfss	status,2,c
  2188  001500  D002               	goto	u9530
  2189  001502  0E01               	movlw	1
  2190  001504  D001               	goto	u9540
  2191  001506                     u9530:
  2192  001506  0E00               	movlw	0
  2193  001508                     u9540:
  2194  001508  0DA0               	mullw	160
  2195  00150A  CFF3 F136          	movff	prodl,??_main+1
  2196  00150E  0108               	movlb	8	; () banked
  2197  001510  51C4               	movf	main@board& (0+255),w,b
  2198  001512  0108               	movlb	8	; () banked
  2199  001514  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2200  001516  A4D8               	btfss	status,2,c
  2201  001518  D002               	goto	u9550
  2202  00151A  0E01               	movlw	1
  2203  00151C  D001               	goto	u9560
  2204  00151E                     u9550:
  2205  00151E  0E00               	movlw	0
  2206  001520                     u9560:
  2207  001520  0DBE               	mullw	190
  2208  001522  50F3               	movf	prodl,w,c
  2209  001524  0101               	movlb	1	; () banked
  2210  001526  2536               	addwf	(??_main+1)& (0+255),w,b
  2211  001528  0101               	movlb	1	; () banked
  2212  00152A  2535               	addwf	??_main& (0+255),w,b
  2213  00152C  EC7E  F025         	call	_i2c_read_single
  2214  001530  0108               	movlb	8	; () banked
  2215  001532  6FC1               	movwf	main@m& (0+255),b
  2216                           
  2217                           ; BSR set to: 8
  2218                           ;main.c: 98: _delay((unsigned long)((10)*(64000000/4000.0)));
  2219  001534  0ED0               	movlw	208
  2220  001536  0101               	movlb	1	; () banked
  2221  001538  6F35               	movwf	??_main& (0+255),b
  2222  00153A  0EC9               	movlw	201
  2223  00153C                     u10607:
  2224  00153C  2EE8               	decfsz	wreg,f,c
  2225  00153E  D7FE               	bra	u10607
  2226  001540  2F35               	decfsz	??_main& (0+255),f,b
  2227  001542  D7FC               	bra	u10607
  2228  001544  D000               	nop2	
  2229                           
  2230                           ;main.c: 99: char n = i2c_read_single((char)((board == 0)*0b10111110 + (board == 1)*0b10
      +                          100000 + (board == 2)*0b10100110), 0x30);
  2231  001546  0E30               	movlw	48
  2232  001548  0101               	movlb	1	; () banked
  2233  00154A  6F12               	movwf	i2c_read_single@reg_addr& (0+255),b
  2234  00154C  0E02               	movlw	2
  2235  00154E  0108               	movlb	8	; () banked
  2236  001550  19C4               	xorwf	main@board& (0+255),w,b
  2237  001552  0108               	movlb	8	; () banked
  2238  001554  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2239  001556  A4D8               	btfss	status,2,c
  2240  001558  D002               	goto	u9570
  2241  00155A  0E01               	movlw	1
  2242  00155C  D001               	goto	u9580
  2243  00155E                     u9570:
  2244  00155E  0E00               	movlw	0
  2245  001560                     u9580:
  2246  001560  0DA6               	mullw	166
  2247  001562  CFF3 F135          	movff	prodl,??_main
  2248  001566  0108               	movlb	8	; () banked
  2249  001568  05C4               	decf	main@board& (0+255),w,b
  2250  00156A  0108               	movlb	8	; () banked
  2251  00156C  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2252  00156E  A4D8               	btfss	status,2,c
  2253  001570  D002               	goto	u9590
  2254  001572  0E01               	movlw	1
  2255  001574  D001               	goto	u9600
  2256  001576                     u9590:
  2257  001576  0E00               	movlw	0
  2258  001578                     u9600:
  2259  001578  0DA0               	mullw	160
  2260  00157A  CFF3 F136          	movff	prodl,??_main+1
  2261  00157E  0108               	movlb	8	; () banked
  2262  001580  51C4               	movf	main@board& (0+255),w,b
  2263  001582  0108               	movlb	8	; () banked
  2264  001584  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2265  001586  A4D8               	btfss	status,2,c
  2266  001588  D002               	goto	u9610
  2267  00158A  0E01               	movlw	1
  2268  00158C  D001               	goto	u9620
  2269  00158E                     u9610:
  2270  00158E  0E00               	movlw	0
  2271  001590                     u9620:
  2272  001590  0DBE               	mullw	190
  2273  001592  50F3               	movf	prodl,w,c
  2274  001594  0101               	movlb	1	; () banked
  2275  001596  2536               	addwf	(??_main+1)& (0+255),w,b
  2276  001598  0101               	movlb	1	; () banked
  2277  00159A  2535               	addwf	??_main& (0+255),w,b
  2278  00159C  EC7E  F025         	call	_i2c_read_single
  2279  0015A0  0108               	movlb	8	; () banked
  2280  0015A2  6FC0               	movwf	main@n& (0+255),b
  2281                           
  2282                           ; BSR set to: 8
  2283                           ;main.c: 100: _delay((unsigned long)((10)*(64000000/4000.0)));
  2284  0015A4  0ED0               	movlw	208
  2285  0015A6  0101               	movlb	1	; () banked
  2286  0015A8  6F35               	movwf	??_main& (0+255),b
  2287  0015AA  0EC9               	movlw	201
  2288  0015AC                     u10617:
  2289  0015AC  2EE8               	decfsz	wreg,f,c
  2290  0015AE  D7FE               	bra	u10617
  2291  0015B0  2F35               	decfsz	??_main& (0+255),f,b
  2292  0015B2  D7FC               	bra	u10617
  2293  0015B4  D000               	nop2	
  2294                           
  2295                           ;main.c: 101: set_page(3, (char)((board == 0)*0b10111110 + (board == 1)*0b10100000 + (bo
      +                          ard == 2)*0b10100110));
  2296  0015B6  0E00               	movlw	0
  2297  0015B8  0101               	movlb	1	; () banked
  2298  0015BA  6F13               	movwf	(set_page@page+1)& (0+255),b
  2299  0015BC  0E03               	movlw	3
  2300  0015BE  6F12               	movwf	set_page@page& (0+255),b
  2301  0015C0  0E02               	movlw	2
  2302  0015C2  0108               	movlb	8	; () banked
  2303  0015C4  19C4               	xorwf	main@board& (0+255),w,b
  2304  0015C6  0108               	movlb	8	; () banked
  2305  0015C8  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2306  0015CA  A4D8               	btfss	status,2,c
  2307  0015CC  D002               	goto	u9630
  2308  0015CE  0E01               	movlw	1
  2309  0015D0  D001               	goto	u9640
  2310  0015D2                     u9630:
  2311  0015D2  0E00               	movlw	0
  2312  0015D4                     u9640:
  2313  0015D4  0DA6               	mullw	166
  2314  0015D6  CFF3 F135          	movff	prodl,??_main
  2315  0015DA  0108               	movlb	8	; () banked
  2316  0015DC  05C4               	decf	main@board& (0+255),w,b
  2317  0015DE  0108               	movlb	8	; () banked
  2318  0015E0  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2319  0015E2  A4D8               	btfss	status,2,c
  2320  0015E4  D002               	goto	u9650
  2321  0015E6  0E01               	movlw	1
  2322  0015E8  D001               	goto	u9660
  2323  0015EA                     u9650:
  2324  0015EA  0E00               	movlw	0
  2325  0015EC                     u9660:
  2326  0015EC  0DA0               	mullw	160
  2327  0015EE  CFF3 F136          	movff	prodl,??_main+1
  2328  0015F2  0108               	movlb	8	; () banked
  2329  0015F4  51C4               	movf	main@board& (0+255),w,b
  2330  0015F6  0108               	movlb	8	; () banked
  2331  0015F8  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2332  0015FA  A4D8               	btfss	status,2,c
  2333  0015FC  D002               	goto	u9670
  2334  0015FE  0E01               	movlw	1
  2335  001600  D001               	goto	u9680
  2336  001602                     u9670:
  2337  001602  0E00               	movlw	0
  2338  001604                     u9680:
  2339  001604  0DBE               	mullw	190
  2340  001606  50F3               	movf	prodl,w,c
  2341  001608  0101               	movlb	1	; () banked
  2342  00160A  2536               	addwf	(??_main+1)& (0+255),w,b
  2343  00160C  0101               	movlb	1	; () banked
  2344  00160E  2535               	addwf	??_main& (0+255),w,b
  2345  001610  0101               	movlb	1	; () banked
  2346  001612  6F14               	movwf	set_page@cont_addr& (0+255),b
  2347  001614  EC87  F024         	call	_set_page	;wreg free
  2348                           
  2349                           ;main.c: 102: _delay((unsigned long)((10)*(64000000/4000.0)));
  2350  001618  0ED0               	movlw	208
  2351  00161A  0101               	movlb	1	; () banked
  2352  00161C  6F35               	movwf	??_main& (0+255),b
  2353  00161E  0EC9               	movlw	201
  2354  001620                     u10627:
  2355  001620  2EE8               	decfsz	wreg,f,c
  2356  001622  D7FE               	bra	u10627
  2357  001624  2F35               	decfsz	??_main& (0+255),f,b
  2358  001626  D7FC               	bra	u10627
  2359  001628  D000               	nop2	
  2360                           
  2361                           ;main.c: 103: i2c_write_single(1, (char)((board == 0)*0b10111110 + (board == 1)*0b101000
      +                          00 + (board == 2)*0b10100110), 0x00);
  2362  00162A  0E02               	movlw	2
  2363  00162C  0108               	movlb	8	; () banked
  2364  00162E  19C4               	xorwf	main@board& (0+255),w,b
  2365  001630  0108               	movlb	8	; () banked
  2366  001632  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2367  001634  A4D8               	btfss	status,2,c
  2368  001636  D002               	goto	u9690
  2369  001638  0E01               	movlw	1
  2370  00163A  D001               	goto	u9700
  2371  00163C                     u9690:
  2372  00163C  0E00               	movlw	0
  2373  00163E                     u9700:
  2374  00163E  0DA6               	mullw	166
  2375  001640  CFF3 F135          	movff	prodl,??_main
  2376  001644  0108               	movlb	8	; () banked
  2377  001646  05C4               	decf	main@board& (0+255),w,b
  2378  001648  0108               	movlb	8	; () banked
  2379  00164A  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2380  00164C  A4D8               	btfss	status,2,c
  2381  00164E  D002               	goto	u9710
  2382  001650  0E01               	movlw	1
  2383  001652  D001               	goto	u9720
  2384  001654                     u9710:
  2385  001654  0E00               	movlw	0
  2386  001656                     u9720:
  2387  001656  0DA0               	mullw	160
  2388  001658  CFF3 F136          	movff	prodl,??_main+1
  2389  00165C  0108               	movlb	8	; () banked
  2390  00165E  51C4               	movf	main@board& (0+255),w,b
  2391  001660  0108               	movlb	8	; () banked
  2392  001662  11C5               	iorwf	(main@board+1)& (0+255),w,b
  2393  001664  A4D8               	btfss	status,2,c
  2394  001666  D002               	goto	u9730
  2395  001668  0E01               	movlw	1
  2396  00166A  D001               	goto	u9740
  2397  00166C                     u9730:
  2398  00166C  0E00               	movlw	0
  2399  00166E                     u9740:
  2400  00166E  0DBE               	mullw	190
  2401  001670  50F3               	movf	prodl,w,c
  2402  001672  0101               	movlb	1	; () banked
  2403  001674  2536               	addwf	(??_main+1)& (0+255),w,b
  2404  001676  0101               	movlb	1	; () banked
  2405  001678  2535               	addwf	??_main& (0+255),w,b
  2406  00167A  0101               	movlb	1	; () banked
  2407  00167C  6F0F               	movwf	i2c_write_single@addr& (0+255),b
  2408  00167E  0E00               	movlw	0
  2409  001680  0101               	movlb	1	; () banked
  2410  001682  6F10               	movwf	i2c_write_single@reg_addr& (0+255),b
  2411  001684  0E01               	movlw	1
  2412  001686  EC38  F025         	call	_i2c_write_single
  2413                           
  2414                           ;main.c: 105: _delay((unsigned long)((10)*(64000000/4000.0)));
  2415  00168A  0ED0               	movlw	208
  2416  00168C  0101               	movlb	1	; () banked
  2417  00168E  6F35               	movwf	??_main& (0+255),b
  2418  001690  0EC9               	movlw	201
  2419  001692                     u10637:
  2420  001692  2EE8               	decfsz	wreg,f,c
  2421  001694  D7FE               	bra	u10637
  2422  001696  2F35               	decfsz	??_main& (0+255),f,b
  2423  001698  D7FC               	bra	u10637
  2424  00169A  D000               	nop2	
  2425                           
  2426                           ;main.c: 106: _delay((unsigned long)((500)*(64000000/4000.0)));
  2427  00169C  0E29               	movlw	41
  2428  00169E  0101               	movlb	1	; () banked
  2429  0016A0  6F36               	movwf	(??_main+1)& (0+255),b
  2430  0016A2  0E96               	movlw	150
  2431  0016A4  0101               	movlb	1	; () banked
  2432  0016A6  6F35               	movwf	??_main& (0+255),b
  2433  0016A8  0E7F               	movlw	127
  2434  0016AA                     u10647:
  2435  0016AA  2EE8               	decfsz	wreg,f,c
  2436  0016AC  D7FE               	bra	u10647
  2437  0016AE  2F35               	decfsz	??_main& (0+255),f,b
  2438  0016B0  D7FC               	bra	u10647
  2439  0016B2  2F36               	decfsz	(??_main+1)& (0+255),f,b
  2440  0016B4  D7FA               	bra	u10647
  2441                           
  2442                           ;main.c: 107: set_status_led(INIT, 0);
  2443  0016B6  0E00               	movlw	0
  2444  0016B8  0101               	movlb	1	; () banked
  2445  0016BA  6F01               	movwf	(set_status_led@status+1)& (0+255),b
  2446  0016BC  0E01               	movlw	1
  2447  0016BE  6F00               	movwf	set_status_led@status& (0+255),b
  2448  0016C0  0E00               	movlw	0
  2449  0016C2  0101               	movlb	1	; () banked
  2450  0016C4  6F03               	movwf	(set_status_led@error_override+1)& (0+255),b
  2451  0016C6  0E00               	movlw	0
  2452  0016C8  6F02               	movwf	set_status_led@error_override& (0+255),b
  2453  0016CA  EC64  F016         	call	_set_status_led	;wreg free
  2454                           
  2455                           ;main.c: 108: _delay((unsigned long)((500)*(64000000/4000.0)));
  2456  0016CE  0E29               	movlw	41
  2457  0016D0  0101               	movlb	1	; () banked
  2458  0016D2  6F36               	movwf	(??_main+1)& (0+255),b
  2459  0016D4  0E96               	movlw	150
  2460  0016D6  0101               	movlb	1	; () banked
  2461  0016D8  6F35               	movwf	??_main& (0+255),b
  2462  0016DA  0E7F               	movlw	127
  2463  0016DC                     u10657:
  2464  0016DC  2EE8               	decfsz	wreg,f,c
  2465  0016DE  D7FE               	bra	u10657
  2466  0016E0  2F35               	decfsz	??_main& (0+255),f,b
  2467  0016E2  D7FC               	bra	u10657
  2468  0016E4  2F36               	decfsz	(??_main+1)& (0+255),f,b
  2469  0016E6  D7FA               	bra	u10657
  2470  0016E8  0108               	movlb	8	; () banked
  2471  0016EA  4BC4               	infsnz	main@board& (0+255),f,b
  2472  0016EC  2BC5               	incf	(main@board+1)& (0+255),f,b
  2473                           
  2474                           ; BSR set to: 8
  2475  0016EE  0108               	movlb	8	; () banked
  2476  0016F0  BFC5               	btfsc	(main@board+1)& (0+255),7,b
  2477  0016F2  D46F               	goto	l70
  2478  0016F4  0108               	movlb	8	; () banked
  2479  0016F6  51C5               	movf	(main@board+1)& (0+255),w,b
  2480  0016F8  E101               	bnz	u9750
  2481  0016FA  D466               	goto	L1
  2482  0016FC                     u9750:
  2483                           
  2484                           ; BSR set to: 8
  2485                           
  2486                           ; BSR set to: 8
  2487  0016FC  D45A               	goto	l69
  2488  0016FE                     __end_of_main:
  2489                           	opt stack 0
  2490                           tblptru	equ	0xFF8
  2491                           tblptrh	equ	0xFF7
  2492                           tblptrl	equ	0xFF6
  2493                           tablat	equ	0xFF5
  2494                           prodl	equ	0xFF3
  2495                           postinc0	equ	0xFEE
  2496                           wreg	equ	0xFE8
  2497                           postdec1	equ	0xFE5
  2498                           fsr1h	equ	0xFE2
  2499                           fsr1l	equ	0xFE1
  2500                           indf2	equ	0xFDF
  2501                           fsr2h	equ	0xFDA
  2502                           fsr2l	equ	0xFD9
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function _init_pwm *****************
  2506 ;; Defined at:
  2507 ;;		line 15 in file "pwm.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;Total ram usage:        0 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:   13
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text1
  2536  003A96                     __ptext1:
  2537                           	opt stack 0
  2538  003A96                     _init_pwm:
  2539                           	opt stack 17
  2540                           
  2541                           ;pwm.c: 19: toggle = 0;
  2542                           
  2543                           ; BSR set to: 8
  2544                           ;incstack = 0
  2545  003A96  0E00               	movlw	0
  2546  003A98  0100               	movlb	0	; () banked
  2547  003A9A  6FC0               	movwf	(_toggle+1)& (0+255),b	;volatile
  2548  003A9C  0E00               	movlw	0
  2549  003A9E  6FBF               	movwf	_toggle& (0+255),b	;volatile
  2550                           
  2551                           ;pwm.c: 22: r_cnt = 0;
  2552  003AA0  0E00               	movlw	0
  2553  003AA2  6E42               	movwf	_r_cnt+1,c	;volatile
  2554  003AA4  0E00               	movlw	0
  2555  003AA6  6E41               	movwf	_r_cnt,c	;volatile
  2556                           
  2557                           ;pwm.c: 23: g_cnt = 0;
  2558  003AA8  0E00               	movlw	0
  2559  003AAA  6E3E               	movwf	_g_cnt+1,c	;volatile
  2560  003AAC  0E00               	movlw	0
  2561  003AAE  6E3D               	movwf	_g_cnt,c	;volatile
  2562                           
  2563                           ;pwm.c: 24: b_cnt = 0;
  2564  003AB0  0E00               	movlw	0
  2565  003AB2  6E3A               	movwf	_b_cnt+1,c	;volatile
  2566  003AB4  0E00               	movlw	0
  2567  003AB6  6E39               	movwf	_b_cnt,c	;volatile
  2568                           
  2569                           ;pwm.c: 25: bt_cnt = 0;
  2570  003AB8  0E00               	movlw	0
  2571  003ABA  6E36               	movwf	_bt_cnt+1,c	;volatile
  2572  003ABC  0E00               	movlw	0
  2573  003ABE  6E35               	movwf	_bt_cnt,c	;volatile
  2574                           
  2575                           ;pwm.c: 27: curr_r_cnt = 0;
  2576  003AC0  0E00               	movlw	0
  2577  003AC2  6E40               	movwf	_curr_r_cnt+1,c	;volatile
  2578  003AC4  0E00               	movlw	0
  2579  003AC6  6E3F               	movwf	_curr_r_cnt,c	;volatile
  2580                           
  2581                           ;pwm.c: 28: curr_g_cnt = 0;
  2582  003AC8  0E00               	movlw	0
  2583  003ACA  6E3C               	movwf	_curr_g_cnt+1,c	;volatile
  2584  003ACC  0E00               	movlw	0
  2585  003ACE  6E3B               	movwf	_curr_g_cnt,c	;volatile
  2586                           
  2587                           ;pwm.c: 29: curr_b_cnt = 0;
  2588  003AD0  0E00               	movlw	0
  2589  003AD2  6E38               	movwf	_curr_b_cnt+1,c	;volatile
  2590  003AD4  0E00               	movlw	0
  2591  003AD6  6E37               	movwf	_curr_b_cnt,c	;volatile
  2592                           
  2593                           ;pwm.c: 30: curr_bt_cnt = 0;
  2594  003AD8  0E00               	movlw	0
  2595  003ADA  6E34               	movwf	_curr_bt_cnt+1,c	;volatile
  2596  003ADC  0E00               	movlw	0
  2597  003ADE  6E33               	movwf	_curr_bt_cnt,c	;volatile
  2598                           
  2599                           ; BSR set to: 0
  2600                           ;pwm.c: 33: T0CON0bits.T0EN = 0;
  2601  003AE0  9ED5               	bcf	4053,7,c	;volatile
  2602                           
  2603                           ; BSR set to: 0
  2604                           ;pwm.c: 34: T0CON0bits.T016BIT = 0;
  2605  003AE2  98D5               	bcf	4053,4,c	;volatile
  2606                           
  2607                           ; BSR set to: 0
  2608                           ;pwm.c: 35: T0CON0bits.T0OUTPS = 0b0000;
  2609  003AE4  90D5               	bcf	4053,0,c	;volatile
  2610  003AE6  92D5               	bcf	4053,1,c	;volatile
  2611  003AE8  94D5               	bcf	4053,2,c	;volatile
  2612  003AEA  96D5               	bcf	4053,3,c	;volatile
  2613                           
  2614                           ;pwm.c: 36: T0CON1bits.T0CS = 0b011;
  2615  003AEC  50D6               	movf	4054,w,c	;volatile
  2616  003AEE  0B1F               	andlw	-225
  2617  003AF0  0960               	iorlw	96
  2618  003AF2  6ED6               	movwf	4054,c	;volatile
  2619                           
  2620                           ; BSR set to: 0
  2621                           ;pwm.c: 37: T0CON1bits.T0ASYNC = 1;
  2622  003AF4  88D6               	bsf	4054,4,c	;volatile
  2623                           
  2624                           ;pwm.c: 38: T0CON1bits.T0CKPS = 0b0110;
  2625  003AF6  50D6               	movf	4054,w,c	;volatile
  2626  003AF8  0BF0               	andlw	-16
  2627  003AFA  0906               	iorlw	6
  2628  003AFC  6ED6               	movwf	4054,c	;volatile
  2629                           
  2630                           ;pwm.c: 39: TMR0H = 199;
  2631  003AFE  0EC7               	movlw	199
  2632  003B00  6ED4               	movwf	4052,c	;volatile
  2633                           
  2634                           ;pwm.c: 40: TMR0L = 0;
  2635  003B02  0E00               	movlw	0
  2636  003B04  6ED3               	movwf	4051,c	;volatile
  2637                           
  2638                           ; BSR set to: 0
  2639                           ;pwm.c: 42: T0CON0bits.T0EN = 1;
  2640  003B06  8ED5               	bsf	4053,7,c	;volatile
  2641                           
  2642                           ;pwm.c: 44: curr_stat = INIT;
  2643  003B08  0E00               	movlw	0
  2644  003B0A  0100               	movlb	0	; () banked
  2645  003B0C  6FD5               	movwf	(_curr_stat+1)& (0+255),b	;volatile
  2646  003B0E  0E01               	movlw	1
  2647  003B10  6FD4               	movwf	_curr_stat& (0+255),b	;volatile
  2648                           
  2649                           ; BSR set to: 0
  2650  003B12  0012               	return		;funcret
  2651  003B14                     __end_of_init_pwm:
  2652                           	opt stack 0
  2653                           tblptru	equ	0xFF8
  2654                           tblptrh	equ	0xFF7
  2655                           tblptrl	equ	0xFF6
  2656                           tablat	equ	0xFF5
  2657                           prodl	equ	0xFF3
  2658                           postinc0	equ	0xFEE
  2659                           wreg	equ	0xFE8
  2660                           postdec1	equ	0xFE5
  2661                           fsr1h	equ	0xFE2
  2662                           fsr1l	equ	0xFE1
  2663                           indf2	equ	0xFDF
  2664                           fsr2h	equ	0xFDA
  2665                           fsr2l	equ	0xFD9
  2666                           status	equ	0xFD8
  2667                           
  2668 ;; *************** function _init_led *****************
  2669 ;; Defined at:
  2670 ;;		line 28 in file "led.c"
  2671 ;; Parameters:    Size  Location     Type
  2672 ;;		None
  2673 ;; Auto vars:     Size  Location     Type
  2674 ;;  i               2   49[BANK1 ] unsigned int 
  2675 ;;  all_on         24   25[BANK1 ] unsigned char [24]
  2676 ;;  board           2   51[BANK1 ] int 
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2687 ;;      Locals:         0       0      28       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2688 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;      Totals:         0       0      30       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2690 ;;Total ram usage:       30 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:   18
  2693 ;; This function calls:
  2694 ;;		_i2c_write
  2695 ;;		_i2c_write_single
  2696 ;;		_set_page
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text2
  2703  001EA8                     __ptext2:
  2704                           	opt stack 0
  2705  001EA8                     _init_led:
  2706                           	opt stack 12
  2707                           
  2708                           ;led.c: 30: LED_TIM_VAL = 65535 - (unsigned int) (64.E6f/4.f/128.0f/10);
  2709                           
  2710                           ; BSR set to: 0
  2711                           ;incstack = 0
  2712  001EA8  0ECF               	movlw	207
  2713  001EAA  0100               	movlb	0	; () banked
  2714  001EAC  6FD7               	movwf	(_LED_TIM_VAL+1)& (0+255),b
  2715  001EAE  0E2B               	movlw	43
  2716  001EB0  6FD6               	movwf	_LED_TIM_VAL& (0+255),b
  2717                           
  2718                           ;led.c: 42: for(int board = 2; board < 3; board++)
  2719  001EB2  0E00               	movlw	0
  2720  001EB4  0101               	movlb	1	; () banked
  2721  001EB6  6F34               	movwf	(init_led@board+1)& (0+255),b
  2722  001EB8  0E02               	movlw	2
  2723  001EBA  6F33               	movwf	init_led@board& (0+255),b
  2724                           
  2725                           ; BSR set to: 1
  2726  001EBC  0101               	movlb	1	; () banked
  2727  001EBE  BF34               	btfsc	(init_led@board+1)& (0+255),7,b
  2728  001EC0  D00A               	goto	l638
  2729  001EC2  0101               	movlb	1	; () banked
  2730  001EC4  5134               	movf	(init_led@board+1)& (0+255),w,b
  2731  001EC6  E106               	bnz	u8340
  2732  001EC8  0E03               	movlw	3
  2733  001ECA  0101               	movlb	1	; () banked
  2734  001ECC  5D33               	subwf	init_led@board& (0+255),w,b
  2735  001ECE  B0D8               	btfsc	status,0,c
  2736  001ED0  0012               	return	
  2737  001ED2  D001               	goto	l638
  2738  001ED4                     u8340:
  2739                           
  2740                           ; BSR set to: 1
  2741  001ED4  0012               	return	
  2742  001ED6                     l638:
  2743                           
  2744                           ; BSR set to: 1
  2745                           ;led.c: 43: {
  2746                           ;led.c: 45: set_page(3, (char)((board == 0)*0b10111110 + (board == 1)*0b10100000 + (boar
      +                          d == 2)*0b10100110));
  2747                           
  2748                           ; BSR set to: 1
  2749  001ED6  0E00               	movlw	0
  2750  001ED8  0101               	movlb	1	; () banked
  2751  001EDA  6F13               	movwf	(set_page@page+1)& (0+255),b
  2752  001EDC  0E03               	movlw	3
  2753  001EDE  6F12               	movwf	set_page@page& (0+255),b
  2754  001EE0  0E02               	movlw	2
  2755  001EE2  0101               	movlb	1	; () banked
  2756  001EE4  1933               	xorwf	init_led@board& (0+255),w,b
  2757  001EE6  0101               	movlb	1	; () banked
  2758  001EE8  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2759  001EEA  A4D8               	btfss	status,2,c
  2760  001EEC  D002               	goto	u8350
  2761  001EEE  0E01               	movlw	1
  2762  001EF0  D001               	goto	u8360
  2763  001EF2                     u8350:
  2764  001EF2  0E00               	movlw	0
  2765  001EF4                     u8360:
  2766  001EF4  0DA6               	mullw	166
  2767  001EF6  CFF3 F117          	movff	prodl,??_init_led
  2768  001EFA  0101               	movlb	1	; () banked
  2769  001EFC  0533               	decf	init_led@board& (0+255),w,b
  2770  001EFE  0101               	movlb	1	; () banked
  2771  001F00  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2772  001F02  A4D8               	btfss	status,2,c
  2773  001F04  D002               	goto	u8370
  2774  001F06  0E01               	movlw	1
  2775  001F08  D001               	goto	u8380
  2776  001F0A                     u8370:
  2777  001F0A  0E00               	movlw	0
  2778  001F0C                     u8380:
  2779  001F0C  0DA0               	mullw	160
  2780  001F0E  CFF3 F118          	movff	prodl,??_init_led+1
  2781  001F12  0101               	movlb	1	; () banked
  2782  001F14  5133               	movf	init_led@board& (0+255),w,b
  2783  001F16  0101               	movlb	1	; () banked
  2784  001F18  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2785  001F1A  A4D8               	btfss	status,2,c
  2786  001F1C  D002               	goto	u8390
  2787  001F1E  0E01               	movlw	1
  2788  001F20  D001               	goto	u8400
  2789  001F22                     u8390:
  2790  001F22  0E00               	movlw	0
  2791  001F24                     u8400:
  2792  001F24  0DBE               	mullw	190
  2793  001F26  50F3               	movf	prodl,w,c
  2794  001F28  0101               	movlb	1	; () banked
  2795  001F2A  2518               	addwf	(??_init_led+1)& (0+255),w,b
  2796  001F2C  0101               	movlb	1	; () banked
  2797  001F2E  2517               	addwf	??_init_led& (0+255),w,b
  2798  001F30  0101               	movlb	1	; () banked
  2799  001F32  6F14               	movwf	set_page@cont_addr& (0+255),b
  2800  001F34  EC87  F024         	call	_set_page	;wreg free
  2801                           
  2802                           ;led.c: 46: _delay((unsigned long)((1)*(64000000/4000.0)));
  2803  001F38  0E15               	movlw	21
  2804  001F3A  0101               	movlb	1	; () banked
  2805  001F3C  6F17               	movwf	??_init_led& (0+255),b
  2806  001F3E  0EC6               	movlw	198
  2807  001F40                     u10667:
  2808  001F40  2EE8               	decfsz	wreg,f,c
  2809  001F42  D7FE               	bra	u10667
  2810  001F44  2F17               	decfsz	??_init_led& (0+255),f,b
  2811  001F46  D7FC               	bra	u10667
  2812  001F48  F000               	nop	
  2813                           
  2814                           ;led.c: 47: i2c_write_single(0b00000001, (char)((board == 0)*0b10111110 + (board == 1)*0
      +                          b10100000 + (board == 2)*0b10100110), 0x00);
  2815  001F4A  0E02               	movlw	2
  2816  001F4C  0101               	movlb	1	; () banked
  2817  001F4E  1933               	xorwf	init_led@board& (0+255),w,b
  2818  001F50  0101               	movlb	1	; () banked
  2819  001F52  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2820  001F54  A4D8               	btfss	status,2,c
  2821  001F56  D002               	goto	u8410
  2822  001F58  0E01               	movlw	1
  2823  001F5A  D001               	goto	u8420
  2824  001F5C                     u8410:
  2825  001F5C  0E00               	movlw	0
  2826  001F5E                     u8420:
  2827  001F5E  0DA6               	mullw	166
  2828  001F60  CFF3 F117          	movff	prodl,??_init_led
  2829  001F64  0101               	movlb	1	; () banked
  2830  001F66  0533               	decf	init_led@board& (0+255),w,b
  2831  001F68  0101               	movlb	1	; () banked
  2832  001F6A  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2833  001F6C  A4D8               	btfss	status,2,c
  2834  001F6E  D002               	goto	u8430
  2835  001F70  0E01               	movlw	1
  2836  001F72  D001               	goto	u8440
  2837  001F74                     u8430:
  2838  001F74  0E00               	movlw	0
  2839  001F76                     u8440:
  2840  001F76  0DA0               	mullw	160
  2841  001F78  CFF3 F118          	movff	prodl,??_init_led+1
  2842  001F7C  0101               	movlb	1	; () banked
  2843  001F7E  5133               	movf	init_led@board& (0+255),w,b
  2844  001F80  0101               	movlb	1	; () banked
  2845  001F82  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2846  001F84  A4D8               	btfss	status,2,c
  2847  001F86  D002               	goto	u8450
  2848  001F88  0E01               	movlw	1
  2849  001F8A  D001               	goto	u8460
  2850  001F8C                     u8450:
  2851  001F8C  0E00               	movlw	0
  2852  001F8E                     u8460:
  2853  001F8E  0DBE               	mullw	190
  2854  001F90  50F3               	movf	prodl,w,c
  2855  001F92  0101               	movlb	1	; () banked
  2856  001F94  2518               	addwf	(??_init_led+1)& (0+255),w,b
  2857  001F96  0101               	movlb	1	; () banked
  2858  001F98  2517               	addwf	??_init_led& (0+255),w,b
  2859  001F9A  0101               	movlb	1	; () banked
  2860  001F9C  6F0F               	movwf	i2c_write_single@addr& (0+255),b
  2861  001F9E  0E00               	movlw	0
  2862  001FA0  0101               	movlb	1	; () banked
  2863  001FA2  6F10               	movwf	i2c_write_single@reg_addr& (0+255),b
  2864  001FA4  0E01               	movlw	1
  2865  001FA6  EC38  F025         	call	_i2c_write_single
  2866                           
  2867                           ;led.c: 48: _delay((unsigned long)((1)*(64000000/4000.0)));
  2868  001FAA  0E15               	movlw	21
  2869  001FAC  0101               	movlb	1	; () banked
  2870  001FAE  6F17               	movwf	??_init_led& (0+255),b
  2871  001FB0  0EC6               	movlw	198
  2872  001FB2                     u10677:
  2873  001FB2  2EE8               	decfsz	wreg,f,c
  2874  001FB4  D7FE               	bra	u10677
  2875  001FB6  2F17               	decfsz	??_init_led& (0+255),f,b
  2876  001FB8  D7FC               	bra	u10677
  2877  001FBA  F000               	nop	
  2878                           
  2879                           ;led.c: 51: set_page(3, (char)((board == 0)*0b10111110 + (board == 1)*0b10100000 + (boar
      +                          d == 2)*0b10100110));
  2880  001FBC  0E00               	movlw	0
  2881  001FBE  0101               	movlb	1	; () banked
  2882  001FC0  6F13               	movwf	(set_page@page+1)& (0+255),b
  2883  001FC2  0E03               	movlw	3
  2884  001FC4  6F12               	movwf	set_page@page& (0+255),b
  2885  001FC6  0E02               	movlw	2
  2886  001FC8  0101               	movlb	1	; () banked
  2887  001FCA  1933               	xorwf	init_led@board& (0+255),w,b
  2888  001FCC  0101               	movlb	1	; () banked
  2889  001FCE  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2890  001FD0  A4D8               	btfss	status,2,c
  2891  001FD2  D002               	goto	u8470
  2892  001FD4  0E01               	movlw	1
  2893  001FD6  D001               	goto	u8480
  2894  001FD8                     u8470:
  2895  001FD8  0E00               	movlw	0
  2896  001FDA                     u8480:
  2897  001FDA  0DA6               	mullw	166
  2898  001FDC  CFF3 F117          	movff	prodl,??_init_led
  2899  001FE0  0101               	movlb	1	; () banked
  2900  001FE2  0533               	decf	init_led@board& (0+255),w,b
  2901  001FE4  0101               	movlb	1	; () banked
  2902  001FE6  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2903  001FE8  A4D8               	btfss	status,2,c
  2904  001FEA  D002               	goto	u8490
  2905  001FEC  0E01               	movlw	1
  2906  001FEE  D001               	goto	u8500
  2907  001FF0                     u8490:
  2908  001FF0  0E00               	movlw	0
  2909  001FF2                     u8500:
  2910  001FF2  0DA0               	mullw	160
  2911  001FF4  CFF3 F118          	movff	prodl,??_init_led+1
  2912  001FF8  0101               	movlb	1	; () banked
  2913  001FFA  5133               	movf	init_led@board& (0+255),w,b
  2914  001FFC  0101               	movlb	1	; () banked
  2915  001FFE  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2916  002000  A4D8               	btfss	status,2,c
  2917  002002  D002               	goto	u8510
  2918  002004  0E01               	movlw	1
  2919  002006  D001               	goto	u8520
  2920  002008                     u8510:
  2921  002008  0E00               	movlw	0
  2922  00200A                     u8520:
  2923  00200A  0DBE               	mullw	190
  2924  00200C  50F3               	movf	prodl,w,c
  2925  00200E  0101               	movlb	1	; () banked
  2926  002010  2518               	addwf	(??_init_led+1)& (0+255),w,b
  2927  002012  0101               	movlb	1	; () banked
  2928  002014  2517               	addwf	??_init_led& (0+255),w,b
  2929  002016  0101               	movlb	1	; () banked
  2930  002018  6F14               	movwf	set_page@cont_addr& (0+255),b
  2931  00201A  EC87  F024         	call	_set_page	;wreg free
  2932                           
  2933                           ;led.c: 52: i2c_write_single(0xF0, (char)((board == 0)*0b10111110 + (board == 1)*0b10100
      +                          000 + (board == 2)*0b10100110), 0x01);
  2934  00201E  0E02               	movlw	2
  2935  002020  0101               	movlb	1	; () banked
  2936  002022  1933               	xorwf	init_led@board& (0+255),w,b
  2937  002024  0101               	movlb	1	; () banked
  2938  002026  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2939  002028  A4D8               	btfss	status,2,c
  2940  00202A  D002               	goto	u8530
  2941  00202C  0E01               	movlw	1
  2942  00202E  D001               	goto	u8540
  2943  002030                     u8530:
  2944  002030  0E00               	movlw	0
  2945  002032                     u8540:
  2946  002032  0DA6               	mullw	166
  2947  002034  CFF3 F117          	movff	prodl,??_init_led
  2948  002038  0101               	movlb	1	; () banked
  2949  00203A  0533               	decf	init_led@board& (0+255),w,b
  2950  00203C  0101               	movlb	1	; () banked
  2951  00203E  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2952  002040  A4D8               	btfss	status,2,c
  2953  002042  D002               	goto	u8550
  2954  002044  0E01               	movlw	1
  2955  002046  D001               	goto	u8560
  2956  002048                     u8550:
  2957  002048  0E00               	movlw	0
  2958  00204A                     u8560:
  2959  00204A  0DA0               	mullw	160
  2960  00204C  CFF3 F118          	movff	prodl,??_init_led+1
  2961  002050  0101               	movlb	1	; () banked
  2962  002052  5133               	movf	init_led@board& (0+255),w,b
  2963  002054  0101               	movlb	1	; () banked
  2964  002056  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  2965  002058  A4D8               	btfss	status,2,c
  2966  00205A  D002               	goto	u8570
  2967  00205C  0E01               	movlw	1
  2968  00205E  D001               	goto	u8580
  2969  002060                     u8570:
  2970  002060  0E00               	movlw	0
  2971  002062                     u8580:
  2972  002062  0DBE               	mullw	190
  2973  002064  50F3               	movf	prodl,w,c
  2974  002066  0101               	movlb	1	; () banked
  2975  002068  2518               	addwf	(??_init_led+1)& (0+255),w,b
  2976  00206A  0101               	movlb	1	; () banked
  2977  00206C  2517               	addwf	??_init_led& (0+255),w,b
  2978  00206E  0101               	movlb	1	; () banked
  2979  002070  6F0F               	movwf	i2c_write_single@addr& (0+255),b
  2980  002072  0E01               	movlw	1
  2981  002074  0101               	movlb	1	; () banked
  2982  002076  6F10               	movwf	i2c_write_single@reg_addr& (0+255),b
  2983  002078  0EF0               	movlw	240
  2984  00207A  EC38  F025         	call	_i2c_write_single
  2985                           
  2986                           ;led.c: 53: _delay((unsigned long)((1)*(64000000/4000.0)));
  2987  00207E  0E15               	movlw	21
  2988  002080  0101               	movlb	1	; () banked
  2989  002082  6F17               	movwf	??_init_led& (0+255),b
  2990  002084  0EC6               	movlw	198
  2991  002086                     u10687:
  2992  002086  2EE8               	decfsz	wreg,f,c
  2993  002088  D7FE               	bra	u10687
  2994  00208A  2F17               	decfsz	??_init_led& (0+255),f,b
  2995  00208C  D7FC               	bra	u10687
  2996  00208E  F000               	nop	
  2997                           
  2998                           ;led.c: 55: set_page(0, (char)((board == 0)*0b10111110 + (board == 1)*0b10100000 + (boar
      +                          d == 2)*0b10100110));
  2999  002090  0E00               	movlw	0
  3000  002092  0101               	movlb	1	; () banked
  3001  002094  6F13               	movwf	(set_page@page+1)& (0+255),b
  3002  002096  0E00               	movlw	0
  3003  002098  6F12               	movwf	set_page@page& (0+255),b
  3004  00209A  0E02               	movlw	2
  3005  00209C  0101               	movlb	1	; () banked
  3006  00209E  1933               	xorwf	init_led@board& (0+255),w,b
  3007  0020A0  0101               	movlb	1	; () banked
  3008  0020A2  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  3009  0020A4  A4D8               	btfss	status,2,c
  3010  0020A6  D002               	goto	u8590
  3011  0020A8  0E01               	movlw	1
  3012  0020AA  D001               	goto	u8600
  3013  0020AC                     u8590:
  3014  0020AC  0E00               	movlw	0
  3015  0020AE                     u8600:
  3016  0020AE  0DA6               	mullw	166
  3017  0020B0  CFF3 F117          	movff	prodl,??_init_led
  3018  0020B4  0101               	movlb	1	; () banked
  3019  0020B6  0533               	decf	init_led@board& (0+255),w,b
  3020  0020B8  0101               	movlb	1	; () banked
  3021  0020BA  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  3022  0020BC  A4D8               	btfss	status,2,c
  3023  0020BE  D002               	goto	u8610
  3024  0020C0  0E01               	movlw	1
  3025  0020C2  D001               	goto	u8620
  3026  0020C4                     u8610:
  3027  0020C4  0E00               	movlw	0
  3028  0020C6                     u8620:
  3029  0020C6  0DA0               	mullw	160
  3030  0020C8  CFF3 F118          	movff	prodl,??_init_led+1
  3031  0020CC  0101               	movlb	1	; () banked
  3032  0020CE  5133               	movf	init_led@board& (0+255),w,b
  3033  0020D0  0101               	movlb	1	; () banked
  3034  0020D2  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  3035  0020D4  A4D8               	btfss	status,2,c
  3036  0020D6  D002               	goto	u8630
  3037  0020D8  0E01               	movlw	1
  3038  0020DA  D001               	goto	u8640
  3039  0020DC                     u8630:
  3040  0020DC  0E00               	movlw	0
  3041  0020DE                     u8640:
  3042  0020DE  0DBE               	mullw	190
  3043  0020E0  50F3               	movf	prodl,w,c
  3044  0020E2  0101               	movlb	1	; () banked
  3045  0020E4  2518               	addwf	(??_init_led+1)& (0+255),w,b
  3046  0020E6  0101               	movlb	1	; () banked
  3047  0020E8  2517               	addwf	??_init_led& (0+255),w,b
  3048  0020EA  0101               	movlb	1	; () banked
  3049  0020EC  6F14               	movwf	set_page@cont_addr& (0+255),b
  3050  0020EE  EC87  F024         	call	_set_page	;wreg free
  3051                           
  3052                           ;led.c: 56: char all_on[24];
  3053                           ;led.c: 57: for(unsigned int i = 0; i < 24; i++)
  3054  0020F2  0E00               	movlw	0
  3055  0020F4  0101               	movlb	1	; () banked
  3056  0020F6  6F32               	movwf	(init_led@i+1)& (0+255),b
  3057  0020F8  0E00               	movlw	0
  3058  0020FA  6F31               	movwf	init_led@i& (0+255),b
  3059  0020FC                     l6047:
  3060                           
  3061                           ; BSR set to: 1
  3062  0020FC  0101               	movlb	1	; () banked
  3063  0020FE  5132               	movf	(init_led@i+1)& (0+255),w,b
  3064  002100  E113               	bnz	l6057
  3065  002102  0E18               	movlw	24
  3066  002104  0101               	movlb	1	; () banked
  3067  002106  5D31               	subwf	init_led@i& (0+255),w,b
  3068  002108  B0D8               	btfsc	status,0,c
  3069  00210A  D00E               	goto	u8660
  3070                           
  3071                           ; BSR set to: 1
  3072                           ;led.c: 58: all_on[i] = 0xFF;
  3073                           
  3074                           ; BSR set to: 1
  3075                           
  3076                           ; BSR set to: 1
  3077  00210C  0E19               	movlw	low init_led@all_on
  3078  00210E  0101               	movlb	1	; () banked
  3079  002110  2531               	addwf	init_led@i& (0+255),w,b
  3080  002112  6ED9               	movwf	fsr2l,c
  3081  002114  0E01               	movlw	high init_led@all_on
  3082  002116  0101               	movlb	1	; () banked
  3083  002118  2132               	addwfc	(init_led@i+1)& (0+255),w,b
  3084  00211A  6EDA               	movwf	fsr2h,c
  3085  00211C  0EFF               	movlw	255
  3086  00211E  6EDF               	movwf	indf2,c
  3087                           
  3088                           ; BSR set to: 1
  3089  002120  0101               	movlb	1	; () banked
  3090  002122  4B31               	infsnz	init_led@i& (0+255),f,b
  3091  002124  2B32               	incf	(init_led@i+1)& (0+255),f,b
  3092  002126  D7EA               	goto	l6047
  3093  002128                     u8660:
  3094  002128                     l6057:
  3095                           
  3096                           ; BSR set to: 1
  3097                           ;led.c: 59: _delay((unsigned long)((1)*(64000000/4000.0)));
  3098  002128  0E15               	movlw	21
  3099  00212A  0101               	movlb	1	; () banked
  3100  00212C  6F17               	movwf	??_init_led& (0+255),b
  3101  00212E  0EC6               	movlw	198
  3102  002130                     u10697:
  3103  002130  2EE8               	decfsz	wreg,f,c
  3104  002132  D7FE               	bra	u10697
  3105  002134  2F17               	decfsz	??_init_led& (0+255),f,b
  3106  002136  D7FC               	bra	u10697
  3107  002138  F000               	nop	
  3108                           
  3109                           ;led.c: 60: i2c_write(all_on, 24, (char)((board == 0)*0b10111110 + (board == 1)*0b101000
      +                          00 + (board == 2)*0b10100110), 0x0);
  3110  00213A  0E19               	movlw	low init_led@all_on
  3111  00213C  0101               	movlb	1	; () banked
  3112  00213E  6F06               	movwf	i2c_write@data& (0+255),b
  3113  002140  0E01               	movlw	high init_led@all_on
  3114  002142  0101               	movlb	1	; () banked
  3115  002144  6F07               	movwf	(i2c_write@data+1)& (0+255),b
  3116  002146  0E00               	movlw	0
  3117  002148  0101               	movlb	1	; () banked
  3118  00214A  6F09               	movwf	(i2c_write@data_len+1)& (0+255),b
  3119  00214C  0E18               	movlw	24
  3120  00214E  6F08               	movwf	i2c_write@data_len& (0+255),b
  3121  002150  0E02               	movlw	2
  3122  002152  0101               	movlb	1	; () banked
  3123  002154  1933               	xorwf	init_led@board& (0+255),w,b
  3124  002156  0101               	movlb	1	; () banked
  3125  002158  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  3126  00215A  A4D8               	btfss	status,2,c
  3127  00215C  D002               	goto	u8670
  3128  00215E  0E01               	movlw	1
  3129  002160  D001               	goto	u8680
  3130  002162                     u8670:
  3131  002162  0E00               	movlw	0
  3132  002164                     u8680:
  3133  002164  0DA6               	mullw	166
  3134  002166  CFF3 F117          	movff	prodl,??_init_led
  3135  00216A  0101               	movlb	1	; () banked
  3136  00216C  0533               	decf	init_led@board& (0+255),w,b
  3137  00216E  0101               	movlb	1	; () banked
  3138  002170  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  3139  002172  A4D8               	btfss	status,2,c
  3140  002174  D002               	goto	u8690
  3141  002176  0E01               	movlw	1
  3142  002178  D001               	goto	u8700
  3143  00217A                     u8690:
  3144  00217A  0E00               	movlw	0
  3145  00217C                     u8700:
  3146  00217C  0DA0               	mullw	160
  3147  00217E  CFF3 F118          	movff	prodl,??_init_led+1
  3148  002182  0101               	movlb	1	; () banked
  3149  002184  5133               	movf	init_led@board& (0+255),w,b
  3150  002186  0101               	movlb	1	; () banked
  3151  002188  1134               	iorwf	(init_led@board+1)& (0+255),w,b
  3152  00218A  A4D8               	btfss	status,2,c
  3153  00218C  D002               	goto	u8710
  3154  00218E  0E01               	movlw	1
  3155  002190  D001               	goto	u8720
  3156  002192                     u8710:
  3157  002192  0E00               	movlw	0
  3158  002194                     u8720:
  3159  002194  0DBE               	mullw	190
  3160  002196  50F3               	movf	prodl,w,c
  3161  002198  0101               	movlb	1	; () banked
  3162  00219A  2518               	addwf	(??_init_led+1)& (0+255),w,b
  3163  00219C  0101               	movlb	1	; () banked
  3164  00219E  2517               	addwf	??_init_led& (0+255),w,b
  3165  0021A0  0101               	movlb	1	; () banked
  3166  0021A2  6F0A               	movwf	i2c_write@addr& (0+255),b
  3167  0021A4  0E00               	movlw	0
  3168  0021A6  0101               	movlb	1	; () banked
  3169  0021A8  6F0B               	movwf	i2c_write@reg_addr& (0+255),b
  3170  0021AA  EC6A  F015         	call	_i2c_write	;wreg free
  3171  0021AE  0101               	movlb	1	; () banked
  3172  0021B0  4B33               	infsnz	init_led@board& (0+255),f,b
  3173  0021B2  2B34               	incf	(init_led@board+1)& (0+255),f,b
  3174                           
  3175                           ; BSR set to: 1
  3176  0021B4  0101               	movlb	1	; () banked
  3177  0021B6  BF34               	btfsc	(init_led@board+1)& (0+255),7,b
  3178  0021B8  D68E               	goto	l638
  3179  0021BA  0101               	movlb	1	; () banked
  3180  0021BC  5134               	movf	(init_led@board+1)& (0+255),w,b
  3181  0021BE  E101               	bnz	l642
  3182  0021C0  D683               	goto	L2
  3183  0021C2                     l642:
  3184                           
  3185                           ; BSR set to: 1
  3186  0021C2  0012               	return		;funcret
  3187  0021C4                     __end_of_init_led:
  3188                           	opt stack 0
  3189                           tblptru	equ	0xFF8
  3190                           tblptrh	equ	0xFF7
  3191                           tblptrl	equ	0xFF6
  3192                           tablat	equ	0xFF5
  3193                           prodl	equ	0xFF3
  3194                           postinc0	equ	0xFEE
  3195                           wreg	equ	0xFE8
  3196                           postdec1	equ	0xFE5
  3197                           fsr1h	equ	0xFE2
  3198                           fsr1l	equ	0xFE1
  3199                           indf2	equ	0xFDF
  3200                           fsr2h	equ	0xFDA
  3201                           fsr2l	equ	0xFD9
  3202                           status	equ	0xFD8
  3203                           
  3204 ;; *************** function _set_page *****************
  3205 ;; Defined at:
  3206 ;;		line 152 in file "led.c"
  3207 ;; Parameters:    Size  Location     Type
  3208 ;;  page            2   18[BANK1 ] unsigned int 
  3209 ;;  cont_addr       1   20[BANK1 ] unsigned char 
  3210 ;; Auto vars:     Size  Location     Type
  3211 ;;  succ            2   21[BANK1 ] int 
  3212 ;; Return value:  Size  Location     Type
  3213 ;;                  2   18[BANK1 ] int 
  3214 ;; Registers used:
  3215 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3216 ;; Tracked objects:
  3217 ;;		On entry : 0/0
  3218 ;;		On exit  : 0/0
  3219 ;;		Unchanged: 0/0
  3220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3221 ;;      Params:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3222 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Totals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;Total ram usage:        5 bytes
  3226 ;; Hardware stack levels used:    1
  3227 ;; Hardware stack levels required when called:   17
  3228 ;; This function calls:
  3229 ;;		_i2c_write_single
  3230 ;; This function is called by:
  3231 ;;		_main
  3232 ;;		_init_led
  3233 ;;		_open_short_test
  3234 ;;		_set_led_current
  3235 ;; This function uses a non-reentrant model
  3236 ;;
  3237                           
  3238                           	psect	text3
  3239  00490E                     __ptext3:
  3240                           	opt stack 0
  3241  00490E                     _set_page:
  3242                           	opt stack 13
  3243                           
  3244                           ;led.c: 154: BOOL succ;
  3245                           ;led.c: 156: succ = i2c_write_single(0xC5 , cont_addr, 0xFE);
  3246                           
  3247                           ; BSR set to: 1
  3248                           ;incstack = 0
  3249  00490E  C114  F10F         	movff	set_page@cont_addr,i2c_write_single@addr
  3250  004912  0EFE               	movlw	254
  3251  004914  0101               	movlb	1	; () banked
  3252  004916  6F10               	movwf	i2c_write_single@reg_addr& (0+255),b
  3253  004918  0EC5               	movlw	197
  3254  00491A  EC38  F025         	call	_i2c_write_single
  3255  00491E  C10F  F115         	movff	?_i2c_write_single,set_page@succ
  3256  004922  C110  F116         	movff	?_i2c_write_single+1,set_page@succ+1
  3257                           
  3258                           ;led.c: 158: succ &= i2c_write_single(page , cont_addr, 0xFD);
  3259  004926  C114  F10F         	movff	set_page@cont_addr,i2c_write_single@addr
  3260  00492A  0EFD               	movlw	253
  3261  00492C  0101               	movlb	1	; () banked
  3262  00492E  6F10               	movwf	i2c_write_single@reg_addr& (0+255),b
  3263  004930  0101               	movlb	1	; () banked
  3264  004932  5112               	movf	set_page@page& (0+255),w,b
  3265  004934  EC38  F025         	call	_i2c_write_single
  3266  004938  0101               	movlb	1	; () banked
  3267  00493A  510F               	movf	?_i2c_write_single& (0+255),w,b
  3268  00493C  0101               	movlb	1	; () banked
  3269  00493E  1715               	andwf	set_page@succ& (0+255),f,b
  3270  004940  0101               	movlb	1	; () banked
  3271  004942  5110               	movf	(?_i2c_write_single+1)& (0+255),w,b
  3272  004944  0101               	movlb	1	; () banked
  3273  004946  1716               	andwf	(set_page@succ+1)& (0+255),f,b
  3274                           
  3275                           ; BSR set to: 1
  3276                           ;led.c: 159: return succ;
  3277  004948  C115  F112         	movff	set_page@succ,?_set_page
  3278  00494C  C116  F113         	movff	set_page@succ+1,?_set_page+1
  3279  004950  0012               	return	
  3280  004952                     __end_of_set_page:
  3281                           	opt stack 0
  3282                           tblptru	equ	0xFF8
  3283                           tblptrh	equ	0xFF7
  3284                           tblptrl	equ	0xFF6
  3285                           tablat	equ	0xFF5
  3286                           prodl	equ	0xFF3
  3287                           postinc0	equ	0xFEE
  3288                           wreg	equ	0xFE8
  3289                           postdec1	equ	0xFE5
  3290                           fsr1h	equ	0xFE2
  3291                           fsr1l	equ	0xFE1
  3292                           indf2	equ	0xFDF
  3293                           fsr2h	equ	0xFDA
  3294                           fsr2l	equ	0xFD9
  3295                           status	equ	0xFD8
  3296                           
  3297 ;; *************** function _i2c_write_single *****************
  3298 ;; Defined at:
  3299 ;;		line 92 in file "communication.c"
  3300 ;; Parameters:    Size  Location     Type
  3301 ;;  data            1    wreg     unsigned char 
  3302 ;;  addr            1   15[BANK1 ] unsigned char 
  3303 ;;  reg_addr        1   16[BANK1 ] unsigned char 
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;  data            1   17[BANK1 ] unsigned char 
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  2   15[BANK1 ] int 
  3308 ;; Registers used:
  3309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3315 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3316 ;;      Locals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3318 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3319 ;;Total ram usage:        3 bytes
  3320 ;; Hardware stack levels used:    1
  3321 ;; Hardware stack levels required when called:   16
  3322 ;; This function calls:
  3323 ;;		_i2c_write
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;;		_init_led
  3327 ;;		_set_page
  3328 ;;		_init_clock
  3329 ;;		_wait_for_clock_stable
  3330 ;;		_open_short_test
  3331 ;;		_set_led_current
  3332 ;; This function uses a non-reentrant model
  3333 ;;
  3334                           
  3335                           	psect	text4
  3336  004A70                     __ptext4:
  3337                           	opt stack 0
  3338  004A70                     _i2c_write_single:
  3339                           	opt stack 13
  3340                           
  3341                           ; BSR set to: 1
  3342                           ;incstack = 0
  3343                           ;i2c_write_single@data stored from wreg
  3344  004A70  0101               	movlb	1	; () banked
  3345  004A72  6F11               	movwf	i2c_write_single@data& (0+255),b
  3346                           
  3347                           ;communication.c: 94: return i2c_write(&data, 1, addr, reg_addr);
  3348  004A74  0E11               	movlw	low i2c_write_single@data
  3349  004A76  0101               	movlb	1	; () banked
  3350  004A78  6F06               	movwf	i2c_write@data& (0+255),b
  3351  004A7A  0E01               	movlw	high i2c_write_single@data
  3352  004A7C  0101               	movlb	1	; () banked
  3353  004A7E  6F07               	movwf	(i2c_write@data+1)& (0+255),b
  3354  004A80  0E00               	movlw	0
  3355  004A82  0101               	movlb	1	; () banked
  3356  004A84  6F09               	movwf	(i2c_write@data_len+1)& (0+255),b
  3357  004A86  0E01               	movlw	1
  3358  004A88  6F08               	movwf	i2c_write@data_len& (0+255),b
  3359  004A8A  C10F  F10A         	movff	i2c_write_single@addr,i2c_write@addr
  3360  004A8E  C110  F10B         	movff	i2c_write_single@reg_addr,i2c_write@reg_addr
  3361  004A92  EC6A  F015         	call	_i2c_write	;wreg free
  3362  004A96  C106  F10F         	movff	?_i2c_write,?_i2c_write_single
  3363  004A9A  C107  F110         	movff	?_i2c_write+1,?_i2c_write_single+1
  3364  004A9E  0012               	return	
  3365  004AA0                     __end_of_i2c_write_single:
  3366                           	opt stack 0
  3367                           tblptru	equ	0xFF8
  3368                           tblptrh	equ	0xFF7
  3369                           tblptrl	equ	0xFF6
  3370                           tablat	equ	0xFF5
  3371                           prodl	equ	0xFF3
  3372                           postinc0	equ	0xFEE
  3373                           wreg	equ	0xFE8
  3374                           postdec1	equ	0xFE5
  3375                           fsr1h	equ	0xFE2
  3376                           fsr1l	equ	0xFE1
  3377                           indf2	equ	0xFDF
  3378                           fsr2h	equ	0xFDA
  3379                           fsr2l	equ	0xFD9
  3380                           status	equ	0xFD8
  3381                           
  3382 ;; *************** function _i2c_write *****************
  3383 ;; Defined at:
  3384 ;;		line 98 in file "communication.c"
  3385 ;; Parameters:    Size  Location     Type
  3386 ;;  data            2    6[BANK1 ] PTR unsigned char 
  3387 ;;		 -> led_cont(576), open_short_test@all_led(24), init_led@all_on(24), set_time@time_buffer(6), 
  3388 ;;		 -> i2c_write_single@data(1), main@all_on(192), 
  3389 ;;  data_len        2    8[BANK1 ] int 
  3390 ;;  addr            1   10[BANK1 ] unsigned char 
  3391 ;;  reg_addr        1   11[BANK1 ] unsigned char 
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  index           2   13[BANK1 ] int 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;                  2    6[BANK1 ] int 
  3396 ;; Registers used:
  3397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3403 ;;      Params:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3404 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3405 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3406 ;;      Totals:         0       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3407 ;;Total ram usage:        9 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:   15
  3410 ;; This function calls:
  3411 ;;		_I2C_Master_Start
  3412 ;;		_I2C_Master_Stop
  3413 ;;		_I2C_Master_Write
  3414 ;;		_set_status_led
  3415 ;; This function is called by:
  3416 ;;		_main
  3417 ;;		_i2c_write_single
  3418 ;;		_init_led
  3419 ;;		_set_time
  3420 ;;		_open_short_test
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           	psect	text5
  3425  002AD4                     __ptext5:
  3426                           	opt stack 0
  3427  002AD4                     _i2c_write:
  3428                           	opt stack 13
  3429                           
  3430                           ;communication.c: 102: if(i2c_bus_busy)
  3431                           
  3432                           ;incstack = 0
  3433  002AD4  0100               	movlb	0	; () banked
  3434  002AD6  51BD               	movf	_i2c_bus_busy& (0+255),w,b	;volatile
  3435  002AD8  0100               	movlb	0	; () banked
  3436  002ADA  11BE               	iorwf	(_i2c_bus_busy+1)& (0+255),w,b	;volatile
  3437  002ADC  B4D8               	btfsc	status,2,c
  3438  002ADE  D010               	goto	l319
  3439                           
  3440                           ; BSR set to: 0
  3441                           ;communication.c: 103: {
  3442                           ;communication.c: 104: set_status_led(ERROR, 1);
  3443  002AE0  0E00               	movlw	0
  3444  002AE2  0101               	movlb	1	; () banked
  3445  002AE4  6F01               	movwf	(set_status_led@status+1)& (0+255),b
  3446  002AE6  0E00               	movlw	0
  3447  002AE8  6F00               	movwf	set_status_led@status& (0+255),b
  3448  002AEA  0E00               	movlw	0
  3449  002AEC  0101               	movlb	1	; () banked
  3450  002AEE  6F03               	movwf	(set_status_led@error_override+1)& (0+255),b
  3451  002AF0  0E01               	movlw	1
  3452  002AF2  6F02               	movwf	set_status_led@error_override& (0+255),b
  3453  002AF4  EC64  F016         	call	_set_status_led	;wreg free
  3454                           
  3455                           ;communication.c: 105: return -1;
  3456  002AF8  0101               	movlb	1	; () banked
  3457  002AFA  6906               	setf	?_i2c_write& (0+255),b
  3458  002AFC  6907               	setf	(?_i2c_write+1)& (0+255),b
  3459                           
  3460                           ; BSR set to: 1
  3461  002AFE  0012               	return	
  3462  002B00                     l319:
  3463                           
  3464                           ; BSR set to: 0
  3465                           ;communication.c: 106: }
  3466                           ;communication.c: 108: if(SSP1CON1bits.WCOL)
  3467  002B00  AE96               	btfss	3990,7,c	;volatile
  3468  002B02  D010               	goto	l321
  3469                           
  3470                           ; BSR set to: 0
  3471                           ;communication.c: 109: {
  3472                           ;communication.c: 110: set_status_led(ERROR, 1);
  3473  002B04  0E00               	movlw	0
  3474  002B06  0101               	movlb	1	; () banked
  3475  002B08  6F01               	movwf	(set_status_led@status+1)& (0+255),b
  3476  002B0A  0E00               	movlw	0
  3477  002B0C  6F00               	movwf	set_status_led@status& (0+255),b
  3478  002B0E  0E00               	movlw	0
  3479  002B10  0101               	movlb	1	; () banked
  3480  002B12  6F03               	movwf	(set_status_led@error_override+1)& (0+255),b
  3481  002B14  0E01               	movlw	1
  3482  002B16  6F02               	movwf	set_status_led@error_override& (0+255),b
  3483  002B18  EC64  F016         	call	_set_status_led	;wreg free
  3484                           
  3485                           ;communication.c: 111: return -1;
  3486  002B1C  0101               	movlb	1	; () banked
  3487  002B1E  6906               	setf	?_i2c_write& (0+255),b
  3488  002B20  6907               	setf	(?_i2c_write+1)& (0+255),b
  3489                           
  3490                           ; BSR set to: 1
  3491  002B22  0012               	return	
  3492  002B24                     l321:
  3493                           
  3494                           ;communication.c: 112: }
  3495                           ;communication.c: 114: i2c_bus_busy = 1;
  3496                           
  3497                           ; BSR set to: 1
  3498  002B24  0E00               	movlw	0
  3499  002B26  0100               	movlb	0	; () banked
  3500  002B28  6FBE               	movwf	(_i2c_bus_busy+1)& (0+255),b	;volatile
  3501  002B2A  0E01               	movlw	1
  3502  002B2C  6FBD               	movwf	_i2c_bus_busy& (0+255),b	;volatile
  3503                           
  3504                           ; BSR set to: 0
  3505                           ;communication.c: 115: set_status_led(CLOCKMD, 0);
  3506  002B2E  0E00               	movlw	0
  3507  002B30  0101               	movlb	1	; () banked
  3508  002B32  6F01               	movwf	(set_status_led@status+1)& (0+255),b
  3509  002B34  0E04               	movlw	4
  3510  002B36  6F00               	movwf	set_status_led@status& (0+255),b
  3511  002B38  0E00               	movlw	0
  3512  002B3A  0101               	movlb	1	; () banked
  3513  002B3C  6F03               	movwf	(set_status_led@error_override+1)& (0+255),b
  3514  002B3E  0E00               	movlw	0
  3515  002B40  6F02               	movwf	set_status_led@error_override& (0+255),b
  3516  002B42  EC64  F016         	call	_set_status_led	;wreg free
  3517                           
  3518                           ;communication.c: 118: I2C_Master_Start();
  3519  002B46  EC17  F026         	call	_I2C_Master_Start	;wreg free
  3520                           
  3521                           ;communication.c: 120: I2C_Master_Write(addr &= ~(1 << 0));
  3522  002B4A  0101               	movlb	1	; () banked
  3523  002B4C  910A               	bcf	i2c_write@addr& (0+255),0,b
  3524  002B4E  C10A  F101         	movff	i2c_write@addr,I2C_Master_Write@d
  3525  002B52  0101               	movlb	1	; () banked
  3526  002B54  6B02               	clrf	(I2C_Master_Write@d+1)& (0+255),b
  3527  002B56  EC09  F026         	call	_I2C_Master_Write	;wreg free
  3528                           
  3529                           ;communication.c: 122: I2C_Master_Write(reg_addr);
  3530  002B5A  C10B  F101         	movff	i2c_write@reg_addr,I2C_Master_Write@d
  3531  002B5E  0101               	movlb	1	; () banked
  3532  002B60  6B02               	clrf	(I2C_Master_Write@d+1)& (0+255),b
  3533  002B62  EC09  F026         	call	_I2C_Master_Write	;wreg free
  3534                           
  3535                           ;communication.c: 123: for(int index = 0; index < data_len; index++)
  3536  002B66  0E00               	movlw	0
  3537  002B68  0101               	movlb	1	; () banked
  3538  002B6A  6F0E               	movwf	(i2c_write@index+1)& (0+255),b
  3539  002B6C  0E00               	movlw	0
  3540  002B6E  6F0D               	movwf	i2c_write@index& (0+255),b
  3541  002B70  D017               	goto	l322
  3542  002B72                     
  3543                           ; BSR set to: 1
  3544                           ;communication.c: 124: {
  3545                           ;communication.c: 126: I2C_Master_Write(data[index]);
  3546                           
  3547                           ; BSR set to: 1
  3548  002B72  0101               	movlb	1	; () banked
  3549  002B74  510D               	movf	i2c_write@index& (0+255),w,b
  3550  002B76  0101               	movlb	1	; () banked
  3551  002B78  2506               	addwf	i2c_write@data& (0+255),w,b
  3552  002B7A  6ED9               	movwf	fsr2l,c
  3553  002B7C  0101               	movlb	1	; () banked
  3554  002B7E  510E               	movf	(i2c_write@index+1)& (0+255),w,b
  3555  002B80  0101               	movlb	1	; () banked
  3556  002B82  2107               	addwfc	(i2c_write@data+1)& (0+255),w,b
  3557  002B84  6EDA               	movwf	fsr2h,c
  3558  002B86  50DF               	movf	indf2,w,c
  3559  002B88  0101               	movlb	1	; () banked
  3560  002B8A  6F0C               	movwf	??_i2c_write& (0+255),b
  3561  002B8C  0101               	movlb	1	; () banked
  3562  002B8E  510C               	movf	??_i2c_write& (0+255),w,b
  3563  002B90  0101               	movlb	1	; () banked
  3564  002B92  6F01               	movwf	I2C_Master_Write@d& (0+255),b
  3565  002B94  6B02               	clrf	(I2C_Master_Write@d+1)& (0+255),b
  3566  002B96  EC09  F026         	call	_I2C_Master_Write	;wreg free
  3567  002B9A  0101               	movlb	1	; () banked
  3568  002B9C  4B0D               	infsnz	i2c_write@index& (0+255),f,b
  3569  002B9E  2B0E               	incf	(i2c_write@index+1)& (0+255),f,b
  3570  002BA0                     l322:
  3571                           
  3572                           ; BSR set to: 1
  3573                           
  3574                           ; BSR set to: 1
  3575  002BA0  0101               	movlb	1	; () banked
  3576  002BA2  5108               	movf	i2c_write@data_len& (0+255),w,b
  3577  002BA4  0101               	movlb	1	; () banked
  3578  002BA6  5D0D               	subwf	i2c_write@index& (0+255),w,b
  3579  002BA8  0101               	movlb	1	; () banked
  3580  002BAA  510E               	movf	(i2c_write@index+1)& (0+255),w,b
  3581  002BAC  0A80               	xorlw	128
  3582  002BAE  0101               	movlb	1	; () banked
  3583  002BB0  6F0C               	movwf	??_i2c_write& (0+255),b
  3584  002BB2  0101               	movlb	1	; () banked
  3585  002BB4  5109               	movf	(i2c_write@data_len+1)& (0+255),w,b
  3586  002BB6  0A80               	xorlw	128
  3587  002BB8  0101               	movlb	1	; () banked
  3588  002BBA  590C               	subwfb	??_i2c_write& (0+255),w,b
  3589  002BBC  A0D8               	btfss	status,0,c
  3590  002BBE  D7D9               	goto	l323
  3591                           
  3592                           ; BSR set to: 1
  3593                           ;communication.c: 127: }
  3594                           ;communication.c: 130: I2C_Master_Stop();
  3595                           
  3596                           ; BSR set to: 1
  3597  002BC0  EC13  F026         	call	_I2C_Master_Stop	;wreg free
  3598                           
  3599                           ;communication.c: 133: i2c_bus_busy = 0;
  3600  002BC4  0E00               	movlw	0
  3601  002BC6  0100               	movlb	0	; () banked
  3602  002BC8  6FBE               	movwf	(_i2c_bus_busy+1)& (0+255),b	;volatile
  3603  002BCA  0E00               	movlw	0
  3604  002BCC  6FBD               	movwf	_i2c_bus_busy& (0+255),b	;volatile
  3605                           
  3606                           ; BSR set to: 0
  3607                           ;communication.c: 134: return 1;
  3608  002BCE  0E00               	movlw	0
  3609  002BD0  0101               	movlb	1	; () banked
  3610  002BD2  6F07               	movwf	(?_i2c_write+1)& (0+255),b
  3611  002BD4  0E01               	movlw	1
  3612  002BD6  6F06               	movwf	?_i2c_write& (0+255),b
  3613  002BD8  0012               	return	
  3614  002BDA                     __end_of_i2c_write:
  3615                           	opt stack 0
  3616                           tblptru	equ	0xFF8
  3617                           tblptrh	equ	0xFF7
  3618                           tblptrl	equ	0xFF6
  3619                           tablat	equ	0xFF5
  3620                           prodl	equ	0xFF3
  3621                           postinc0	equ	0xFEE
  3622                           wreg	equ	0xFE8
  3623                           postdec1	equ	0xFE5
  3624                           fsr1h	equ	0xFE2
  3625                           fsr1l	equ	0xFE1
  3626                           indf2	equ	0xFDF
  3627                           fsr2h	equ	0xFDA
  3628                           fsr2l	equ	0xFD9
  3629                           status	equ	0xFD8
  3630                           
  3631 ;; *************** function _set_status_led *****************
  3632 ;; Defined at:
  3633 ;;		line 75 in file "pwm.c"
  3634 ;; Parameters:    Size  Location     Type
  3635 ;;  status          2    0[BANK1 ] int 
  3636 ;;  error_overri    2    2[BANK1 ] int 
  3637 ;; Auto vars:     Size  Location     Type
  3638 ;;		None
  3639 ;; Return value:  Size  Location     Type
  3640 ;;                  1    wreg      void 
  3641 ;; Registers used:
  3642 ;;		wreg, status,2, status,0
  3643 ;; Tracked objects:
  3644 ;;		On entry : 0/0
  3645 ;;		On exit  : 0/0
  3646 ;;		Unchanged: 0/0
  3647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3648 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3649 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3650 ;;      Temps:          0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3651 ;;      Totals:         0       0       6       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3652 ;;Total ram usage:        6 bytes
  3653 ;; Hardware stack levels used:    1
  3654 ;; Hardware stack levels required when called:   13
  3655 ;; This function calls:
  3656 ;;		Nothing
  3657 ;; This function is called by:
  3658 ;;		_main
  3659 ;;		_i2c_write
  3660 ;;		_bt_process
  3661 ;; This function uses a non-reentrant model
  3662 ;;
  3663                           
  3664                           	psect	text6
  3665  002CC8                     __ptext6:
  3666                           	opt stack 0
  3667  002CC8                     _set_status_led:
  3668                           	opt stack 17
  3669                           
  3670                           ;pwm.c: 79: if(curr_stat == ERROR && !error_override)
  3671                           
  3672                           ; BSR set to: 1
  3673                           ;incstack = 0
  3674  002CC8  0100               	movlb	0	; () banked
  3675  002CCA  51D4               	movf	_curr_stat& (0+255),w,b	;volatile
  3676  002CCC  0100               	movlb	0	; () banked
  3677  002CCE  11D5               	iorwf	(_curr_stat+1)& (0+255),w,b	;volatile
  3678  002CD0  A4D8               	btfss	status,2,c
  3679  002CD2  D055               	goto	l203
  3680                           
  3681                           ; BSR set to: 0
  3682  002CD4  0101               	movlb	1	; () banked
  3683  002CD6  5102               	movf	set_status_led@error_override& (0+255),w,b
  3684  002CD8  0101               	movlb	1	; () banked
  3685  002CDA  1103               	iorwf	(set_status_led@error_override+1)& (0+255),w,b
  3686  002CDC  B4D8               	btfsc	status,2,c
  3687  002CDE  0012               	return	
  3688  002CE0  D04E               	goto	l203
  3689  002CE2                     
  3690                           ; BSR set to: 1
  3691                           ;pwm.c: 85: r_cnt = 5; g_cnt = 5; b_cnt = 0;
  3692                           
  3693                           ; BSR set to: 1
  3694  002CE2  0E00               	movlw	0
  3695  002CE4  6E42               	movwf	_r_cnt+1,c	;volatile
  3696  002CE6  0E05               	movlw	5
  3697  002CE8  6E41               	movwf	_r_cnt,c	;volatile
  3698  002CEA  0E00               	movlw	0
  3699  002CEC  6E3E               	movwf	_g_cnt+1,c	;volatile
  3700  002CEE  0E05               	movlw	5
  3701  002CF0  6E3D               	movwf	_g_cnt,c	;volatile
  3702  002CF2  0E00               	movlw	0
  3703  002CF4  6E3A               	movwf	_b_cnt+1,c	;volatile
  3704  002CF6  0E00               	movlw	0
  3705  002CF8  6E39               	movwf	_b_cnt,c	;volatile
  3706                           
  3707                           ;pwm.c: 86: break;
  3708  002CFA  0012               	return	
  3709  002CFC                     
  3710                           ; BSR set to: 1
  3711                           ;pwm.c: 88: r_cnt = 7; g_cnt = 3; b_cnt = 0;
  3712                           
  3713                           ; BSR set to: 1
  3714  002CFC  0E00               	movlw	0
  3715  002CFE  6E42               	movwf	_r_cnt+1,c	;volatile
  3716  002D00  0E07               	movlw	7
  3717  002D02  6E41               	movwf	_r_cnt,c	;volatile
  3718  002D04  0E00               	movlw	0
  3719  002D06  6E3E               	movwf	_g_cnt+1,c	;volatile
  3720  002D08  0E03               	movlw	3
  3721  002D0A  6E3D               	movwf	_g_cnt,c	;volatile
  3722  002D0C  0E00               	movlw	0
  3723  002D0E  6E3A               	movwf	_b_cnt+1,c	;volatile
  3724  002D10  0E00               	movlw	0
  3725  002D12  6E39               	movwf	_b_cnt,c	;volatile
  3726                           
  3727                           ;pwm.c: 89: break;
  3728  002D14  0012               	return	
  3729  002D16                     
  3730                           ; BSR set to: 1
  3731                           ;pwm.c: 91: r_cnt = 4; g_cnt = 0; b_cnt = 6;
  3732                           
  3733                           ; BSR set to: 1
  3734  002D16  0E00               	movlw	0
  3735  002D18  6E42               	movwf	_r_cnt+1,c	;volatile
  3736  002D1A  0E04               	movlw	4
  3737  002D1C  6E41               	movwf	_r_cnt,c	;volatile
  3738  002D1E  0E00               	movlw	0
  3739  002D20  6E3E               	movwf	_g_cnt+1,c	;volatile
  3740  002D22  0E00               	movlw	0
  3741  002D24  6E3D               	movwf	_g_cnt,c	;volatile
  3742  002D26  0E00               	movlw	0
  3743  002D28  6E3A               	movwf	_b_cnt+1,c	;volatile
  3744  002D2A  0E06               	movlw	6
  3745  002D2C  6E39               	movwf	_b_cnt,c	;volatile
  3746                           
  3747                           ;pwm.c: 92: break;
  3748  002D2E  0012               	return	
  3749  002D30                     
  3750                           ; BSR set to: 1
  3751                           ;pwm.c: 94: r_cnt = 0; g_cnt = 10; b_cnt = 0;
  3752                           
  3753                           ; BSR set to: 1
  3754  002D30  0E00               	movlw	0
  3755  002D32  6E42               	movwf	_r_cnt+1,c	;volatile
  3756  002D34  0E00               	movlw	0
  3757  002D36  6E41               	movwf	_r_cnt,c	;volatile
  3758  002D38  0E00               	movlw	0
  3759  002D3A  6E3E               	movwf	_g_cnt+1,c	;volatile
  3760  002D3C  0E0A               	movlw	10
  3761  002D3E  6E3D               	movwf	_g_cnt,c	;volatile
  3762  002D40  0E00               	movlw	0
  3763  002D42  6E3A               	movwf	_b_cnt+1,c	;volatile
  3764  002D44  0E00               	movlw	0
  3765  002D46  6E39               	movwf	_b_cnt,c	;volatile
  3766                           
  3767                           ;pwm.c: 95: break;
  3768  002D48  0012               	return	
  3769  002D4A                     
  3770                           ; BSR set to: 1
  3771                           ;pwm.c: 97: r_cnt = 0; g_cnt = 0; b_cnt = 10;
  3772                           
  3773                           ; BSR set to: 1
  3774  002D4A  0E00               	movlw	0
  3775  002D4C  6E42               	movwf	_r_cnt+1,c	;volatile
  3776  002D4E  0E00               	movlw	0
  3777  002D50  6E41               	movwf	_r_cnt,c	;volatile
  3778  002D52  0E00               	movlw	0
  3779  002D54  6E3E               	movwf	_g_cnt+1,c	;volatile
  3780  002D56  0E00               	movlw	0
  3781  002D58  6E3D               	movwf	_g_cnt,c	;volatile
  3782  002D5A  0E00               	movlw	0
  3783  002D5C  6E3A               	movwf	_b_cnt+1,c	;volatile
  3784  002D5E  0E0A               	movlw	10
  3785  002D60  6E39               	movwf	_b_cnt,c	;volatile
  3786                           
  3787                           ;pwm.c: 98: break;
  3788  002D62  0012               	return	
  3789  002D64                     
  3790                           ; BSR set to: 1
  3791                           ;pwm.c: 100: r_cnt = 10; g_cnt = 0; b_cnt = 0;
  3792                           
  3793                           ; BSR set to: 1
  3794  002D64  0E00               	movlw	0
  3795  002D66  6E42               	movwf	_r_cnt+1,c	;volatile
  3796  002D68  0E0A               	movlw	10
  3797  002D6A  6E41               	movwf	_r_cnt,c	;volatile
  3798  002D6C  0E00               	movlw	0
  3799  002D6E  6E3E               	movwf	_g_cnt+1,c	;volatile
  3800  002D70  0E00               	movlw	0
  3801  002D72  6E3D               	movwf	_g_cnt,c	;volatile
  3802  002D74  0E00               	movlw	0
  3803  002D76  6E3A               	movwf	_b_cnt+1,c	;volatile
  3804  002D78  0E00               	movlw	0
  3805  002D7A  6E39               	movwf	_b_cnt,c	;volatile
  3806                           
  3807                           ; BSR set to: 1
  3808                           ;pwm.c: 102: }
  3809                           
  3810                           ;pwm.c: 101: break;
  3811  002D7C  0012               	return	
  3812  002D7E                     l203:
  3813                           
  3814                           ; BSR set to: 1
  3815  002D7E  C100  F104         	movff	set_status_led@status,??_set_status_led
  3816  002D82  C101  F105         	movff	set_status_led@status+1,??_set_status_led+1
  3817                           
  3818                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3819                           ; Switch size 1, requested type "space"
  3820                           ; Number of cases is 1, Range of values is 0 to 0
  3821                           ; switch strategies available:
  3822                           ; Name         Instructions Cycles
  3823                           ; simple_byte            4     3 (average)
  3824                           ;	Chosen strategy is simple_byte
  3825  002D86  0101               	movlb	1	; () banked
  3826  002D88  5105               	movf	(??_set_status_led+1)& (0+255),w,b
  3827  002D8A  0A00               	xorlw	0	; case 0
  3828  002D8C  A4D8               	btfss	status,2,c
  3829  002D8E  D7EA               	goto	l210
  3830                           
  3831                           ; BSR set to: 1
  3832                           ; Switch size 1, requested type "space"
  3833                           ; Number of cases is 5, Range of values is 1 to 5
  3834                           ; switch strategies available:
  3835                           ; Name         Instructions Cycles
  3836                           ; simple_byte           16     9 (average)
  3837                           ;	Chosen strategy is simple_byte
  3838  002D90  0101               	movlb	1	; () banked
  3839  002D92  5104               	movf	??_set_status_led& (0+255),w,b
  3840  002D94  0A01               	xorlw	1	; case 1
  3841  002D96  B4D8               	btfsc	status,2,c
  3842  002D98  D7A4               	goto	l204
  3843  002D9A  0A03               	xorlw	3	; case 2
  3844  002D9C  B4D8               	btfsc	status,2,c
  3845  002D9E  D7AE               	goto	l206
  3846  002DA0  0A01               	xorlw	1	; case 3
  3847  002DA2  B4D8               	btfsc	status,2,c
  3848  002DA4  D7B8               	goto	l207
  3849  002DA6  0A07               	xorlw	7	; case 4
  3850  002DA8  B4D8               	btfsc	status,2,c
  3851  002DAA  D7C2               	goto	l208
  3852  002DAC  0A01               	xorlw	1	; case 5
  3853  002DAE  B4D8               	btfsc	status,2,c
  3854  002DB0  D7CC               	goto	l209
  3855  002DB2  D7D8               	goto	l210
  3856  002DB4                     __end_of_set_status_led:
  3857                           	opt stack 0
  3858                           tblptru	equ	0xFF8
  3859                           tblptrh	equ	0xFF7
  3860                           tblptrl	equ	0xFF6
  3861                           tablat	equ	0xFF5
  3862                           prodl	equ	0xFF3
  3863                           postinc0	equ	0xFEE
  3864                           wreg	equ	0xFE8
  3865                           postdec1	equ	0xFE5
  3866                           fsr1h	equ	0xFE2
  3867                           fsr1l	equ	0xFE1
  3868                           indf2	equ	0xFDF
  3869                           fsr2h	equ	0xFDA
  3870                           fsr2l	equ	0xFD9
  3871                           status	equ	0xFD8
  3872                           
  3873 ;; *************** function _init_io *****************
  3874 ;; Defined at:
  3875 ;;		line 6 in file "io.c"
  3876 ;; Parameters:    Size  Location     Type
  3877 ;;		None
  3878 ;; Auto vars:     Size  Location     Type
  3879 ;;		None
  3880 ;; Return value:  Size  Location     Type
  3881 ;;                  1    wreg      void 
  3882 ;; Registers used:
  3883 ;;		wreg, status,2
  3884 ;; Tracked objects:
  3885 ;;		On entry : 0/0
  3886 ;;		On exit  : 0/0
  3887 ;;		Unchanged: 0/0
  3888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3893 ;;Total ram usage:        0 bytes
  3894 ;; Hardware stack levels used:    1
  3895 ;; Hardware stack levels required when called:   13
  3896 ;; This function calls:
  3897 ;;		Nothing
  3898 ;; This function is called by:
  3899 ;;		_main
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text7
  3904  00361A                     __ptext7:
  3905                           	opt stack 0
  3906  00361A                     _init_io:
  3907                           	opt stack 17
  3908                           
  3909                           ;io.c: 10: PORTAbits.RA7 = 1;
  3910                           
  3911                           ; BSR set to: 1
  3912                           ;incstack = 0
  3913  00361A  8E8D               	bsf	3981,7,c	;volatile
  3914                           
  3915                           ;io.c: 11: ANSELAbits.ANSELA7 = 0;
  3916  00361C  010F               	movlb	15	; () banked
  3917  00361E  9F11               	bcf	17,7,b	;volatile
  3918                           
  3919                           ;io.c: 12: TRISAbits.TRISA7 = 0;
  3920  003620  9E88               	bcf	3976,7,c	;volatile
  3921                           
  3922                           ;io.c: 14: PORTAbits.RA6 = 1;
  3923  003622  8C8D               	bsf	3981,6,c	;volatile
  3924                           
  3925                           ;io.c: 15: ANSELAbits.ANSELA6 = 0;
  3926  003624  010F               	movlb	15	; () banked
  3927  003626  9D11               	bcf	17,6,b	;volatile
  3928                           
  3929                           ;io.c: 16: TRISAbits.TRISA6 = 0;
  3930  003628  9C88               	bcf	3976,6,c	;volatile
  3931                           
  3932                           ;io.c: 18: PORTCbits.RC0 = 1;
  3933  00362A  808F               	bsf	3983,0,c	;volatile
  3934                           
  3935                           ;io.c: 19: ANSELCbits.ANSELC0 = 0;
  3936  00362C  010F               	movlb	15	; () banked
  3937  00362E  9121               	bcf	33,0,b	;volatile
  3938                           
  3939                           ;io.c: 20: TRISCbits.TRISC0 = 0;
  3940  003630  908A               	bcf	3978,0,c	;volatile
  3941                           
  3942                           ;io.c: 22: PORTCbits.RC1 = 1;
  3943  003632  828F               	bsf	3983,1,c	;volatile
  3944                           
  3945                           ;io.c: 23: ANSELCbits.ANSELC1 = 0;
  3946  003634  010F               	movlb	15	; () banked
  3947  003636  9321               	bcf	33,1,b	;volatile
  3948                           
  3949                           ;io.c: 24: TRISCbits.TRISC1 = 0;
  3950  003638  928A               	bcf	3978,1,c	;volatile
  3951                           
  3952                           ;io.c: 41: ANSELAbits.ANSELA0 = 0;
  3953  00363A  010F               	movlb	15	; () banked
  3954  00363C  9111               	bcf	17,0,b	;volatile
  3955                           
  3956                           ;io.c: 42: TRISAbits.TRISA0 = 1;
  3957  00363E  8088               	bsf	3976,0,c	;volatile
  3958                           
  3959                           ;io.c: 43: IOCAPbits.IOCAP0 = 1;
  3960  003640  010F               	movlb	15	; () banked
  3961  003642  810C               	bsf	12,0,b	;volatile
  3962                           
  3963                           ;io.c: 44: IOCANbits.IOCAN0 = 0;
  3964  003644  010F               	movlb	15	; () banked
  3965  003646  910B               	bcf	11,0,b	;volatile
  3966                           
  3967                           ;io.c: 59: ANSELAbits.ANSELA5 = 0;
  3968  003648  010F               	movlb	15	; () banked
  3969  00364A  9B11               	bcf	17,5,b	;volatile
  3970                           
  3971                           ;io.c: 60: TRISAbits.TRISA5 = 1;
  3972  00364C  8A88               	bsf	3976,5,c	;volatile
  3973                           
  3974                           ;io.c: 61: IOCAPbits.IOCAP5 = 1;
  3975  00364E  010F               	movlb	15	; () banked
  3976  003650  8B0C               	bsf	12,5,b	;volatile
  3977                           
  3978                           ;io.c: 62: IOCANbits.IOCAN5 = 1;
  3979  003652  010F               	movlb	15	; () banked
  3980  003654  8B0B               	bsf	11,5,b	;volatile
  3981                           
  3982                           ;io.c: 65: ANSELCbits.ANSELC2 = 0;
  3983  003656  010F               	movlb	15	; () banked
  3984  003658  9521               	bcf	33,2,b	;volatile
  3985                           
  3986                           ;io.c: 66: TRISCbits.TRISC5 = 1;
  3987  00365A  8A8A               	bsf	3978,5,c	;volatile
  3988                           
  3989                           ;io.c: 67: IOCCPbits.IOCCP2 = 1;
  3990  00365C  010F               	movlb	15	; () banked
  3991  00365E  851C               	bsf	28,2,b	;volatile
  3992                           
  3993                           ;io.c: 68: IOCCNbits.IOCCN2 = 1;
  3994  003660  010F               	movlb	15	; () banked
  3995  003662  851B               	bsf	27,2,b	;volatile
  3996                           
  3997                           ;io.c: 77: ANSELCbits.ANSELC3 = 0;
  3998  003664  010F               	movlb	15	; () banked
  3999  003666  9721               	bcf	33,3,b	;volatile
  4000                           
  4001                           ;io.c: 78: TRISCbits.TRISC3 = 1;
  4002  003668  868A               	bsf	3978,3,c	;volatile
  4003                           
  4004                           ;io.c: 79: ANSELCbits.ANSELC4 = 0;
  4005  00366A  010F               	movlb	15	; () banked
  4006  00366C  9921               	bcf	33,4,b	;volatile
  4007                           
  4008                           ;io.c: 80: TRISCbits.TRISC4 = 1;
  4009  00366E  888A               	bsf	3978,4,c	;volatile
  4010                           
  4011                           ; BSR set to: 15
  4012                           ;io.c: 81: SSP1DATPPS = 0b10100;
  4013  003670  0E14               	movlw	20
  4014  003672  010E               	movlb	14	; () banked
  4015  003674  6FB8               	movwf	184,b	;volatile
  4016                           
  4017                           ;io.c: 82: SSP1CLKPPS = 0b10011;
  4018  003676  0E13               	movlw	19
  4019  003678  010E               	movlb	14	; () banked
  4020  00367A  6FB7               	movwf	183,b	;volatile
  4021                           
  4022                           ;io.c: 83: RC3PPS = 0x0F;;
  4023  00367C  0E0F               	movlw	15
  4024  00367E  010E               	movlb	14	; () banked
  4025  003680  6FFA               	movwf	250,b	;volatile
  4026                           
  4027                           ;io.c: 84: RC4PPS = 0x10;;
  4028  003682  0E10               	movlw	16
  4029  003684  010E               	movlb	14	; () banked
  4030  003686  6FFB               	movwf	251,b	;volatile
  4031                           
  4032                           ;io.c: 88: RB7PPS = 0b1100;;
  4033  003688  0E0C               	movlw	12
  4034  00368A  010E               	movlb	14	; () banked
  4035  00368C  6FF6               	movwf	246,b	;volatile
  4036                           
  4037                           ;io.c: 89: RB5PPS = 0b1011;;
  4038  00368E  0E0B               	movlw	11
  4039  003690  010E               	movlb	14	; () banked
  4040  003692  6FF4               	movwf	244,b	;volatile
  4041                           
  4042                           ; BSR set to: 14
  4043                           ;io.c: 90: ANSELBbits.ANSELB7 = 0;
  4044  003694  010F               	movlb	15	; () banked
  4045  003696  9F19               	bcf	25,7,b	;volatile
  4046                           
  4047                           ; BSR set to: 15
  4048                           ;io.c: 91: TRISBbits.TRISB7 = 1;
  4049  003698  8E89               	bsf	3977,7,c	;volatile
  4050                           
  4051                           ;io.c: 94: RC7PPS = 0b1010;;
  4052  00369A  0E0A               	movlw	10
  4053  00369C  010E               	movlb	14	; () banked
  4054  00369E  6FFE               	movwf	254,b	;volatile
  4055                           
  4056                           ;io.c: 95: RC6PPS = 0b1001;;
  4057  0036A0  0E09               	movlw	9
  4058  0036A2  010E               	movlb	14	; () banked
  4059  0036A4  6FFD               	movwf	253,b	;volatile
  4060                           
  4061                           ; BSR set to: 14
  4062                           ;io.c: 96: ANSELCbits.ANSELC7 = 0;
  4063  0036A6  010F               	movlb	15	; () banked
  4064  0036A8  9F21               	bcf	33,7,b	;volatile
  4065                           
  4066                           ; BSR set to: 15
  4067                           ;io.c: 97: TRISCbits.TRISC7 = 1;
  4068  0036AA  8E8A               	bsf	3978,7,c	;volatile
  4069                           
  4070                           ; BSR set to: 15
  4071  0036AC  0012               	return		;funcret
  4072  0036AE                     __end_of_init_io:
  4073                           	opt stack 0
  4074                           tblptru	equ	0xFF8
  4075                           tblptrh	equ	0xFF7
  4076                           tblptrl	equ	0xFF6
  4077                           tablat	equ	0xFF5
  4078                           prodl	equ	0xFF3
  4079                           postinc0	equ	0xFEE
  4080                           wreg	equ	0xFE8
  4081                           postdec1	equ	0xFE5
  4082                           fsr1h	equ	0xFE2
  4083                           fsr1l	equ	0xFE1
  4084                           indf2	equ	0xFDF
  4085                           fsr2h	equ	0xFDA
  4086                           fsr2l	equ	0xFD9
  4087                           status	equ	0xFD8
  4088                           
  4089 ;; *************** function _init_comm *****************
  4090 ;; Defined at:
  4091 ;;		line 37 in file "communication.c"
  4092 ;; Parameters:    Size  Location     Type
  4093 ;;		None
  4094 ;; Auto vars:     Size  Location     Type
  4095 ;;		None
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, status,2
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4108 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4109 ;;Total ram usage:        0 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:   13
  4112 ;; This function calls:
  4113 ;;		Nothing
  4114 ;; This function is called by:
  4115 ;;		_main
  4116 ;; This function uses a non-reentrant model
  4117 ;;
  4118                           
  4119                           	psect	text8
  4120  004B9C                     __ptext8:
  4121                           	opt stack 0
  4122  004B9C                     _init_comm:
  4123                           	opt stack 17
  4124                           
  4125                           ;communication.c: 40: SSP1CON1 = 0b00101000;
  4126                           
  4127                           ; BSR set to: 15
  4128                           ;incstack = 0
  4129  004B9C  0E28               	movlw	40
  4130  004B9E  6E96               	movwf	3990,c	;volatile
  4131                           
  4132                           ;communication.c: 41: SSP1CON2 = 0;
  4133  004BA0  0E00               	movlw	0
  4134  004BA2  6E97               	movwf	3991,c	;volatile
  4135                           
  4136                           ;communication.c: 42: SSP1ADD = 159;
  4137  004BA4  0E9F               	movlw	159
  4138  004BA6  6E93               	movwf	3987,c	;volatile
  4139                           
  4140                           ;communication.c: 43: SSP1STAT = 0;
  4141  004BA8  0E00               	movlw	0
  4142  004BAA  6E95               	movwf	3989,c	;volatile
  4143                           
  4144                           ;communication.c: 44: TRISCbits.TRISC3 = 1;
  4145  004BAC  868A               	bsf	3978,3,c	;volatile
  4146                           
  4147                           ;communication.c: 45: TRISCbits.TRISC4 = 1;
  4148  004BAE  888A               	bsf	3978,4,c	;volatile
  4149                           
  4150                           ;communication.c: 47: i2c_bus_busy = 0;
  4151  004BB0  0E00               	movlw	0
  4152  004BB2  0100               	movlb	0	; () banked
  4153  004BB4  6FBE               	movwf	(_i2c_bus_busy+1)& (0+255),b	;volatile
  4154  004BB6  0E00               	movlw	0
  4155  004BB8  6FBD               	movwf	_i2c_bus_busy& (0+255),b	;volatile
  4156                           
  4157                           ; BSR set to: 0
  4158  004BBA  0012               	return		;funcret
  4159  004BBC                     __end_of_init_comm:
  4160                           	opt stack 0
  4161                           tblptru	equ	0xFF8
  4162                           tblptrh	equ	0xFF7
  4163                           tblptrl	equ	0xFF6
  4164                           tablat	equ	0xFF5
  4165                           prodl	equ	0xFF3
  4166                           postinc0	equ	0xFEE
  4167                           wreg	equ	0xFE8
  4168                           postdec1	equ	0xFE5
  4169                           fsr1h	equ	0xFE2
  4170                           fsr1l	equ	0xFE1
  4171                           indf2	equ	0xFDF
  4172                           fsr2h	equ	0xFDA
  4173                           fsr2l	equ	0xFD9
  4174                           status	equ	0xFD8
  4175                           
  4176 ;; *************** function _i2c_read_single *****************
  4177 ;; Defined at:
  4178 ;;		line 138 in file "communication.c"
  4179 ;; Parameters:    Size  Location     Type
  4180 ;;  addr            1    wreg     unsigned char 
  4181 ;;  reg_addr        1   18[BANK1 ] unsigned char 
  4182 ;; Auto vars:     Size  Location     Type
  4183 ;;  addr            1   19[BANK1 ] unsigned char 
  4184 ;;  temp            1   20[BANK1 ] unsigned char 
  4185 ;; Return value:  Size  Location     Type
  4186 ;;                  1    wreg      unsigned char 
  4187 ;; Registers used:
  4188 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4189 ;; Tracked objects:
  4190 ;;		On entry : 0/0
  4191 ;;		On exit  : 0/0
  4192 ;;		Unchanged: 0/0
  4193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4194 ;;      Params:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4195 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4197 ;;      Totals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4198 ;;Total ram usage:        3 bytes
  4199 ;; Hardware stack levels used:    1
  4200 ;; Hardware stack levels required when called:   16
  4201 ;; This function calls:
  4202 ;;		_i2c_read
  4203 ;; This function is called by:
  4204 ;;		_main
  4205 ;;		_wait_for_clock_stable
  4206 ;; This function uses a non-reentrant model
  4207 ;;
  4208                           
  4209                           	psect	text9
  4210  004AFC                     __ptext9:
  4211                           	opt stack 0
  4212  004AFC                     _i2c_read_single:
  4213                           	opt stack 14
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;incstack = 0
  4217                           ;i2c_read_single@addr stored from wreg
  4218  004AFC  0101               	movlb	1	; () banked
  4219  004AFE  6F13               	movwf	i2c_read_single@addr& (0+255),b
  4220                           
  4221                           ;communication.c: 140: char temp;
  4222                           ;communication.c: 141: i2c_read(addr, reg_addr, 1, &temp);
  4223  004B00  C112  F105         	movff	i2c_read_single@reg_addr,i2c_read@reg_addr
  4224  004B04  0E00               	movlw	0
  4225  004B06  0101               	movlb	1	; () banked
  4226  004B08  6F07               	movwf	(i2c_read@data_read_len+1)& (0+255),b
  4227  004B0A  0E01               	movlw	1
  4228  004B0C  6F06               	movwf	i2c_read@data_read_len& (0+255),b
  4229  004B0E  0E14               	movlw	low i2c_read_single@temp
  4230  004B10  0101               	movlb	1	; () banked
  4231  004B12  6F08               	movwf	i2c_read@data& (0+255),b
  4232  004B14  0E01               	movlw	high i2c_read_single@temp
  4233  004B16  0101               	movlb	1	; () banked
  4234  004B18  6F09               	movwf	(i2c_read@data+1)& (0+255),b
  4235  004B1A  0101               	movlb	1	; () banked
  4236  004B1C  5113               	movf	i2c_read_single@addr& (0+255),w,b
  4237  004B1E  ECF3  F012         	call	_i2c_read
  4238                           
  4239                           ;communication.c: 142: return temp;
  4240  004B22  0101               	movlb	1	; () banked
  4241  004B24  5114               	movf	i2c_read_single@temp& (0+255),w,b
  4242  004B26  0012               	return	
  4243  004B28                     __end_of_i2c_read_single:
  4244                           	opt stack 0
  4245                           tblptru	equ	0xFF8
  4246                           tblptrh	equ	0xFF7
  4247                           tblptrl	equ	0xFF6
  4248                           tablat	equ	0xFF5
  4249                           prodl	equ	0xFF3
  4250                           postinc0	equ	0xFEE
  4251                           wreg	equ	0xFE8
  4252                           postdec1	equ	0xFE5
  4253                           fsr1h	equ	0xFE2
  4254                           fsr1l	equ	0xFE1
  4255                           indf2	equ	0xFDF
  4256                           fsr2h	equ	0xFDA
  4257                           fsr2l	equ	0xFD9
  4258                           status	equ	0xFD8
  4259                           
  4260 ;; *************** function _i2c_read *****************
  4261 ;; Defined at:
  4262 ;;		line 146 in file "communication.c"
  4263 ;; Parameters:    Size  Location     Type
  4264 ;;  addr            1    wreg     unsigned char 
  4265 ;;  reg_addr        1    5[BANK1 ] unsigned char 
  4266 ;;  data_read_le    2    6[BANK1 ] int 
  4267 ;;  data            2    8[BANK1 ] PTR unsigned char 
  4268 ;;		 -> dat(47), get_time@data(7), i2c_read_single@temp(1), 
  4269 ;; Auto vars:     Size  Location     Type
  4270 ;;  addr            1   15[BANK1 ] unsigned char 
  4271 ;;  index           2   16[BANK1 ] int 
  4272 ;; Return value:  Size  Location     Type
  4273 ;;                  2    5[BANK1 ] int 
  4274 ;; Registers used:
  4275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4276 ;; Tracked objects:
  4277 ;;		On entry : 0/0
  4278 ;;		On exit  : 0/0
  4279 ;;		Unchanged: 0/0
  4280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4281 ;;      Params:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4282 ;;      Locals:         0       0       3       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4283 ;;      Temps:          0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4284 ;;      Totals:         0       0      13       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4285 ;;Total ram usage:       13 bytes
  4286 ;; Hardware stack levels used:    1
  4287 ;; Hardware stack levels required when called:   15
  4288 ;; This function calls:
  4289 ;;		_I2C_Master_Read
  4290 ;;		_I2C_Master_Start
  4291 ;;		_I2C_Master_Stop
  4292 ;;		_I2C_Master_Wait
  4293 ;;		_I2C_Master_Write
  4294 ;; This function is called by:
  4295 ;;		_i2c_read_single
  4296 ;;		_open_short_test
  4297 ;; This function uses a non-reentrant model
  4298 ;;
  4299                           
  4300                           	psect	text10
  4301  0025E6                     __ptext10:
  4302                           	opt stack 0
  4303  0025E6                     _i2c_read:
  4304                           	opt stack 14
  4305                           
  4306                           ; BSR set to: 1
  4307                           ;incstack = 0
  4308                           ;i2c_read@addr stored from wreg
  4309  0025E6  0101               	movlb	1	; () banked
  4310  0025E8  6F0F               	movwf	i2c_read@addr& (0+255),b
  4311                           
  4312                           ;communication.c: 150: if(i2c_bus_busy)
  4313  0025EA  0100               	movlb	0	; () banked
  4314  0025EC  51BD               	movf	_i2c_bus_busy& (0+255),w,b	;volatile
  4315  0025EE  0100               	movlb	0	; () banked
  4316  0025F0  11BE               	iorwf	(_i2c_bus_busy+1)& (0+255),w,b	;volatile
  4317  0025F2  B4D8               	btfsc	status,2,c
  4318  0025F4  D004               	goto	l330
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;communication.c: 151: return -1;
  4322  0025F6  0101               	movlb	1	; () banked
  4323  0025F8  6905               	setf	?_i2c_read& (0+255),b
  4324  0025FA  6906               	setf	(?_i2c_read+1)& (0+255),b
  4325  0025FC  0012               	return	
  4326  0025FE                     l330:
  4327                           
  4328                           ;communication.c: 152: i2c_bus_busy = 1;
  4329                           
  4330                           ; BSR set to: 1
  4331  0025FE  0E00               	movlw	0
  4332  002600  0100               	movlb	0	; () banked
  4333  002602  6FBE               	movwf	(_i2c_bus_busy+1)& (0+255),b	;volatile
  4334  002604  0E01               	movlw	1
  4335  002606  6FBD               	movwf	_i2c_bus_busy& (0+255),b	;volatile
  4336                           
  4337                           ; BSR set to: 0
  4338                           ;communication.c: 155: I2C_Master_Start();
  4339  002608  EC17  F026         	call	_I2C_Master_Start	;wreg free
  4340                           
  4341                           ;communication.c: 157: I2C_Master_Write(addr &= ~(1 << 0));
  4342  00260C  0101               	movlb	1	; () banked
  4343  00260E  910F               	bcf	i2c_read@addr& (0+255),0,b
  4344  002610  C10F  F101         	movff	i2c_read@addr,I2C_Master_Write@d
  4345  002614  0101               	movlb	1	; () banked
  4346  002616  6B02               	clrf	(I2C_Master_Write@d+1)& (0+255),b
  4347  002618  EC09  F026         	call	_I2C_Master_Write	;wreg free
  4348                           
  4349                           ;communication.c: 159: I2C_Master_Write(reg_addr);
  4350  00261C  C105  F101         	movff	i2c_read@reg_addr,I2C_Master_Write@d
  4351  002620  0101               	movlb	1	; () banked
  4352  002622  6B02               	clrf	(I2C_Master_Write@d+1)& (0+255),b
  4353  002624  EC09  F026         	call	_I2C_Master_Write	;wreg free
  4354                           
  4355                           ;communication.c: 161: I2C_Master_Stop();
  4356  002628  EC13  F026         	call	_I2C_Master_Stop	;wreg free
  4357                           
  4358                           ;communication.c: 164: _delay((unsigned long)((30)*(64000000/4000000.0)));
  4359  00262C  0EA0               	movlw	160
  4360  00262E                     u10707:
  4361  00262E  2EE8               	decfsz	wreg,f,c
  4362  002630  D7FE               	bra	u10707
  4363                           
  4364                           ;communication.c: 167: I2C_Master_Start();
  4365  002632  EC17  F026         	call	_I2C_Master_Start	;wreg free
  4366                           
  4367                           ;communication.c: 170: I2C_Master_Write(addr |= 1 << 0);
  4368  002636  0101               	movlb	1	; () banked
  4369  002638  810F               	bsf	i2c_read@addr& (0+255),0,b
  4370  00263A  C10F  F101         	movff	i2c_read@addr,I2C_Master_Write@d
  4371  00263E  0101               	movlb	1	; () banked
  4372  002640  6B02               	clrf	(I2C_Master_Write@d+1)& (0+255),b
  4373  002642  EC09  F026         	call	_I2C_Master_Write	;wreg free
  4374                           
  4375                           ;communication.c: 173: I2C_Master_Wait();
  4376  002646  ECF6  F025         	call	_I2C_Master_Wait	;wreg free
  4377                           
  4378                           ;communication.c: 176: for(int index = 0; index < data_read_len - 1; index++)
  4379  00264A  0E00               	movlw	0
  4380  00264C  0101               	movlb	1	; () banked
  4381  00264E  6F11               	movwf	(i2c_read@index+1)& (0+255),b
  4382  002650  0E00               	movlw	0
  4383  002652  6F10               	movwf	i2c_read@index& (0+255),b
  4384  002654  D017               	goto	l332
  4385  002656                     
  4386                           ; BSR set to: 1
  4387                           ;communication.c: 177: {
  4388                           ;communication.c: 178: data[index] = I2C_Master_Read(0);
  4389                           
  4390                           ; BSR set to: 1
  4391  002656  0101               	movlb	1	; () banked
  4392  002658  5110               	movf	i2c_read@index& (0+255),w,b
  4393  00265A  0101               	movlb	1	; () banked
  4394  00265C  2508               	addwf	i2c_read@data& (0+255),w,b
  4395  00265E  6ED9               	movwf	fsr2l,c
  4396  002660  0101               	movlb	1	; () banked
  4397  002662  5111               	movf	(i2c_read@index+1)& (0+255),w,b
  4398  002664  0101               	movlb	1	; () banked
  4399  002666  2109               	addwfc	(i2c_read@data+1)& (0+255),w,b
  4400  002668  6EDA               	movwf	fsr2h,c
  4401  00266A  0E00               	movlw	0
  4402  00266C  0101               	movlb	1	; () banked
  4403  00266E  6F02               	movwf	(I2C_Master_Read@final_read+1)& (0+255),b
  4404  002670  0E00               	movlw	0
  4405  002672  6F01               	movwf	I2C_Master_Read@final_read& (0+255),b
  4406  002674  ECCB  F024         	call	_I2C_Master_Read	;wreg free
  4407  002678  0101               	movlb	1	; () banked
  4408  00267A  5101               	movf	?_I2C_Master_Read& (0+255),w,b
  4409  00267C  6EDF               	movwf	indf2,c
  4410                           
  4411                           ; BSR set to: 1
  4412  00267E  0101               	movlb	1	; () banked
  4413  002680  4B10               	infsnz	i2c_read@index& (0+255),f,b
  4414  002682  2B11               	incf	(i2c_read@index+1)& (0+255),f,b
  4415  002684                     l332:
  4416                           
  4417                           ; BSR set to: 1
  4418                           
  4419                           ; BSR set to: 1
  4420  002684  0EFF               	movlw	255
  4421  002686  0101               	movlb	1	; () banked
  4422  002688  6F0A               	movwf	??_i2c_read& (0+255),b
  4423  00268A  0EFF               	movlw	255
  4424  00268C  0101               	movlb	1	; () banked
  4425  00268E  6F0B               	movwf	(??_i2c_read+1)& (0+255),b
  4426  002690  C106  F10C         	movff	i2c_read@data_read_len,??_i2c_read+2
  4427  002694  C107  F10D         	movff	i2c_read@data_read_len+1,??_i2c_read+3
  4428  002698  0101               	movlb	1	; () banked
  4429  00269A  510A               	movf	??_i2c_read& (0+255),w,b
  4430  00269C  0101               	movlb	1	; () banked
  4431  00269E  270C               	addwf	(??_i2c_read+2)& (0+255),f,b
  4432  0026A0  0101               	movlb	1	; () banked
  4433  0026A2  510B               	movf	(??_i2c_read+1)& (0+255),w,b
  4434  0026A4  0101               	movlb	1	; () banked
  4435  0026A6  230D               	addwfc	(??_i2c_read+3)& (0+255),f,b
  4436  0026A8  0101               	movlb	1	; () banked
  4437  0026AA  510C               	movf	(??_i2c_read+2)& (0+255),w,b
  4438  0026AC  0101               	movlb	1	; () banked
  4439  0026AE  5D10               	subwf	i2c_read@index& (0+255),w,b
  4440  0026B0  0101               	movlb	1	; () banked
  4441  0026B2  5111               	movf	(i2c_read@index+1)& (0+255),w,b
  4442  0026B4  0A80               	xorlw	128
  4443  0026B6  0101               	movlb	1	; () banked
  4444  0026B8  6F0E               	movwf	(??_i2c_read+4)& (0+255),b
  4445  0026BA  0101               	movlb	1	; () banked
  4446  0026BC  510D               	movf	(??_i2c_read+3)& (0+255),w,b
  4447  0026BE  0A80               	xorlw	128
  4448  0026C0  0101               	movlb	1	; () banked
  4449  0026C2  590E               	subwfb	(??_i2c_read+4)& (0+255),w,b
  4450  0026C4  A0D8               	btfss	status,0,c
  4451  0026C6  D7C7               	goto	l333
  4452                           
  4453                           ; BSR set to: 1
  4454                           ;communication.c: 179: }
  4455                           ;communication.c: 181: data[data_read_len - 1] = I2C_Master_Read(1);
  4456                           
  4457                           ; BSR set to: 1
  4458  0026C8  0EFF               	movlw	255
  4459  0026CA  0101               	movlb	1	; () banked
  4460  0026CC  6F0A               	movwf	??_i2c_read& (0+255),b
  4461  0026CE  0EFF               	movlw	255
  4462  0026D0  0101               	movlb	1	; () banked
  4463  0026D2  6F0B               	movwf	(??_i2c_read+1)& (0+255),b
  4464  0026D4  C106  F10C         	movff	i2c_read@data_read_len,??_i2c_read+2
  4465  0026D8  C107  F10D         	movff	i2c_read@data_read_len+1,??_i2c_read+3
  4466  0026DC  0101               	movlb	1	; () banked
  4467  0026DE  510A               	movf	??_i2c_read& (0+255),w,b
  4468  0026E0  0101               	movlb	1	; () banked
  4469  0026E2  270C               	addwf	(??_i2c_read+2)& (0+255),f,b
  4470  0026E4  0101               	movlb	1	; () banked
  4471  0026E6  510B               	movf	(??_i2c_read+1)& (0+255),w,b
  4472  0026E8  0101               	movlb	1	; () banked
  4473  0026EA  230D               	addwfc	(??_i2c_read+3)& (0+255),f,b
  4474  0026EC  0101               	movlb	1	; () banked
  4475  0026EE  510C               	movf	(??_i2c_read+2)& (0+255),w,b
  4476  0026F0  0101               	movlb	1	; () banked
  4477  0026F2  2508               	addwf	i2c_read@data& (0+255),w,b
  4478  0026F4  6ED9               	movwf	fsr2l,c
  4479  0026F6  0101               	movlb	1	; () banked
  4480  0026F8  510D               	movf	(??_i2c_read+3)& (0+255),w,b
  4481  0026FA  0101               	movlb	1	; () banked
  4482  0026FC  2109               	addwfc	(i2c_read@data+1)& (0+255),w,b
  4483  0026FE  6EDA               	movwf	fsr2h,c
  4484  002700  0E00               	movlw	0
  4485  002702  0101               	movlb	1	; () banked
  4486  002704  6F02               	movwf	(I2C_Master_Read@final_read+1)& (0+255),b
  4487  002706  0E01               	movlw	1
  4488  002708  6F01               	movwf	I2C_Master_Read@final_read& (0+255),b
  4489  00270A  ECCB  F024         	call	_I2C_Master_Read	;wreg free
  4490  00270E  0101               	movlb	1	; () banked
  4491  002710  5101               	movf	?_I2C_Master_Read& (0+255),w,b
  4492  002712  6EDF               	movwf	indf2,c
  4493                           
  4494                           ; BSR set to: 1
  4495                           ;communication.c: 183: I2C_Master_Stop();
  4496  002714  EC13  F026         	call	_I2C_Master_Stop	;wreg free
  4497                           
  4498                           ;communication.c: 186: i2c_bus_busy = 0;
  4499  002718  0E00               	movlw	0
  4500  00271A  0100               	movlb	0	; () banked
  4501  00271C  6FBE               	movwf	(_i2c_bus_busy+1)& (0+255),b	;volatile
  4502  00271E  0E00               	movlw	0
  4503  002720  6FBD               	movwf	_i2c_bus_busy& (0+255),b	;volatile
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;communication.c: 187: return 1;
  4507  002722  0E00               	movlw	0
  4508  002724  0101               	movlb	1	; () banked
  4509  002726  6F06               	movwf	(?_i2c_read+1)& (0+255),b
  4510  002728  0E01               	movlw	1
  4511  00272A  6F05               	movwf	?_i2c_read& (0+255),b
  4512  00272C  0012               	return	
  4513  00272E                     __end_of_i2c_read:
  4514                           	opt stack 0
  4515                           tblptru	equ	0xFF8
  4516                           tblptrh	equ	0xFF7
  4517                           tblptrl	equ	0xFF6
  4518                           tablat	equ	0xFF5
  4519                           prodl	equ	0xFF3
  4520                           postinc0	equ	0xFEE
  4521                           wreg	equ	0xFE8
  4522                           postdec1	equ	0xFE5
  4523                           fsr1h	equ	0xFE2
  4524                           fsr1l	equ	0xFE1
  4525                           indf2	equ	0xFDF
  4526                           fsr2h	equ	0xFDA
  4527                           fsr2l	equ	0xFD9
  4528                           status	equ	0xFD8
  4529                           
  4530 ;; *************** function _I2C_Master_Write *****************
  4531 ;; Defined at:
  4532 ;;		line 206 in file "communication.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;  d               2    1[BANK1 ] unsigned int 
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;		None
  4537 ;; Return value:  Size  Location     Type
  4538 ;;                  1    wreg      void 
  4539 ;; Registers used:
  4540 ;;		wreg, status,2, status,0, cstack
  4541 ;; Tracked objects:
  4542 ;;		On entry : 0/0
  4543 ;;		On exit  : 0/0
  4544 ;;		Unchanged: 0/0
  4545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4546 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4547 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4548 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4549 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4550 ;;Total ram usage:        2 bytes
  4551 ;; Hardware stack levels used:    1
  4552 ;; Hardware stack levels required when called:   14
  4553 ;; This function calls:
  4554 ;;		_I2C_Master_Wait
  4555 ;; This function is called by:
  4556 ;;		_i2c_write
  4557 ;;		_i2c_read
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text11
  4562  004C12                     __ptext11:
  4563                           	opt stack 0
  4564  004C12                     _I2C_Master_Write:
  4565                           	opt stack 13
  4566                           
  4567                           ;communication.c: 208: I2C_Master_Wait();
  4568                           
  4569                           ; BSR set to: 1
  4570                           ;incstack = 0
  4571  004C12  ECF6  F025         	call	_I2C_Master_Wait	;wreg free
  4572                           
  4573                           ;communication.c: 210: SSP1BUF = d;
  4574  004C16  C101  FF92         	movff	I2C_Master_Write@d,3986	;volatile
  4575  004C1A  0012               	return		;funcret
  4576  004C1C                     __end_of_I2C_Master_Write:
  4577                           	opt stack 0
  4578                           tblptru	equ	0xFF8
  4579                           tblptrh	equ	0xFF7
  4580                           tblptrl	equ	0xFF6
  4581                           tablat	equ	0xFF5
  4582                           prodl	equ	0xFF3
  4583                           postinc0	equ	0xFEE
  4584                           wreg	equ	0xFE8
  4585                           postdec1	equ	0xFE5
  4586                           fsr1h	equ	0xFE2
  4587                           fsr1l	equ	0xFE1
  4588                           indf2	equ	0xFDF
  4589                           fsr2h	equ	0xFDA
  4590                           fsr2l	equ	0xFD9
  4591                           status	equ	0xFD8
  4592                           
  4593 ;; *************** function _I2C_Master_Stop *****************
  4594 ;; Defined at:
  4595 ;;		line 234 in file "communication.c"
  4596 ;; Parameters:    Size  Location     Type
  4597 ;;		None
  4598 ;; Auto vars:     Size  Location     Type
  4599 ;;		None
  4600 ;; Return value:  Size  Location     Type
  4601 ;;                  1    wreg      void 
  4602 ;; Registers used:
  4603 ;;		wreg, status,2, status,0, cstack
  4604 ;; Tracked objects:
  4605 ;;		On entry : 0/0
  4606 ;;		On exit  : 0/0
  4607 ;;		Unchanged: 0/0
  4608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4609 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4610 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4611 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4612 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4613 ;;Total ram usage:        0 bytes
  4614 ;; Hardware stack levels used:    1
  4615 ;; Hardware stack levels required when called:   14
  4616 ;; This function calls:
  4617 ;;		_I2C_Master_Wait
  4618 ;; This function is called by:
  4619 ;;		_i2c_write
  4620 ;;		_i2c_read
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text12
  4625  004C26                     __ptext12:
  4626                           	opt stack 0
  4627  004C26                     _I2C_Master_Stop:
  4628                           	opt stack 13
  4629                           
  4630                           ;communication.c: 236: I2C_Master_Wait();
  4631                           
  4632                           ;incstack = 0
  4633  004C26  ECF6  F025         	call	_I2C_Master_Wait	;wreg free
  4634                           
  4635                           ;communication.c: 237: SSP1CON2bits.PEN = 1;
  4636  004C2A  8497               	bsf	3991,2,c	;volatile
  4637  004C2C  0012               	return		;funcret
  4638  004C2E                     __end_of_I2C_Master_Stop:
  4639                           	opt stack 0
  4640                           tblptru	equ	0xFF8
  4641                           tblptrh	equ	0xFF7
  4642                           tblptrl	equ	0xFF6
  4643                           tablat	equ	0xFF5
  4644                           prodl	equ	0xFF3
  4645                           postinc0	equ	0xFEE
  4646                           wreg	equ	0xFE8
  4647                           postdec1	equ	0xFE5
  4648                           fsr1h	equ	0xFE2
  4649                           fsr1l	equ	0xFE1
  4650                           indf2	equ	0xFDF
  4651                           fsr2h	equ	0xFDA
  4652                           fsr2l	equ	0xFD9
  4653                           status	equ	0xFD8
  4654                           
  4655 ;; *************** function _I2C_Master_Start *****************
  4656 ;; Defined at:
  4657 ;;		line 198 in file "communication.c"
  4658 ;; Parameters:    Size  Location     Type
  4659 ;;		None
  4660 ;; Auto vars:     Size  Location     Type
  4661 ;;		None
  4662 ;; Return value:  Size  Location     Type
  4663 ;;                  1    wreg      void 
  4664 ;; Registers used:
  4665 ;;		wreg, status,2, status,0, cstack
  4666 ;; Tracked objects:
  4667 ;;		On entry : 0/0
  4668 ;;		On exit  : 0/0
  4669 ;;		Unchanged: 0/0
  4670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4674 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4675 ;;Total ram usage:        0 bytes
  4676 ;; Hardware stack levels used:    1
  4677 ;; Hardware stack levels required when called:   14
  4678 ;; This function calls:
  4679 ;;		_I2C_Master_Wait
  4680 ;; This function is called by:
  4681 ;;		_i2c_write
  4682 ;;		_i2c_read
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           
  4686                           	psect	text13
  4687  004C2E                     __ptext13:
  4688                           	opt stack 0
  4689  004C2E                     _I2C_Master_Start:
  4690                           	opt stack 13
  4691                           
  4692                           ;communication.c: 200: I2C_Master_Wait();
  4693                           
  4694                           ;incstack = 0
  4695  004C2E  ECF6  F025         	call	_I2C_Master_Wait	;wreg free
  4696                           
  4697                           ;communication.c: 202: SSP1CON2bits.SEN = 1;
  4698  004C32  8097               	bsf	3991,0,c	;volatile
  4699  004C34  0012               	return		;funcret
  4700  004C36                     __end_of_I2C_Master_Start:
  4701                           	opt stack 0
  4702                           tblptru	equ	0xFF8
  4703                           tblptrh	equ	0xFF7
  4704                           tblptrl	equ	0xFF6
  4705                           tablat	equ	0xFF5
  4706                           prodl	equ	0xFF3
  4707                           postinc0	equ	0xFEE
  4708                           wreg	equ	0xFE8
  4709                           postdec1	equ	0xFE5
  4710                           fsr1h	equ	0xFE2
  4711                           fsr1l	equ	0xFE1
  4712                           indf2	equ	0xFDF
  4713                           fsr2h	equ	0xFDA
  4714                           fsr2l	equ	0xFD9
  4715                           status	equ	0xFD8
  4716                           
  4717 ;; *************** function _I2C_Master_Read *****************
  4718 ;; Defined at:
  4719 ;;		line 214 in file "communication.c"
  4720 ;; Parameters:    Size  Location     Type
  4721 ;;  final_read      2    1[BANK1 ] int 
  4722 ;; Auto vars:     Size  Location     Type
  4723 ;;  temp            2    3[BANK1 ] unsigned short 
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  2    1[BANK1 ] unsigned short 
  4726 ;; Registers used:
  4727 ;;		wreg, status,2, status,0, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4733 ;;      Params:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4734 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4735 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4736 ;;      Totals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4737 ;;Total ram usage:        4 bytes
  4738 ;; Hardware stack levels used:    1
  4739 ;; Hardware stack levels required when called:   14
  4740 ;; This function calls:
  4741 ;;		_I2C_Master_Wait
  4742 ;; This function is called by:
  4743 ;;		_i2c_read
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text14
  4748  004996                     __ptext14:
  4749                           	opt stack 0
  4750  004996                     _I2C_Master_Read:
  4751                           	opt stack 14
  4752                           
  4753                           ;communication.c: 216: unsigned short temp;
  4754                           ;communication.c: 217: I2C_Master_Wait();
  4755                           
  4756                           ;incstack = 0
  4757  004996  ECF6  F025         	call	_I2C_Master_Wait	;wreg free
  4758                           
  4759                           ;communication.c: 218: SSP1CON2bits.RCEN = 1;
  4760  00499A  8697               	bsf	3991,3,c	;volatile
  4761                           
  4762                           ;communication.c: 219: PIR3bits.SSP1IF = 0;
  4763  00499C  010E               	movlb	14	; () banked
  4764  00499E  91CD               	bcf	205,0,b	;volatile
  4765                           
  4766                           ;communication.c: 220: I2C_Master_Wait();
  4767  0049A0  ECF6  F025         	call	_I2C_Master_Wait	;wreg free
  4768  0049A4  010E               	movlb	14	; () banked
  4769  0049A6  A1CD               	btfss	205,0,b	;volatile
  4770  0049A8  D7FD               	goto	l350
  4771                           
  4772                           ; BSR set to: 14
  4773                           ;communication.c: 223: temp = SSP1BUF;
  4774  0049AA  CF92 F103          	movff	3986,I2C_Master_Read@temp	;volatile
  4775  0049AE  0101               	movlb	1	; () banked
  4776  0049B0  6B04               	clrf	(I2C_Master_Read@temp+1)& (0+255),b
  4777                           
  4778                           ;communication.c: 224: PIR3bits.SSP1IF = 0;
  4779  0049B2  010E               	movlb	14	; () banked
  4780  0049B4  91CD               	bcf	205,0,b	;volatile
  4781                           
  4782                           ; BSR set to: 14
  4783                           ;communication.c: 225: I2C_Master_Wait();
  4784  0049B6  ECF6  F025         	call	_I2C_Master_Wait	;wreg free
  4785                           
  4786                           ;communication.c: 227: SSP1CON2bits.ACKDT = (unsigned) final_read;
  4787  0049BA  0101               	movlb	1	; () banked
  4788  0049BC  B101               	btfsc	I2C_Master_Read@final_read& (0+255),0,b
  4789  0049BE  D002               	bra	u7985
  4790  0049C0  9A97               	bcf	3991,5,c	;volatile
  4791  0049C2  D001               	bra	u7986
  4792  0049C4                     u7985:
  4793  0049C4  8A97               	bsf	3991,5,c	;volatile
  4794  0049C6                     u7986:
  4795                           
  4796                           ;communication.c: 229: SSP1CON2bits.ACKEN = 1;
  4797  0049C6  8897               	bsf	3991,4,c	;volatile
  4798                           
  4799                           ;communication.c: 230: return temp;
  4800  0049C8  C103  F101         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
  4801  0049CC  C104  F102         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
  4802  0049D0  0012               	return	
  4803  0049D2                     __end_of_I2C_Master_Read:
  4804                           	opt stack 0
  4805                           tblptru	equ	0xFF8
  4806                           tblptrh	equ	0xFF7
  4807                           tblptrl	equ	0xFF6
  4808                           tablat	equ	0xFF5
  4809                           prodl	equ	0xFF3
  4810                           postinc0	equ	0xFEE
  4811                           wreg	equ	0xFE8
  4812                           postdec1	equ	0xFE5
  4813                           fsr1h	equ	0xFE2
  4814                           fsr1l	equ	0xFE1
  4815                           indf2	equ	0xFDF
  4816                           fsr2h	equ	0xFDA
  4817                           fsr2l	equ	0xFD9
  4818                           status	equ	0xFD8
  4819                           
  4820 ;; *************** function _I2C_Master_Wait *****************
  4821 ;; Defined at:
  4822 ;;		line 192 in file "communication.c"
  4823 ;; Parameters:    Size  Location     Type
  4824 ;;		None
  4825 ;; Auto vars:     Size  Location     Type
  4826 ;;		None
  4827 ;; Return value:  Size  Location     Type
  4828 ;;                  1    wreg      void 
  4829 ;; Registers used:
  4830 ;;		wreg, status,2, status,0
  4831 ;; Tracked objects:
  4832 ;;		On entry : 0/0
  4833 ;;		On exit  : 0/0
  4834 ;;		Unchanged: 0/0
  4835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4838 ;;      Temps:          0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4839 ;;      Totals:         0       0       1       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4840 ;;Total ram usage:        1 bytes
  4841 ;; Hardware stack levels used:    1
  4842 ;; Hardware stack levels required when called:   13
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_i2c_read
  4847 ;;		_I2C_Master_Start
  4848 ;;		_I2C_Master_Write
  4849 ;;		_I2C_Master_Read
  4850 ;;		_I2C_Master_Stop
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text15
  4855  004BEC                     __ptext15:
  4856                           	opt stack 0
  4857  004BEC                     _I2C_Master_Wait:
  4858                           	opt stack 13
  4859                           
  4860                           ;communication.c: 194: while ((SSP1STATbits.R_W) || (SSP1CON2 & 0x1F));
  4861                           
  4862                           ;incstack = 0
  4863  004BEC  B495               	btfsc	3989,2,c	;volatile
  4864  004BEE  D7FE               	goto	_I2C_Master_Wait
  4865  004BF0  CF97 F100          	movff	3991,??_I2C_Master_Wait	;volatile
  4866  004BF4  0E1F               	movlw	31
  4867  004BF6  0101               	movlb	1	; () banked
  4868  004BF8  1700               	andwf	??_I2C_Master_Wait& (0+255),f,b
  4869  004BFA  B4D8               	btfsc	status,2,c
  4870  004BFC  0012               	return	
  4871  004BFE  D7F6               	goto	_I2C_Master_Wait
  4872  004C00                     __end_of_I2C_Master_Wait:
  4873                           	opt stack 0
  4874                           tblptru	equ	0xFF8
  4875                           tblptrh	equ	0xFF7
  4876                           tblptrl	equ	0xFF6
  4877                           tablat	equ	0xFF5
  4878                           prodl	equ	0xFF3
  4879                           postinc0	equ	0xFEE
  4880                           wreg	equ	0xFE8
  4881                           postdec1	equ	0xFE5
  4882                           fsr1h	equ	0xFE2
  4883                           fsr1l	equ	0xFE1
  4884                           indf2	equ	0xFDF
  4885                           fsr2h	equ	0xFDA
  4886                           fsr2l	equ	0xFD9
  4887                           status	equ	0xFD8
  4888                           
  4889 ;; *************** function _low_pri_isr *****************
  4890 ;; Defined at:
  4891 ;;		line 154 in file "main.c"
  4892 ;; Parameters:    Size  Location     Type
  4893 ;;		None
  4894 ;; Auto vars:     Size  Location     Type
  4895 ;;		None
  4896 ;; Return value:  Size  Location     Type
  4897 ;;                  1    wreg      void 
  4898 ;; Registers used:
  4899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4900 ;; Tracked objects:
  4901 ;;		On entry : 0/0
  4902 ;;		On exit  : 0/0
  4903 ;;		Unchanged: 0/0
  4904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4907 ;;      Temps:          0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4908 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4909 ;;Total ram usage:       21 bytes
  4910 ;; Hardware stack levels used:    1
  4911 ;; Hardware stack levels required when called:   12
  4912 ;; This function calls:
  4913 ;;		_audio_jack_process
  4914 ;;		_get_time
  4915 ;;		_prog_sw_process
  4916 ;;		_screen_update
  4917 ;; This function is called by:
  4918 ;;		Interrupt level 1
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           	psect	intcodelo
  4923  000018                     __pintcodelo:
  4924                           	opt stack 0
  4925  000018                     _low_pri_isr:
  4926                           	opt stack 12
  4927                           
  4928                           ; BSR set to: 1
  4929                           ;incstack = 0
  4930  000018  8043               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  4931  00001A  CFD8 F094          	movff	status,??_low_pri_isr
  4932  00001E  CFE8 F095          	movff	wreg,??_low_pri_isr+1
  4933  000022  CFE0 F096          	movff	bsr,??_low_pri_isr+2
  4934  000026  CFFA F097          	movff	pclath,??_low_pri_isr+3
  4935  00002A  CFFB F098          	movff	pclatu,??_low_pri_isr+4
  4936  00002E  CFE9 F099          	movff	fsr0l,??_low_pri_isr+5
  4937  000032  CFEA F09A          	movff	fsr0h,??_low_pri_isr+6
  4938  000036  CFE1 F09B          	movff	fsr1l,??_low_pri_isr+7
  4939  00003A  CFE2 F09C          	movff	fsr1h,??_low_pri_isr+8
  4940  00003E  CFD9 F09D          	movff	fsr2l,??_low_pri_isr+9
  4941  000042  CFDA F09E          	movff	fsr2h,??_low_pri_isr+10
  4942  000046  CFF3 F09F          	movff	prodl,??_low_pri_isr+11
  4943  00004A  CFF4 F0A0          	movff	prodh,??_low_pri_isr+12
  4944  00004E  CFF6 F0A1          	movff	tblptrl,??_low_pri_isr+13
  4945  000052  CFF7 F0A2          	movff	tblptrh,??_low_pri_isr+14
  4946  000056  CFF8 F0A3          	movff	tblptru,??_low_pri_isr+15
  4947  00005A  CFF5 F0A4          	movff	tablat,??_low_pri_isr+16
  4948  00005E  C043  F0A5         	movff	btemp,??_low_pri_isr+17
  4949  000062  C044  F0A6         	movff	btemp+1,??_low_pri_isr+18
  4950  000066  C045  F0A7         	movff	btemp+2,??_low_pri_isr+19
  4951  00006A  C046  F0A8         	movff	btemp+3,??_low_pri_isr+20
  4952                           
  4953                           ;main.c: 158: if( IOCAFbits.IOCAF0)
  4954  00006E  010F               	movlb	15	; () banked
  4955  000070  A10A               	btfss	10,0,b	;volatile
  4956  000072  D006               	goto	i1l88
  4957                           
  4958                           ; BSR set to: 15
  4959                           ;main.c: 159: time = get_time();
  4960  000074  ECE2  F010         	call	_get_time	;wreg free
  4961  000078  C068  F0C1         	movff	?_get_time,_time
  4962  00007C  C069  F0C2         	movff	?_get_time+1,_time+1
  4963  000080                     i1l88:
  4964                           
  4965                           ;main.c: 162: if(PIR4bits.TMR2IF)
  4966  000080  010E               	movlb	14	; () banked
  4967  000082  A3CE               	btfss	206,1,b	;volatile
  4968  000084  D006               	goto	i1l89
  4969                           
  4970                           ; BSR set to: 14
  4971                           ;main.c: 163: screen_update(time);
  4972  000086  C0C1  F092         	movff	_time,screen_update@time
  4973  00008A  C0C2  F093         	movff	_time+1,screen_update@time+1
  4974  00008E  EC94  F025         	call	_screen_update	;wreg free
  4975  000092                     i1l89:
  4976                           
  4977                           ;main.c: 166: if(IOCAFbits.IOCAF5)
  4978  000092  010F               	movlb	15	; () banked
  4979  000094  BB0A               	btfsc	10,5,b	;volatile
  4980                           
  4981                           ; BSR set to: 15
  4982                           ;main.c: 167: audio_jack_process();
  4983  000096  EC36  F022         	call	_audio_jack_process	;wreg free
  4984                           
  4985                           ;main.c: 170: if(IOCCFbits.IOCCF2)
  4986  00009A  010F               	movlb	15	; () banked
  4987  00009C  B51A               	btfsc	26,2,b	;volatile
  4988                           
  4989                           ; BSR set to: 15
  4990                           ;main.c: 171: prog_sw_process();
  4991  00009E  EC05  F025         	call	_prog_sw_process	;wreg free
  4992  0000A2  C0A8  F046         	movff	??_low_pri_isr+20,btemp+3
  4993  0000A6  C0A7  F045         	movff	??_low_pri_isr+19,btemp+2
  4994  0000AA  C0A6  F044         	movff	??_low_pri_isr+18,btemp+1
  4995  0000AE  C0A5  F043         	movff	??_low_pri_isr+17,btemp
  4996  0000B2  C0A4  FFF5         	movff	??_low_pri_isr+16,tablat
  4997  0000B6  C0A3  FFF8         	movff	??_low_pri_isr+15,tblptru
  4998  0000BA  C0A2  FFF7         	movff	??_low_pri_isr+14,tblptrh
  4999  0000BE  C0A1  FFF6         	movff	??_low_pri_isr+13,tblptrl
  5000  0000C2  C0A0  FFF4         	movff	??_low_pri_isr+12,prodh
  5001  0000C6  C09F  FFF3         	movff	??_low_pri_isr+11,prodl
  5002  0000CA  C09E  FFDA         	movff	??_low_pri_isr+10,fsr2h
  5003  0000CE  C09D  FFD9         	movff	??_low_pri_isr+9,fsr2l
  5004  0000D2  C09C  FFE2         	movff	??_low_pri_isr+8,fsr1h
  5005  0000D6  C09B  FFE1         	movff	??_low_pri_isr+7,fsr1l
  5006  0000DA  C09A  FFEA         	movff	??_low_pri_isr+6,fsr0h
  5007  0000DE  C099  FFE9         	movff	??_low_pri_isr+5,fsr0l
  5008  0000E2  C098  FFFB         	movff	??_low_pri_isr+4,pclatu
  5009  0000E6  C097  FFFA         	movff	??_low_pri_isr+3,pclath
  5010  0000EA  C096  FFE0         	movff	??_low_pri_isr+2,bsr
  5011  0000EE  C095  FFE8         	movff	??_low_pri_isr+1,wreg
  5012  0000F2  C094  FFD8         	movff	??_low_pri_isr,status
  5013  0000F6  9043               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  5014  0000F8  0010               	retfie	
  5015  0000FA                     __end_of_low_pri_isr:
  5016                           	opt stack 0
  5017                           pclatu	equ	0xFFB
  5018                           pclath	equ	0xFFA
  5019                           tblptru	equ	0xFF8
  5020                           tblptrh	equ	0xFF7
  5021                           tblptrl	equ	0xFF6
  5022                           tablat	equ	0xFF5
  5023                           prodh	equ	0xFF4
  5024                           prodl	equ	0xFF3
  5025                           postinc0	equ	0xFEE
  5026                           fsr0h	equ	0xFEA
  5027                           fsr0l	equ	0xFE9
  5028                           wreg	equ	0xFE8
  5029                           postdec1	equ	0xFE5
  5030                           fsr1h	equ	0xFE2
  5031                           fsr1l	equ	0xFE1
  5032                           bsr	equ	0xFE0
  5033                           indf2	equ	0xFDF
  5034                           fsr2h	equ	0xFDA
  5035                           fsr2l	equ	0xFD9
  5036                           status	equ	0xFD8
  5037                           
  5038 ;; *************** function _screen_update *****************
  5039 ;; Defined at:
  5040 ;;		line 207 in file "led.c"
  5041 ;; Parameters:    Size  Location     Type
  5042 ;;  time            2   50[BANK0 ] PTR struct .
  5043 ;;		 -> curr_time(12), NULL(0), 
  5044 ;; Auto vars:     Size  Location     Type
  5045 ;;		None
  5046 ;; Return value:  Size  Location     Type
  5047 ;;                  1    wreg      void 
  5048 ;; Registers used:
  5049 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5050 ;; Tracked objects:
  5051 ;;		On entry : 0/0
  5052 ;;		On exit  : 0/0
  5053 ;;		Unchanged: 0/0
  5054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5055 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5058 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;Total ram usage:        2 bytes
  5060 ;; Hardware stack levels used:    1
  5061 ;; Hardware stack levels required when called:   11
  5062 ;; This function calls:
  5063 ;;		_refresh_led
  5064 ;;		_set_load_led
  5065 ;;		_set_time_led
  5066 ;;		_time_needs_to_be_set
  5067 ;; This function is called by:
  5068 ;;		_low_pri_isr
  5069 ;; This function uses a non-reentrant model
  5070 ;;
  5071                           
  5072                           	psect	text17
  5073  004B28                     __ptext17:
  5074                           	opt stack 0
  5075  004B28                     _screen_update:
  5076                           	opt stack 12
  5077                           
  5078                           ;led.c: 210: if(time_needs_to_be_set())
  5079                           
  5080                           ;incstack = 0
  5081  004B28  ECDE  F025         	call	_time_needs_to_be_set	;wreg free
  5082  004B2C  501D               	movf	?_time_needs_to_be_set,w,c
  5083  004B2E  101E               	iorwf	?_time_needs_to_be_set+1,w,c
  5084  004B30  B4D8               	btfsc	status,2,c
  5085  004B32  D003               	goto	i1l691
  5086                           
  5087                           ;led.c: 211: set_load_led();
  5088  004B34  EC31  F018         	call	_set_load_led	;wreg free
  5089  004B38  D006               	goto	i1l692
  5090  004B3A                     i1l691:
  5091                           
  5092                           ;led.c: 213: else
  5093                           ;led.c: 214: set_time_led(time);
  5094  004B3A  C092  F079         	movff	screen_update@time,set_time_led@time
  5095  004B3E  C093  F07A         	movff	screen_update@time+1,set_time_led@time+1
  5096  004B42  EC7F  F00B         	call	_set_time_led	;wreg free
  5097  004B46                     i1l692:
  5098                           
  5099                           ;led.c: 216: refresh_led();
  5100  004B46  EC97  F013         	call	_refresh_led	;wreg free
  5101                           
  5102                           ;led.c: 218: PIR4bits.TMR2IF = 0;
  5103  004B4A  010E               	movlb	14	; () banked
  5104  004B4C  93CE               	bcf	206,1,b	;volatile
  5105                           
  5106                           ; BSR set to: 14
  5107  004B4E  0012               	return		;funcret
  5108  004B50                     __end_of_screen_update:
  5109                           	opt stack 0
  5110                           pclatu	equ	0xFFB
  5111                           pclath	equ	0xFFA
  5112                           tblptru	equ	0xFF8
  5113                           tblptrh	equ	0xFF7
  5114                           tblptrl	equ	0xFF6
  5115                           tablat	equ	0xFF5
  5116                           prodh	equ	0xFF4
  5117                           prodl	equ	0xFF3
  5118                           postinc0	equ	0xFEE
  5119                           fsr0h	equ	0xFEA
  5120                           fsr0l	equ	0xFE9
  5121                           wreg	equ	0xFE8
  5122                           postdec1	equ	0xFE5
  5123                           fsr1h	equ	0xFE2
  5124                           fsr1l	equ	0xFE1
  5125                           bsr	equ	0xFE0
  5126                           indf2	equ	0xFDF
  5127                           fsr2h	equ	0xFDA
  5128                           fsr2l	equ	0xFD9
  5129                           status	equ	0xFD8
  5130                           
  5131 ;; *************** function _time_needs_to_be_set *****************
  5132 ;; Defined at:
  5133 ;;		line 79 in file "clock.c"
  5134 ;; Parameters:    Size  Location     Type
  5135 ;;		None
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  2   28[COMRAM] int 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5151 ;;Total ram usage:        2 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    3
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_screen_update
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text18
  5162  004BBC                     __ptext18:
  5163                           	opt stack 0
  5164  004BBC                     _time_needs_to_be_set:
  5165                           	opt stack 19
  5166                           
  5167                           ;clock.c: 81: return time_quality <= 0;
  5168                           
  5169                           ; BSR set to: 14
  5170                           ;incstack = 0
  5171  004BBC  5027               	movf	_time_quality,w,c	;volatile
  5172  004BBE  1028               	iorwf	_time_quality+1,w,c	;volatile
  5173  004BC0  1029               	iorwf	_time_quality+2,w,c	;volatile
  5174  004BC2  102A               	iorwf	_time_quality+3,w,c	;volatile
  5175  004BC4  A4D8               	btfss	status,2,c
  5176  004BC6  D002               	goto	i1u424_20
  5177  004BC8  0E01               	movlw	1
  5178  004BCA  D001               	goto	i1u425_20
  5179  004BCC                     i1u424_20:
  5180  004BCC  0E00               	movlw	0
  5181  004BCE                     i1u425_20:
  5182  004BCE  6E1D               	movwf	?_time_needs_to_be_set,c
  5183  004BD0  6A1E               	clrf	?_time_needs_to_be_set+1,c
  5184  004BD2  0012               	return	
  5185  004BD4                     __end_of_time_needs_to_be_set:
  5186                           	opt stack 0
  5187                           pclatu	equ	0xFFB
  5188                           pclath	equ	0xFFA
  5189                           tblptru	equ	0xFF8
  5190                           tblptrh	equ	0xFF7
  5191                           tblptrl	equ	0xFF6
  5192                           tablat	equ	0xFF5
  5193                           prodh	equ	0xFF4
  5194                           prodl	equ	0xFF3
  5195                           postinc0	equ	0xFEE
  5196                           fsr0h	equ	0xFEA
  5197                           fsr0l	equ	0xFE9
  5198                           wreg	equ	0xFE8
  5199                           postdec1	equ	0xFE5
  5200                           fsr1h	equ	0xFE2
  5201                           fsr1l	equ	0xFE1
  5202                           bsr	equ	0xFE0
  5203                           indf2	equ	0xFDF
  5204                           fsr2h	equ	0xFDA
  5205                           fsr2l	equ	0xFD9
  5206                           status	equ	0xFD8
  5207                           
  5208 ;; *************** function _set_time_led *****************
  5209 ;; Defined at:
  5210 ;;		line 222 in file "led.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  time            2   25[BANK0 ] PTR struct .
  5213 ;;		 -> curr_time(12), NULL(0), 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  min             2   33[BANK0 ] int 
  5216 ;;  teen            2   31[BANK0 ] int 
  5217 ;;  hour            2   29[BANK0 ] int 
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5227 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5228 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5229 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5230 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5231 ;;Total ram usage:       10 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:   10
  5234 ;; This function calls:
  5235 ;;		_clear_led
  5236 ;;		_set_agt_min
  5237 ;;		_set_agt_uur
  5238 ;;		_set_dag
  5239 ;;		_set_der
  5240 ;;		_set_die_tyd_is
  5241 ;;		_set_drie_min
  5242 ;;		_set_drie_uur
  5243 ;;		_set_een_hour
  5244 ;;		_set_een_min
  5245 ;;		_set_elf_min
  5246 ;;		_set_elf_uur
  5247 ;;		_set_en
  5248 ;;		_set_en_mj
  5249 ;;		_set_gelukkige
  5250 ;;		_set_half
  5251 ;;		_set_jason
  5252 ;;		_set_kwart
  5253 ;;		_set_minell
  5254 ;;		_set_minute
  5255 ;;		_set_minuut
  5256 ;;		_set_nege_min
  5257 ;;		_set_nege_uur
  5258 ;;		_set_ntien_min
  5259 ;;		_set_oor
  5260 ;;		_set_ses_min
  5261 ;;		_set_ses_uur
  5262 ;;		_set_sewe_min
  5263 ;;		_set_sewe_uur
  5264 ;;		_set_tien_min
  5265 ;;		_set_tien_uur
  5266 ;;		_set_trou
  5267 ;;		_set_twaalf_min
  5268 ;;		_set_twaalf_uur
  5269 ;;		_set_twee_hour
  5270 ;;		_set_twee_min
  5271 ;;		_set_twintig
  5272 ;;		_set_uur
  5273 ;;		_set_veer
  5274 ;;		_set_verjaars
  5275 ;;		_set_vier_min
  5276 ;;		_set_vier_uur
  5277 ;;		_set_voor
  5278 ;;		_set_vyf_min
  5279 ;;		_set_vyf_uur
  5280 ;; This function is called by:
  5281 ;;		_screen_update
  5282 ;; This function uses a non-reentrant model
  5283 ;;
  5284                           
  5285                           	psect	text19
  5286  0016FE                     __ptext19:
  5287                           	opt stack 0
  5288  0016FE                     _set_time_led:
  5289                           	opt stack 12
  5290                           
  5291                           ;led.c: 224: clear_led();
  5292                           
  5293                           ;incstack = 0
  5294  0016FE  ECC4  F01C         	call	_clear_led	;wreg free
  5295                           
  5296                           ;led.c: 225: set_die_tyd_is();
  5297  001702  EC02  F019         	call	_set_die_tyd_is	;wreg free
  5298                           
  5299                           ;led.c: 226: int min = time->minute;
  5300  001706  0100               	movlb	0	; () banked
  5301  001708  EE20 F002          	lfsr	2,2
  5302  00170C  5179               	movf	set_time_led@time& (0+255),w,b
  5303  00170E  26D9               	addwf	fsr2l,f,c
  5304  001710  517A               	movf	(set_time_led@time+1)& (0+255),w,b
  5305  001712  22DA               	addwfc	fsr2h,f,c
  5306  001714  CFDE F081          	movff	postinc2,set_time_led@min
  5307  001718  CFDD F082          	movff	postdec2,set_time_led@min+1
  5308                           
  5309                           ; BSR set to: 0
  5310                           ;led.c: 227: int hour = time->hour;
  5311  00171C  0100               	movlb	0	; () banked
  5312  00171E  EE20 F004          	lfsr	2,4
  5313  001722  5179               	movf	set_time_led@time& (0+255),w,b
  5314  001724  26D9               	addwf	fsr2l,f,c
  5315  001726  517A               	movf	(set_time_led@time+1)& (0+255),w,b
  5316  001728  22DA               	addwfc	fsr2h,f,c
  5317  00172A  CFDE F07D          	movff	postinc2,set_time_led@hour
  5318  00172E  CFDD F07E          	movff	postdec2,set_time_led@hour+1
  5319                           
  5320                           ; BSR set to: 0
  5321                           ;led.c: 229: BOOL teen = 0;
  5322  001732  0E00               	movlw	0
  5323  001734  0100               	movlb	0	; () banked
  5324  001736  6F80               	movwf	(set_time_led@teen+1)& (0+255),b
  5325  001738  0E00               	movlw	0
  5326  00173A  6F7F               	movwf	set_time_led@teen& (0+255),b
  5327                           
  5328                           ; BSR set to: 0
  5329                           ;led.c: 231: if(min > 30)
  5330  00173C  0100               	movlb	0	; () banked
  5331  00173E  BF82               	btfsc	(set_time_led@min+1)& (0+255),7,b
  5332  001740  D022               	goto	i1l696
  5333  001742  0100               	movlb	0	; () banked
  5334  001744  5182               	movf	(set_time_led@min+1)& (0+255),w,b
  5335  001746  E105               	bnz	i1u812_20
  5336  001748  0E1F               	movlw	31
  5337  00174A  0100               	movlb	0	; () banked
  5338  00174C  5D81               	subwf	set_time_led@min& (0+255),w,b
  5339  00174E  A0D8               	btfss	status,0,c
  5340  001750  D01A               	goto	i1l696
  5341  001752                     i1u812_20:
  5342                           
  5343                           ; BSR set to: 0
  5344                           ;led.c: 232: {
  5345                           ;led.c: 233: hour--;
  5346  001752  0100               	movlb	0	; () banked
  5347  001754  077D               	decf	set_time_led@hour& (0+255),f,b
  5348  001756  A0D8               	btfss	status,0,c
  5349  001758  077E               	decf	(set_time_led@hour+1)& (0+255),f,b
  5350                           
  5351                           ; BSR set to: 0
  5352                           ;led.c: 234: min = 60 - min;
  5353  00175A  C081  F07B         	movff	set_time_led@min,??_set_time_led
  5354  00175E  C082  F07C         	movff	set_time_led@min+1,??_set_time_led+1
  5355  001762  0100               	movlb	0	; () banked
  5356  001764  1F7B               	comf	??_set_time_led& (0+255),f,b
  5357  001766  1F7C               	comf	(??_set_time_led+1)& (0+255),f,b
  5358  001768  4B7B               	infsnz	??_set_time_led& (0+255),f,b
  5359  00176A  2B7C               	incf	(??_set_time_led+1)& (0+255),f,b
  5360  00176C  0E3C               	movlw	60
  5361  00176E  0100               	movlb	0	; () banked
  5362  001770  257B               	addwf	??_set_time_led& (0+255),w,b
  5363  001772  0100               	movlb	0	; () banked
  5364  001774  6F81               	movwf	set_time_led@min& (0+255),b
  5365  001776  0E00               	movlw	0
  5366  001778  0100               	movlb	0	; () banked
  5367  00177A  217C               	addwfc	(??_set_time_led+1)& (0+255),w,b
  5368  00177C  0100               	movlb	0	; () banked
  5369  00177E  6F82               	movwf	(set_time_led@min+1)& (0+255),b
  5370                           
  5371                           ; BSR set to: 0
  5372                           ;led.c: 235: set_voor();
  5373  001780  EC7C  F01E         	call	_set_voor	;wreg free
  5374                           
  5375                           ;led.c: 236: }
  5376  001784  D00C               	goto	i1l698
  5377  001786                     i1l696:
  5378                           
  5379                           ;led.c: 237: else if (min < 30)
  5380  001786  0100               	movlb	0	; () banked
  5381  001788  BF82               	btfsc	(set_time_led@min+1)& (0+255),7,b
  5382  00178A  D007               	goto	i1u813_20
  5383  00178C  0100               	movlb	0	; () banked
  5384  00178E  5182               	movf	(set_time_led@min+1)& (0+255),w,b
  5385  001790  E106               	bnz	i1l5815
  5386  001792  0E1E               	movlw	30
  5387  001794  0100               	movlb	0	; () banked
  5388  001796  5D81               	subwf	set_time_led@min& (0+255),w,b
  5389  001798  A0D8               	btfss	status,0,c
  5390  00179A                     i1u813_20:
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;led.c: 238: {
  5394                           ;led.c: 239: set_oor();
  5395  00179A  EC17  F023         	call	_set_oor	;wreg free
  5396  00179E                     i1l698:
  5397  00179E                     i1l5815:
  5398                           
  5399                           ;led.c: 240: }
  5400                           ;led.c: 241: if(time->minute == 1)
  5401  00179E  0100               	movlb	0	; () banked
  5402  0017A0  EE20 F002          	lfsr	2,2
  5403  0017A4  5179               	movf	set_time_led@time& (0+255),w,b
  5404  0017A6  26D9               	addwf	fsr2l,f,c
  5405  0017A8  517A               	movf	(set_time_led@time+1)& (0+255),w,b
  5406  0017AA  22DA               	addwfc	fsr2h,f,c
  5407  0017AC  04DE               	decf	postinc2,w,c
  5408  0017AE  10DE               	iorwf	postinc2,w,c
  5409  0017B0  A4D8               	btfss	status,2,c
  5410  0017B2  D005               	goto	i1l699
  5411                           
  5412                           ; BSR set to: 0
  5413                           ;led.c: 242: {
  5414                           ;led.c: 243: set_minuut();
  5415  0017B4  ECE9  F01B         	call	_set_minuut	;wreg free
  5416                           
  5417                           ;led.c: 244: set_uur();
  5418  0017B8  ECA8  F022         	call	_set_uur	;wreg free
  5419                           
  5420                           ;led.c: 245: }
  5421  0017BC  D010               	goto	i1l701
  5422  0017BE                     i1l699:
  5423                           
  5424                           ;led.c: 246: else if(time->minute != 30)
  5425  0017BE  0100               	movlb	0	; () banked
  5426  0017C0  EE20 F002          	lfsr	2,2
  5427  0017C4  5179               	movf	set_time_led@time& (0+255),w,b
  5428  0017C6  26D9               	addwf	fsr2l,f,c
  5429  0017C8  517A               	movf	(set_time_led@time+1)& (0+255),w,b
  5430  0017CA  22DA               	addwfc	fsr2h,f,c
  5431  0017CC  0E1E               	movlw	30
  5432  0017CE  18DE               	xorwf	postinc2,w,c
  5433  0017D0  10DE               	iorwf	postinc2,w,c
  5434  0017D2  B4D8               	btfsc	status,2,c
  5435  0017D4  D004               	goto	i1l701
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;led.c: 247: {
  5439                           ;led.c: 248: set_minute();
  5440  0017D6  EC32  F01C         	call	_set_minute	;wreg free
  5441                           
  5442                           ;led.c: 249: set_uur();
  5443  0017DA  ECA8  F022         	call	_set_uur	;wreg free
  5444  0017DE                     i1l701:
  5445                           
  5446                           ;led.c: 250: }
  5447                           ;led.c: 252: if(min > 10 && min < 20)
  5448  0017DE  0100               	movlb	0	; () banked
  5449  0017E0  BF82               	btfsc	(set_time_led@min+1)& (0+255),7,b
  5450  0017E2  D05A               	goto	i1l702
  5451  0017E4  0100               	movlb	0	; () banked
  5452  0017E6  5182               	movf	(set_time_led@min+1)& (0+255),w,b
  5453  0017E8  E105               	bnz	i1u816_20
  5454  0017EA  0E0B               	movlw	11
  5455  0017EC  0100               	movlb	0	; () banked
  5456  0017EE  5D81               	subwf	set_time_led@min& (0+255),w,b
  5457  0017F0  A0D8               	btfss	status,0,c
  5458  0017F2  D052               	goto	i1l702
  5459  0017F4                     i1u816_20:
  5460                           
  5461                           ; BSR set to: 0
  5462  0017F4  0100               	movlb	0	; () banked
  5463  0017F6  BF82               	btfsc	(set_time_led@min+1)& (0+255),7,b
  5464  0017F8  D008               	goto	i1u817_20
  5465  0017FA  0100               	movlb	0	; () banked
  5466  0017FC  5182               	movf	(set_time_led@min+1)& (0+255),w,b
  5467  0017FE  E14C               	bnz	i1l5849
  5468  001800  0E14               	movlw	20
  5469  001802  0100               	movlb	0	; () banked
  5470  001804  5D81               	subwf	set_time_led@min& (0+255),w,b
  5471  001806  B0D8               	btfsc	status,0,c
  5472  001808  D047               	goto	i1l702
  5473  00180A                     i1u817_20:
  5474                           
  5475                           ; BSR set to: 0
  5476                           ;led.c: 253: {
  5477                           ;led.c: 254: min -= 10;
  5478  00180A  0100               	movlb	0	; () banked
  5479  00180C  0EF6               	movlw	246
  5480  00180E  2781               	addwf	set_time_led@min& (0+255),f,b
  5481  001810  0EFF               	movlw	255
  5482  001812  2382               	addwfc	(set_time_led@min+1)& (0+255),f,b
  5483                           
  5484                           ; BSR set to: 0
  5485                           ;led.c: 255: teen = 1;
  5486  001814  0E00               	movlw	0
  5487  001816  0100               	movlb	0	; () banked
  5488  001818  6F80               	movwf	(set_time_led@teen+1)& (0+255),b
  5489  00181A  0E01               	movlw	1
  5490  00181C  6F7F               	movwf	set_time_led@teen& (0+255),b
  5491                           
  5492                           ;led.c: 256: switch(min)
  5493  00181E  D01B               	goto	i1l703
  5494  001820                     
  5495                           ; BSR set to: 0
  5496                           ;led.c: 259: set_elf_min();
  5497                           
  5498                           ; BSR set to: 0
  5499  001820  EC61  F023         	call	_set_elf_min	;wreg free
  5500                           
  5501                           ;led.c: 260: break;
  5502  001824  D0A7               	goto	i1l717
  5503  001826                     
  5504                           ;led.c: 262: set_twaalf_min();
  5505  001826  ECA0  F01B         	call	_set_twaalf_min	;wreg free
  5506                           
  5507                           ;led.c: 263: break;
  5508  00182A  D0A4               	goto	i1l717
  5509  00182C                     
  5510                           ;led.c: 265: set_der();
  5511  00182C  ECD0  F023         	call	_set_der	;wreg free
  5512                           
  5513                           ;led.c: 266: set_tien_min();
  5514  001830  ECD3  F01F         	call	_set_tien_min	;wreg free
  5515                           
  5516                           ;led.c: 267: break;
  5517  001834  D09F               	goto	i1l717
  5518  001836                     
  5519                           ;led.c: 269: set_veer();
  5520  001836  EC0F  F01F         	call	_set_veer	;wreg free
  5521                           
  5522                           ;led.c: 270: set_tien_min();
  5523  00183A  ECD3  F01F         	call	_set_tien_min	;wreg free
  5524                           
  5525                           ;led.c: 271: break;
  5526  00183E  D09A               	goto	i1l717
  5527  001840                     
  5528                           ;led.c: 273: set_kwart();
  5529  001840  EC06  F01E         	call	_set_kwart	;wreg free
  5530                           
  5531                           ;led.c: 274: break;
  5532  001844  D097               	goto	i1l717
  5533  001846                     
  5534                           ;led.c: 276: set_ntien_min();
  5535  001846  ECC9  F01D         	call	_set_ntien_min	;wreg free
  5536                           
  5537                           ;led.c: 277: break;
  5538  00184A  D094               	goto	i1l717
  5539  00184C                     
  5540                           ;led.c: 279: set_ntien_min();
  5541  00184C  ECC9  F01D         	call	_set_ntien_min	;wreg free
  5542  001850                     i1l712:
  5543                           
  5544                           ;led.c: 281: set_tien_min();
  5545  001850  ECD3  F01F         	call	_set_tien_min	;wreg free
  5546                           
  5547                           ;led.c: 283: }
  5548                           
  5549                           ;led.c: 282: break;
  5550  001854  D08F               	goto	i1l717
  5551  001856                     i1l703:
  5552  001856  C081  F07B         	movff	set_time_led@min,??_set_time_led
  5553  00185A  C082  F07C         	movff	set_time_led@min+1,??_set_time_led+1
  5554                           
  5555                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5556                           ; Switch size 1, requested type "space"
  5557                           ; Number of cases is 1, Range of values is 0 to 0
  5558                           ; switch strategies available:
  5559                           ; Name         Instructions Cycles
  5560                           ; simple_byte            4     3 (average)
  5561                           ;	Chosen strategy is simple_byte
  5562  00185E  0100               	movlb	0	; () banked
  5563  001860  517C               	movf	(??_set_time_led+1)& (0+255),w,b
  5564  001862  0A00               	xorlw	0	; case 0
  5565  001864  A4D8               	btfss	status,2,c
  5566  001866  D7F4               	goto	i1l712
  5567                           
  5568                           ; BSR set to: 0
  5569                           ; Switch size 1, requested type "space"
  5570                           ; Number of cases is 7, Range of values is 1 to 9
  5571                           ; switch strategies available:
  5572                           ; Name         Instructions Cycles
  5573                           ; simple_byte           22    12 (average)
  5574                           ;	Chosen strategy is simple_byte
  5575  001868  0100               	movlb	0	; () banked
  5576  00186A  517B               	movf	??_set_time_led& (0+255),w,b
  5577  00186C  0A01               	xorlw	1	; case 1
  5578  00186E  B4D8               	btfsc	status,2,c
  5579  001870  D7D7               	goto	i1l704
  5580  001872  0A03               	xorlw	3	; case 2
  5581  001874  B4D8               	btfsc	status,2,c
  5582  001876  D7D7               	goto	i1l706
  5583  001878  0A01               	xorlw	1	; case 3
  5584  00187A  B4D8               	btfsc	status,2,c
  5585  00187C  D7D7               	goto	i1l707
  5586  00187E  0A07               	xorlw	7	; case 4
  5587  001880  B4D8               	btfsc	status,2,c
  5588  001882  D7D9               	goto	i1l708
  5589  001884  0A01               	xorlw	1	; case 5
  5590  001886  B4D8               	btfsc	status,2,c
  5591  001888  D7DB               	goto	i1l709
  5592  00188A  0A02               	xorlw	2	; case 7
  5593  00188C  B4D8               	btfsc	status,2,c
  5594  00188E  D7DB               	goto	i1l710
  5595  001890  0A0E               	xorlw	14	; case 9
  5596  001892  B4D8               	btfsc	status,2,c
  5597  001894  D7DB               	goto	i1l711
  5598  001896  D7DC               	goto	i1l712
  5599  001898                     i1l702:
  5600  001898                     i1l5849:
  5601                           
  5602                           ; BSR set to: 0
  5603  001898  0100               	movlb	0	; () banked
  5604  00189A  BF82               	btfsc	(set_time_led@min+1)& (0+255),7,b
  5605  00189C  D027               	goto	i1l714
  5606  00189E  0100               	movlb	0	; () banked
  5607  0018A0  5182               	movf	(set_time_led@min+1)& (0+255),w,b
  5608  0018A2  E105               	bnz	i1u818_20
  5609  0018A4  0E14               	movlw	20
  5610  0018A6  0100               	movlb	0	; () banked
  5611  0018A8  5D81               	subwf	set_time_led@min& (0+255),w,b
  5612  0018AA  A0D8               	btfss	status,0,c
  5613  0018AC  D01F               	goto	i1l714
  5614  0018AE                     i1u818_20:
  5615                           
  5616                           ; BSR set to: 0
  5617  0018AE  0100               	movlb	0	; () banked
  5618  0018B0  BF82               	btfsc	(set_time_led@min+1)& (0+255),7,b
  5619  0018B2  D008               	goto	i1u819_20
  5620  0018B4  0100               	movlb	0	; () banked
  5621  0018B6  5182               	movf	(set_time_led@min+1)& (0+255),w,b
  5622  0018B8  E119               	bnz	i1l5861
  5623  0018BA  0E1E               	movlw	30
  5624  0018BC  0100               	movlb	0	; () banked
  5625  0018BE  5D81               	subwf	set_time_led@min& (0+255),w,b
  5626  0018C0  B0D8               	btfsc	status,0,c
  5627  0018C2  D014               	goto	i1l714
  5628  0018C4                     i1u819_20:
  5629                           
  5630                           ; BSR set to: 0
  5631                           ;led.c: 285: {
  5632                           ;led.c: 286: min -= 20;
  5633  0018C4  0100               	movlb	0	; () banked
  5634  0018C6  0EEC               	movlw	236
  5635  0018C8  2781               	addwf	set_time_led@min& (0+255),f,b
  5636  0018CA  0EFF               	movlw	255
  5637  0018CC  2382               	addwfc	(set_time_led@min+1)& (0+255),f,b
  5638                           
  5639                           ; BSR set to: 0
  5640                           ;led.c: 287: set_twintig();
  5641  0018CE  EC16  F01A         	call	_set_twintig	;wreg free
  5642                           
  5643                           ;led.c: 288: if(min > 0)
  5644  0018D2  0100               	movlb	0	; () banked
  5645  0018D4  BF82               	btfsc	(set_time_led@min+1)& (0+255),7,b
  5646  0018D6  D04E               	goto	i1l717
  5647  0018D8  0100               	movlb	0	; () banked
  5648  0018DA  5182               	movf	(set_time_led@min+1)& (0+255),w,b
  5649  0018DC  E104               	bnz	i1u820_20
  5650  0018DE  0100               	movlb	0	; () banked
  5651  0018E0  0581               	decf	set_time_led@min& (0+255),w,b
  5652  0018E2  A0D8               	btfss	status,0,c
  5653  0018E4  D047               	goto	i1l717
  5654  0018E6                     i1u820_20:
  5655                           
  5656                           ; BSR set to: 0
  5657                           ;led.c: 289: set_en();
  5658  0018E6  EC1F  F025         	call	_set_en	;wreg free
  5659                           
  5660                           ;led.c: 290: }else
  5661  0018EA  D044               	goto	i1l717
  5662  0018EC                     i1l714:
  5663  0018EC                     i1l5861:
  5664                           
  5665                           ;led.c: 291: {
  5666                           ;led.c: 292: min -= 30;
  5667  0018EC  0100               	movlb	0	; () banked
  5668  0018EE  0EE2               	movlw	226
  5669  0018F0  2781               	addwf	set_time_led@min& (0+255),f,b
  5670  0018F2  0EFF               	movlw	255
  5671  0018F4  2382               	addwfc	(set_time_led@min+1)& (0+255),f,b
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;led.c: 293: set_half();
  5675  0018F6  ECC8  F020         	call	_set_half	;wreg free
  5676                           
  5677                           ;led.c: 294: }
  5678                           ;led.c: 296: switch(min)
  5679  0018FA  D03C               	goto	i1l717
  5680  0018FC                     
  5681                           ;led.c: 299: if(!teen)
  5682  0018FC  0100               	movlb	0	; () banked
  5683  0018FE  517F               	movf	set_time_led@teen& (0+255),w,b
  5684  001900  0100               	movlb	0	; () banked
  5685  001902  1180               	iorwf	(set_time_led@teen+1)& (0+255),w,b
  5686  001904  A4D8               	btfss	status,2,c
  5687  001906  D084               	goto	i1l735
  5688                           
  5689                           ; BSR set to: 0
  5690                           ;led.c: 300: set_een_min();
  5691  001908  EC86  F023         	call	_set_een_min	;wreg free
  5692                           
  5693                           ;led.c: 301: break;
  5694  00190C  D081               	goto	i1l735
  5695  00190E                     
  5696                           ;led.c: 303: if(!teen)
  5697  00190E  0100               	movlb	0	; () banked
  5698  001910  517F               	movf	set_time_led@teen& (0+255),w,b
  5699  001912  0100               	movlb	0	; () banked
  5700  001914  1180               	iorwf	(set_time_led@teen+1)& (0+255),w,b
  5701  001916  A4D8               	btfss	status,2,c
  5702  001918  D07B               	goto	i1l735
  5703                           
  5704                           ; BSR set to: 0
  5705                           ;led.c: 304: set_twee_min();
  5706  00191A  EC40  F01F         	call	_set_twee_min	;wreg free
  5707                           
  5708                           ;led.c: 305: break;
  5709  00191E  D078               	goto	i1l735
  5710  001920                     
  5711                           ;led.c: 307: if(!teen)
  5712  001920  0100               	movlb	0	; () banked
  5713  001922  517F               	movf	set_time_led@teen& (0+255),w,b
  5714  001924  0100               	movlb	0	; () banked
  5715  001926  1180               	iorwf	(set_time_led@teen+1)& (0+255),w,b
  5716  001928  A4D8               	btfss	status,2,c
  5717  00192A  D072               	goto	i1l735
  5718                           
  5719                           ; BSR set to: 0
  5720                           ;led.c: 308: set_drie_min();
  5721  00192C  EC2A  F021         	call	_set_drie_min	;wreg free
  5722                           
  5723                           ;led.c: 309: break;
  5724  001930  D06F               	goto	i1l735
  5725  001932                     
  5726                           ;led.c: 311: if(!teen)
  5727  001932  0100               	movlb	0	; () banked
  5728  001934  517F               	movf	set_time_led@teen& (0+255),w,b
  5729  001936  0100               	movlb	0	; () banked
  5730  001938  1180               	iorwf	(set_time_led@teen+1)& (0+255),w,b
  5731  00193A  A4D8               	btfss	status,2,c
  5732  00193C  D069               	goto	i1l735
  5733                           
  5734                           ; BSR set to: 0
  5735                           ;led.c: 312: set_vier_min();
  5736  00193E  ECDE  F01E         	call	_set_vier_min	;wreg free
  5737                           
  5738                           ;led.c: 313: break;
  5739  001942  D066               	goto	i1l735
  5740  001944                     
  5741                           ;led.c: 315: if(!teen)
  5742  001944  0100               	movlb	0	; () banked
  5743  001946  517F               	movf	set_time_led@teen& (0+255),w,b
  5744  001948  0100               	movlb	0	; () banked
  5745  00194A  1180               	iorwf	(set_time_led@teen+1)& (0+255),w,b
  5746  00194C  A4D8               	btfss	status,2,c
  5747  00194E  D060               	goto	i1l735
  5748                           
  5749                           ; BSR set to: 0
  5750                           ;led.c: 316: set_vyf_min();
  5751  001950  EC83  F022         	call	_set_vyf_min	;wreg free
  5752                           
  5753                           ;led.c: 317: break;
  5754  001954  D05D               	goto	i1l735
  5755  001956                     
  5756                           ;led.c: 319: set_ses_min();
  5757  001956  ECF2  F022         	call	_set_ses_min	;wreg free
  5758                           
  5759                           ;led.c: 320: break;
  5760  00195A  D05A               	goto	i1l735
  5761  00195C                     
  5762                           ;led.c: 322: set_sewe_min();
  5763  00195C  EC35  F020         	call	_set_sewe_min	;wreg free
  5764                           
  5765                           ;led.c: 323: break;
  5766  001960  D057               	goto	i1l735
  5767  001962                     
  5768                           ;led.c: 325: set_agt_min();
  5769  001962  EC1A  F024         	call	_set_agt_min	;wreg free
  5770                           
  5771                           ;led.c: 326: break;
  5772  001966  D054               	goto	i1l735
  5773  001968                     
  5774                           ;led.c: 328: set_nege_min();
  5775  001968  EC97  F020         	call	_set_nege_min	;wreg free
  5776                           
  5777                           ;led.c: 329: break;
  5778  00196C  D051               	goto	i1l735
  5779  00196E                     
  5780                           ;led.c: 331: set_tien_min();
  5781  00196E  ECD3  F01F         	call	_set_tien_min	;wreg free
  5782                           
  5783                           ;led.c: 335: }
  5784                           
  5785                           ;led.c: 334: break;
  5786                           
  5787                           ;led.c: 333: default:
  5788                           
  5789                           ;led.c: 332: break;
  5790  001972  D04E               	goto	i1l735
  5791  001974                     i1l717:
  5792  001974  C081  F07B         	movff	set_time_led@min,??_set_time_led
  5793  001978  C082  F07C         	movff	set_time_led@min+1,??_set_time_led+1
  5794                           
  5795                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5796                           ; Switch size 1, requested type "space"
  5797                           ; Number of cases is 1, Range of values is 0 to 0
  5798                           ; switch strategies available:
  5799                           ; Name         Instructions Cycles
  5800                           ; simple_byte            4     3 (average)
  5801                           ;	Chosen strategy is simple_byte
  5802  00197C  0100               	movlb	0	; () banked
  5803  00197E  517C               	movf	(??_set_time_led+1)& (0+255),w,b
  5804  001980  0A00               	xorlw	0	; case 0
  5805  001982  A4D8               	btfss	status,2,c
  5806  001984  D045               	goto	i1l735
  5807                           
  5808                           ; BSR set to: 0
  5809                           ; Switch size 1, requested type "space"
  5810                           ; Number of cases is 10, Range of values is 1 to 10
  5811                           ; switch strategies available:
  5812                           ; Name         Instructions Cycles
  5813                           ; simple_byte           31    16 (average)
  5814                           ;	Chosen strategy is simple_byte
  5815  001986  0100               	movlb	0	; () banked
  5816  001988  517B               	movf	??_set_time_led& (0+255),w,b
  5817  00198A  0A01               	xorlw	1	; case 1
  5818  00198C  B4D8               	btfsc	status,2,c
  5819  00198E  D7B6               	goto	i1l718
  5820  001990  0A03               	xorlw	3	; case 2
  5821  001992  B4D8               	btfsc	status,2,c
  5822  001994  D7BC               	goto	i1l721
  5823  001996  0A01               	xorlw	1	; case 3
  5824  001998  B4D8               	btfsc	status,2,c
  5825  00199A  D7C2               	goto	i1l723
  5826  00199C  0A07               	xorlw	7	; case 4
  5827  00199E  B4D8               	btfsc	status,2,c
  5828  0019A0  D7C8               	goto	i1l725
  5829  0019A2  0A01               	xorlw	1	; case 5
  5830  0019A4  B4D8               	btfsc	status,2,c
  5831  0019A6  D7CE               	goto	i1l727
  5832  0019A8  0A03               	xorlw	3	; case 6
  5833  0019AA  B4D8               	btfsc	status,2,c
  5834  0019AC  D7D4               	goto	i1l729
  5835  0019AE  0A01               	xorlw	1	; case 7
  5836  0019B0  B4D8               	btfsc	status,2,c
  5837  0019B2  D7D4               	goto	i1l730
  5838  0019B4  0A0F               	xorlw	15	; case 8
  5839  0019B6  B4D8               	btfsc	status,2,c
  5840  0019B8  D7D4               	goto	i1l731
  5841  0019BA  0A01               	xorlw	1	; case 9
  5842  0019BC  B4D8               	btfsc	status,2,c
  5843  0019BE  D7D4               	goto	i1l732
  5844  0019C0  0A03               	xorlw	3	; case 10
  5845  0019C2  B4D8               	btfsc	status,2,c
  5846  0019C4  D7D4               	goto	i1l733
  5847                           
  5848                           ; BSR set to: 0
  5849                           ;led.c: 337: switch(hour)
  5850  0019C6  D024               	goto	i1l735
  5851  0019C8                     
  5852                           ; BSR set to: 0
  5853                           ;led.c: 340: set_een_hour();
  5854                           
  5855                           ; BSR set to: 0
  5856  0019C8  ECAB  F023         	call	_set_een_hour	;wreg free
  5857                           
  5858                           ;led.c: 341: break;
  5859  0019CC  D050               	goto	i1l737
  5860  0019CE                     
  5861                           ;led.c: 343: set_twee_hour();
  5862  0019CE  EC71  F01F         	call	_set_twee_hour	;wreg free
  5863                           
  5864                           ;led.c: 344: break;
  5865  0019D2  D04D               	goto	i1l737
  5866  0019D4                     
  5867                           ;led.c: 346: set_drie_uur();
  5868  0019D4  ECF9  F020         	call	_set_drie_uur	;wreg free
  5869                           
  5870                           ;led.c: 347: break;
  5871  0019D8  D04A               	goto	i1l737
  5872  0019DA                     
  5873                           ;led.c: 349: set_vier_uur();
  5874  0019DA  ECAD  F01E         	call	_set_vier_uur	;wreg free
  5875                           
  5876                           ;led.c: 350: break;
  5877  0019DE  D047               	goto	i1l737
  5878  0019E0                     
  5879                           ;led.c: 352: set_vyf_uur();
  5880  0019E0  EC5E  F022         	call	_set_vyf_uur	;wreg free
  5881                           
  5882                           ;led.c: 353: break;
  5883  0019E4  D044               	goto	i1l737
  5884  0019E6                     
  5885                           ;led.c: 355: set_ses_uur();
  5886  0019E6  ECCD  F022         	call	_set_ses_uur	;wreg free
  5887                           
  5888                           ;led.c: 356: break;
  5889  0019EA  D041               	goto	i1l737
  5890  0019EC                     
  5891                           ;led.c: 358: set_sewe_uur();
  5892  0019EC  EC04  F020         	call	_set_sewe_uur	;wreg free
  5893                           
  5894                           ;led.c: 359: break;
  5895  0019F0  D03E               	goto	i1l737
  5896  0019F2                     
  5897                           ;led.c: 361: set_agt_uur();
  5898  0019F2  ECF5  F023         	call	_set_agt_uur	;wreg free
  5899                           
  5900                           ;led.c: 362: break;
  5901  0019F6  D03B               	goto	i1l737
  5902  0019F8                     
  5903                           ;led.c: 364: set_nege_uur();
  5904  0019F8  EC66  F020         	call	_set_nege_uur	;wreg free
  5905                           
  5906                           ;led.c: 365: break;
  5907  0019FC  D038               	goto	i1l737
  5908  0019FE                     
  5909                           ;led.c: 367: set_tien_uur();
  5910  0019FE  ECA2  F01F         	call	_set_tien_uur	;wreg free
  5911                           
  5912                           ;led.c: 368: break;
  5913  001A02  D035               	goto	i1l737
  5914  001A04                     
  5915                           ;led.c: 370: set_elf_uur();
  5916  001A04  EC3C  F023         	call	_set_elf_uur	;wreg free
  5917                           
  5918                           ;led.c: 371: break;
  5919  001A08  D032               	goto	i1l737
  5920  001A0A                     
  5921                           ;led.c: 373: set_twaalf_uur();
  5922  001A0A  EC57  F01B         	call	_set_twaalf_uur	;wreg free
  5923                           
  5924                           ;led.c: 377: }
  5925                           
  5926                           ;led.c: 376: break;
  5927                           
  5928                           ;led.c: 375: default:
  5929                           
  5930                           ;led.c: 374: break;
  5931  001A0E  D02F               	goto	i1l737
  5932  001A10                     i1l735:
  5933  001A10  C07D  F07B         	movff	set_time_led@hour,??_set_time_led
  5934  001A14  C07E  F07C         	movff	set_time_led@hour+1,??_set_time_led+1
  5935                           
  5936                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5937                           ; Switch size 1, requested type "space"
  5938                           ; Number of cases is 1, Range of values is 0 to 0
  5939                           ; switch strategies available:
  5940                           ; Name         Instructions Cycles
  5941                           ; simple_byte            4     3 (average)
  5942                           ;	Chosen strategy is simple_byte
  5943  001A18  0100               	movlb	0	; () banked
  5944  001A1A  517C               	movf	(??_set_time_led+1)& (0+255),w,b
  5945  001A1C  0A00               	xorlw	0	; case 0
  5946  001A1E  A4D8               	btfss	status,2,c
  5947  001A20  D026               	goto	i1l737
  5948                           
  5949                           ; BSR set to: 0
  5950                           ; Switch size 1, requested type "space"
  5951                           ; Number of cases is 12, Range of values is 1 to 12
  5952                           ; switch strategies available:
  5953                           ; Name         Instructions Cycles
  5954                           ; simple_byte           37    19 (average)
  5955                           ;	Chosen strategy is simple_byte
  5956  001A22  0100               	movlb	0	; () banked
  5957  001A24  517B               	movf	??_set_time_led& (0+255),w,b
  5958  001A26  0A01               	xorlw	1	; case 1
  5959  001A28  B4D8               	btfsc	status,2,c
  5960  001A2A  D7CE               	goto	i1l736
  5961  001A2C  0A03               	xorlw	3	; case 2
  5962  001A2E  B4D8               	btfsc	status,2,c
  5963  001A30  D7CE               	goto	i1l738
  5964  001A32  0A01               	xorlw	1	; case 3
  5965  001A34  B4D8               	btfsc	status,2,c
  5966  001A36  D7CE               	goto	i1l739
  5967  001A38  0A07               	xorlw	7	; case 4
  5968  001A3A  B4D8               	btfsc	status,2,c
  5969  001A3C  D7CE               	goto	i1l740
  5970  001A3E  0A01               	xorlw	1	; case 5
  5971  001A40  B4D8               	btfsc	status,2,c
  5972  001A42  D7CE               	goto	i1l741
  5973  001A44  0A03               	xorlw	3	; case 6
  5974  001A46  B4D8               	btfsc	status,2,c
  5975  001A48  D7CE               	goto	i1l742
  5976  001A4A  0A01               	xorlw	1	; case 7
  5977  001A4C  B4D8               	btfsc	status,2,c
  5978  001A4E  D7CE               	goto	i1l743
  5979  001A50  0A0F               	xorlw	15	; case 8
  5980  001A52  B4D8               	btfsc	status,2,c
  5981  001A54  D7CE               	goto	i1l744
  5982  001A56  0A01               	xorlw	1	; case 9
  5983  001A58  B4D8               	btfsc	status,2,c
  5984  001A5A  D7CE               	goto	i1l745
  5985  001A5C  0A03               	xorlw	3	; case 10
  5986  001A5E  B4D8               	btfsc	status,2,c
  5987  001A60  D7CE               	goto	i1l746
  5988  001A62  0A01               	xorlw	1	; case 11
  5989  001A64  B4D8               	btfsc	status,2,c
  5990  001A66  D7CE               	goto	i1l747
  5991  001A68  0A07               	xorlw	7	; case 12
  5992  001A6A  B4D8               	btfsc	status,2,c
  5993  001A6C  D7CE               	goto	i1l748
  5994  001A6E                     i1l737:
  5995                           
  5996                           ;led.c: 379: if(time->day == 24 && time->month == 9)
  5997                           
  5998                           ; BSR set to: 0
  5999  001A6E  0100               	movlb	0	; () banked
  6000  001A70  EE20 F006          	lfsr	2,6
  6001  001A74  5179               	movf	set_time_led@time& (0+255),w,b
  6002  001A76  26D9               	addwf	fsr2l,f,c
  6003  001A78  517A               	movf	(set_time_led@time+1)& (0+255),w,b
  6004  001A7A  22DA               	addwfc	fsr2h,f,c
  6005  001A7C  0E18               	movlw	24
  6006  001A7E  18DE               	xorwf	postinc2,w,c
  6007  001A80  10DE               	iorwf	postinc2,w,c
  6008  001A82  A4D8               	btfss	status,2,c
  6009  001A84  D014               	goto	i1l750
  6010                           
  6011                           ; BSR set to: 0
  6012  001A86  0100               	movlb	0	; () banked
  6013  001A88  EE20 F008          	lfsr	2,8
  6014  001A8C  5179               	movf	set_time_led@time& (0+255),w,b
  6015  001A8E  26D9               	addwf	fsr2l,f,c
  6016  001A90  517A               	movf	(set_time_led@time+1)& (0+255),w,b
  6017  001A92  22DA               	addwfc	fsr2h,f,c
  6018  001A94  0E09               	movlw	9
  6019  001A96  18DE               	xorwf	postinc2,w,c
  6020  001A98  10DE               	iorwf	postinc2,w,c
  6021  001A9A  A4D8               	btfss	status,2,c
  6022  001A9C  D008               	goto	i1l750
  6023                           
  6024                           ; BSR set to: 0
  6025                           ;led.c: 380: {
  6026                           ;led.c: 381: set_gelukkige();
  6027  001A9E  EC48  F012         	call	_set_gelukkige	;wreg free
  6028                           
  6029                           ;led.c: 382: set_verjaars();
  6030  001AA2  EC3A  F014         	call	_set_verjaars	;wreg free
  6031                           
  6032                           ;led.c: 383: set_dag();
  6033  001AA6  EC8A  F01D         	call	_set_dag	;wreg free
  6034                           
  6035                           ;led.c: 384: set_minell();
  6036  001AAA  ECDA  F016         	call	_set_minell	;wreg free
  6037  001AAE                     i1l750:
  6038                           
  6039                           ;led.c: 385: }
  6040                           ;led.c: 387: if(time->day == 7 && time->month == 6)
  6041  001AAE  0100               	movlb	0	; () banked
  6042  001AB0  EE20 F006          	lfsr	2,6
  6043  001AB4  5179               	movf	set_time_led@time& (0+255),w,b
  6044  001AB6  26D9               	addwf	fsr2l,f,c
  6045  001AB8  517A               	movf	(set_time_led@time+1)& (0+255),w,b
  6046  001ABA  22DA               	addwfc	fsr2h,f,c
  6047  001ABC  0E07               	movlw	7
  6048  001ABE  18DE               	xorwf	postinc2,w,c
  6049  001AC0  10DE               	iorwf	postinc2,w,c
  6050  001AC2  A4D8               	btfss	status,2,c
  6051  001AC4  D014               	goto	i1l751
  6052                           
  6053                           ; BSR set to: 0
  6054  001AC6  0100               	movlb	0	; () banked
  6055  001AC8  EE20 F008          	lfsr	2,8
  6056  001ACC  5179               	movf	set_time_led@time& (0+255),w,b
  6057  001ACE  26D9               	addwf	fsr2l,f,c
  6058  001AD0  517A               	movf	(set_time_led@time+1)& (0+255),w,b
  6059  001AD2  22DA               	addwfc	fsr2h,f,c
  6060  001AD4  0E06               	movlw	6
  6061  001AD6  18DE               	xorwf	postinc2,w,c
  6062  001AD8  10DE               	iorwf	postinc2,w,c
  6063  001ADA  A4D8               	btfss	status,2,c
  6064  001ADC  D008               	goto	i1l751
  6065                           
  6066                           ; BSR set to: 0
  6067                           ;led.c: 388: {
  6068                           ;led.c: 389: set_gelukkige();
  6069  001ADE  EC48  F012         	call	_set_gelukkige	;wreg free
  6070                           
  6071                           ;led.c: 390: set_verjaars();
  6072  001AE2  EC3A  F014         	call	_set_verjaars	;wreg free
  6073                           
  6074                           ;led.c: 391: set_dag();
  6075  001AE6  EC8A  F01D         	call	_set_dag	;wreg free
  6076                           
  6077                           ;led.c: 392: set_jason();
  6078  001AEA  EC9F  F018         	call	_set_jason	;wreg free
  6079  001AEE                     i1l751:
  6080                           
  6081                           ;led.c: 393: }
  6082                           ;led.c: 395: if(time->day == 14 && time->month == 6)
  6083  001AEE  0100               	movlb	0	; () banked
  6084  001AF0  EE20 F006          	lfsr	2,6
  6085  001AF4  5179               	movf	set_time_led@time& (0+255),w,b
  6086  001AF6  26D9               	addwf	fsr2l,f,c
  6087  001AF8  517A               	movf	(set_time_led@time+1)& (0+255),w,b
  6088  001AFA  22DA               	addwfc	fsr2h,f,c
  6089  001AFC  0E0E               	movlw	14
  6090  001AFE  18DE               	xorwf	postinc2,w,c
  6091  001B00  10DE               	iorwf	postinc2,w,c
  6092  001B02  A4D8               	btfss	status,2,c
  6093  001B04  0012               	return	
  6094                           
  6095                           ; BSR set to: 0
  6096  001B06  0100               	movlb	0	; () banked
  6097  001B08  EE20 F008          	lfsr	2,8
  6098  001B0C  5179               	movf	set_time_led@time& (0+255),w,b
  6099  001B0E  26D9               	addwf	fsr2l,f,c
  6100  001B10  517A               	movf	(set_time_led@time+1)& (0+255),w,b
  6101  001B12  22DA               	addwfc	fsr2h,f,c
  6102  001B14  0E06               	movlw	6
  6103  001B16  18DE               	xorwf	postinc2,w,c
  6104  001B18  10DE               	iorwf	postinc2,w,c
  6105  001B1A  A4D8               	btfss	status,2,c
  6106  001B1C  0012               	return	
  6107                           
  6108                           ; BSR set to: 0
  6109                           ;led.c: 396: {
  6110                           ;led.c: 397: set_gelukkige();
  6111  001B1E  EC48  F012         	call	_set_gelukkige	;wreg free
  6112                           
  6113                           ;led.c: 398: set_trou();
  6114  001B22  EC6B  F01A         	call	_set_trou	;wreg free
  6115                           
  6116                           ;led.c: 399: set_dag();
  6117  001B26  EC8A  F01D         	call	_set_dag	;wreg free
  6118                           
  6119                           ;led.c: 400: set_minell();
  6120  001B2A  ECDA  F016         	call	_set_minell	;wreg free
  6121                           
  6122                           ;led.c: 401: set_en_mj();
  6123  001B2E  EC8B  F021         	call	_set_en_mj	;wreg free
  6124                           
  6125                           ;led.c: 402: set_jason();
  6126  001B32  EC9F  F018         	call	_set_jason	;wreg free
  6127  001B36  0012               	return	
  6128  001B38                     __end_of_set_time_led:
  6129                           	opt stack 0
  6130                           pclatu	equ	0xFFB
  6131                           pclath	equ	0xFFA
  6132                           tblptru	equ	0xFF8
  6133                           tblptrh	equ	0xFF7
  6134                           tblptrl	equ	0xFF6
  6135                           tablat	equ	0xFF5
  6136                           prodh	equ	0xFF4
  6137                           prodl	equ	0xFF3
  6138                           postinc0	equ	0xFEE
  6139                           fsr0h	equ	0xFEA
  6140                           fsr0l	equ	0xFE9
  6141                           wreg	equ	0xFE8
  6142                           postdec1	equ	0xFE5
  6143                           fsr1h	equ	0xFE2
  6144                           fsr1l	equ	0xFE1
  6145                           bsr	equ	0xFE0
  6146                           indf2	equ	0xFDF
  6147                           postinc2	equ	0xFDE
  6148                           postdec2	equ	0xFDD
  6149                           fsr2h	equ	0xFDA
  6150                           fsr2l	equ	0xFD9
  6151                           status	equ	0xFD8
  6152                           
  6153 ;; *************** function _set_vyf_uur *****************
  6154 ;; Defined at:
  6155 ;;		line 659 in file "led.c"
  6156 ;; Parameters:    Size  Location     Type
  6157 ;;		None
  6158 ;; Auto vars:     Size  Location     Type
  6159 ;;		None
  6160 ;; Return value:  Size  Location     Type
  6161 ;;                  1    wreg      void 
  6162 ;; Registers used:
  6163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6164 ;; Tracked objects:
  6165 ;;		On entry : 0/0
  6166 ;;		On exit  : 0/0
  6167 ;;		Unchanged: 0/0
  6168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6172 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6173 ;;Total ram usage:        0 bytes
  6174 ;; Hardware stack levels used:    1
  6175 ;; Hardware stack levels required when called:    7
  6176 ;; This function calls:
  6177 ;;		_set_white_pixel
  6178 ;; This function is called by:
  6179 ;;		_set_time_led
  6180 ;; This function uses a non-reentrant model
  6181 ;;
  6182                           
  6183                           	psect	text20
  6184  0044BC                     __ptext20:
  6185                           	opt stack 0
  6186  0044BC                     _set_vyf_uur:
  6187                           	opt stack 14
  6188                           
  6189                           ;led.c: 661: set_white_pixel(4,3);
  6190                           
  6191                           ;incstack = 0
  6192  0044BC  0E00               	movlw	0
  6193  0044BE  0100               	movlb	0	; () banked
  6194  0044C0  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6195  0044C2  0E04               	movlw	4
  6196  0044C4  6F71               	movwf	set_white_pixel@x& (0+255),b
  6197  0044C6  0E00               	movlw	0
  6198  0044C8  0100               	movlb	0	; () banked
  6199  0044CA  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6200  0044CC  0E03               	movlw	3
  6201  0044CE  6F73               	movwf	set_white_pixel@y& (0+255),b
  6202  0044D0  EC50  F025         	call	_set_white_pixel	;wreg free
  6203                           
  6204                           ;led.c: 662: set_white_pixel(5,3);
  6205  0044D4  0E00               	movlw	0
  6206  0044D6  0100               	movlb	0	; () banked
  6207  0044D8  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6208  0044DA  0E05               	movlw	5
  6209  0044DC  6F71               	movwf	set_white_pixel@x& (0+255),b
  6210  0044DE  0E00               	movlw	0
  6211  0044E0  0100               	movlb	0	; () banked
  6212  0044E2  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6213  0044E4  0E03               	movlw	3
  6214  0044E6  6F73               	movwf	set_white_pixel@y& (0+255),b
  6215  0044E8  EC50  F025         	call	_set_white_pixel	;wreg free
  6216                           
  6217                           ;led.c: 663: set_white_pixel(6,3);
  6218  0044EC  0E00               	movlw	0
  6219  0044EE  0100               	movlb	0	; () banked
  6220  0044F0  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6221  0044F2  0E06               	movlw	6
  6222  0044F4  6F71               	movwf	set_white_pixel@x& (0+255),b
  6223  0044F6  0E00               	movlw	0
  6224  0044F8  0100               	movlb	0	; () banked
  6225  0044FA  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6226  0044FC  0E03               	movlw	3
  6227  0044FE  6F73               	movwf	set_white_pixel@y& (0+255),b
  6228  004500  EC50  F025         	call	_set_white_pixel	;wreg free
  6229  004504  0012               	return		;funcret
  6230  004506                     __end_of_set_vyf_uur:
  6231                           	opt stack 0
  6232                           pclatu	equ	0xFFB
  6233                           pclath	equ	0xFFA
  6234                           tblptru	equ	0xFF8
  6235                           tblptrh	equ	0xFF7
  6236                           tblptrl	equ	0xFF6
  6237                           tablat	equ	0xFF5
  6238                           prodh	equ	0xFF4
  6239                           prodl	equ	0xFF3
  6240                           postinc0	equ	0xFEE
  6241                           fsr0h	equ	0xFEA
  6242                           fsr0l	equ	0xFE9
  6243                           wreg	equ	0xFE8
  6244                           postdec1	equ	0xFE5
  6245                           fsr1h	equ	0xFE2
  6246                           fsr1l	equ	0xFE1
  6247                           bsr	equ	0xFE0
  6248                           indf2	equ	0xFDF
  6249                           postinc2	equ	0xFDE
  6250                           postdec2	equ	0xFDD
  6251                           fsr2h	equ	0xFDA
  6252                           fsr2l	equ	0xFD9
  6253                           status	equ	0xFD8
  6254                           
  6255 ;; *************** function _set_vyf_min *****************
  6256 ;; Defined at:
  6257 ;;		line 490 in file "led.c"
  6258 ;; Parameters:    Size  Location     Type
  6259 ;;		None
  6260 ;; Auto vars:     Size  Location     Type
  6261 ;;		None
  6262 ;; Return value:  Size  Location     Type
  6263 ;;                  1    wreg      void 
  6264 ;; Registers used:
  6265 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6266 ;; Tracked objects:
  6267 ;;		On entry : 0/0
  6268 ;;		On exit  : 0/0
  6269 ;;		Unchanged: 0/0
  6270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6275 ;;Total ram usage:        0 bytes
  6276 ;; Hardware stack levels used:    1
  6277 ;; Hardware stack levels required when called:    7
  6278 ;; This function calls:
  6279 ;;		_set_white_pixel
  6280 ;; This function is called by:
  6281 ;;		_set_time_led
  6282 ;; This function uses a non-reentrant model
  6283 ;;
  6284                           
  6285                           	psect	text21
  6286  004506                     __ptext21:
  6287                           	opt stack 0
  6288  004506                     _set_vyf_min:
  6289                           	opt stack 14
  6290                           
  6291                           ;led.c: 492: set_white_pixel(14,11);
  6292                           
  6293                           ;incstack = 0
  6294  004506  0E00               	movlw	0
  6295  004508  0100               	movlb	0	; () banked
  6296  00450A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6297  00450C  0E0E               	movlw	14
  6298  00450E  6F71               	movwf	set_white_pixel@x& (0+255),b
  6299  004510  0E00               	movlw	0
  6300  004512  0100               	movlb	0	; () banked
  6301  004514  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6302  004516  0E0B               	movlw	11
  6303  004518  6F73               	movwf	set_white_pixel@y& (0+255),b
  6304  00451A  EC50  F025         	call	_set_white_pixel	;wreg free
  6305                           
  6306                           ;led.c: 493: set_white_pixel(15,11);
  6307  00451E  0E00               	movlw	0
  6308  004520  0100               	movlb	0	; () banked
  6309  004522  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6310  004524  0E0F               	movlw	15
  6311  004526  6F71               	movwf	set_white_pixel@x& (0+255),b
  6312  004528  0E00               	movlw	0
  6313  00452A  0100               	movlb	0	; () banked
  6314  00452C  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6315  00452E  0E0B               	movlw	11
  6316  004530  6F73               	movwf	set_white_pixel@y& (0+255),b
  6317  004532  EC50  F025         	call	_set_white_pixel	;wreg free
  6318                           
  6319                           ;led.c: 494: set_white_pixel(16,11);
  6320  004536  0E00               	movlw	0
  6321  004538  0100               	movlb	0	; () banked
  6322  00453A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6323  00453C  0E10               	movlw	16
  6324  00453E  6F71               	movwf	set_white_pixel@x& (0+255),b
  6325  004540  0E00               	movlw	0
  6326  004542  0100               	movlb	0	; () banked
  6327  004544  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6328  004546  0E0B               	movlw	11
  6329  004548  6F73               	movwf	set_white_pixel@y& (0+255),b
  6330  00454A  EC50  F025         	call	_set_white_pixel	;wreg free
  6331  00454E  0012               	return		;funcret
  6332  004550                     __end_of_set_vyf_min:
  6333                           	opt stack 0
  6334                           pclatu	equ	0xFFB
  6335                           pclath	equ	0xFFA
  6336                           tblptru	equ	0xFF8
  6337                           tblptrh	equ	0xFF7
  6338                           tblptrl	equ	0xFF6
  6339                           tablat	equ	0xFF5
  6340                           prodh	equ	0xFF4
  6341                           prodl	equ	0xFF3
  6342                           postinc0	equ	0xFEE
  6343                           fsr0h	equ	0xFEA
  6344                           fsr0l	equ	0xFE9
  6345                           wreg	equ	0xFE8
  6346                           postdec1	equ	0xFE5
  6347                           fsr1h	equ	0xFE2
  6348                           fsr1l	equ	0xFE1
  6349                           bsr	equ	0xFE0
  6350                           indf2	equ	0xFDF
  6351                           postinc2	equ	0xFDE
  6352                           postdec2	equ	0xFDD
  6353                           fsr2h	equ	0xFDA
  6354                           fsr2l	equ	0xFD9
  6355                           status	equ	0xFD8
  6356                           
  6357 ;; *************** function _set_voor *****************
  6358 ;; Defined at:
  6359 ;;		line 613 in file "led.c"
  6360 ;; Parameters:    Size  Location     Type
  6361 ;;		None
  6362 ;; Auto vars:     Size  Location     Type
  6363 ;;		None
  6364 ;; Return value:  Size  Location     Type
  6365 ;;                  1    wreg      void 
  6366 ;; Registers used:
  6367 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6368 ;; Tracked objects:
  6369 ;;		On entry : 0/0
  6370 ;;		On exit  : 0/0
  6371 ;;		Unchanged: 0/0
  6372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6377 ;;Total ram usage:        0 bytes
  6378 ;; Hardware stack levels used:    1
  6379 ;; Hardware stack levels required when called:    7
  6380 ;; This function calls:
  6381 ;;		_set_white_pixel
  6382 ;; This function is called by:
  6383 ;;		_set_time_led
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           	psect	text22
  6388  003CF8                     __ptext22:
  6389                           	opt stack 0
  6390  003CF8                     _set_voor:
  6391                           	opt stack 14
  6392                           
  6393                           ;led.c: 615: set_white_pixel(7,4);
  6394                           
  6395                           ;incstack = 0
  6396  003CF8  0E00               	movlw	0
  6397  003CFA  0100               	movlb	0	; () banked
  6398  003CFC  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6399  003CFE  0E07               	movlw	7
  6400  003D00  6F71               	movwf	set_white_pixel@x& (0+255),b
  6401  003D02  0E00               	movlw	0
  6402  003D04  0100               	movlb	0	; () banked
  6403  003D06  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6404  003D08  0E04               	movlw	4
  6405  003D0A  6F73               	movwf	set_white_pixel@y& (0+255),b
  6406  003D0C  EC50  F025         	call	_set_white_pixel	;wreg free
  6407                           
  6408                           ;led.c: 616: set_white_pixel(8,4);
  6409  003D10  0E00               	movlw	0
  6410  003D12  0100               	movlb	0	; () banked
  6411  003D14  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6412  003D16  0E08               	movlw	8
  6413  003D18  6F71               	movwf	set_white_pixel@x& (0+255),b
  6414  003D1A  0E00               	movlw	0
  6415  003D1C  0100               	movlb	0	; () banked
  6416  003D1E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6417  003D20  0E04               	movlw	4
  6418  003D22  6F73               	movwf	set_white_pixel@y& (0+255),b
  6419  003D24  EC50  F025         	call	_set_white_pixel	;wreg free
  6420                           
  6421                           ;led.c: 617: set_white_pixel(9,4);
  6422  003D28  0E00               	movlw	0
  6423  003D2A  0100               	movlb	0	; () banked
  6424  003D2C  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6425  003D2E  0E09               	movlw	9
  6426  003D30  6F71               	movwf	set_white_pixel@x& (0+255),b
  6427  003D32  0E00               	movlw	0
  6428  003D34  0100               	movlb	0	; () banked
  6429  003D36  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6430  003D38  0E04               	movlw	4
  6431  003D3A  6F73               	movwf	set_white_pixel@y& (0+255),b
  6432  003D3C  EC50  F025         	call	_set_white_pixel	;wreg free
  6433                           
  6434                           ;led.c: 618: set_white_pixel(10,4);
  6435  003D40  0E00               	movlw	0
  6436  003D42  0100               	movlb	0	; () banked
  6437  003D44  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6438  003D46  0E0A               	movlw	10
  6439  003D48  6F71               	movwf	set_white_pixel@x& (0+255),b
  6440  003D4A  0E00               	movlw	0
  6441  003D4C  0100               	movlb	0	; () banked
  6442  003D4E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6443  003D50  0E04               	movlw	4
  6444  003D52  6F73               	movwf	set_white_pixel@y& (0+255),b
  6445  003D54  EC50  F025         	call	_set_white_pixel	;wreg free
  6446  003D58  0012               	return		;funcret
  6447  003D5A                     __end_of_set_voor:
  6448                           	opt stack 0
  6449                           pclatu	equ	0xFFB
  6450                           pclath	equ	0xFFA
  6451                           tblptru	equ	0xFF8
  6452                           tblptrh	equ	0xFF7
  6453                           tblptrl	equ	0xFF6
  6454                           tablat	equ	0xFF5
  6455                           prodh	equ	0xFF4
  6456                           prodl	equ	0xFF3
  6457                           postinc0	equ	0xFEE
  6458                           fsr0h	equ	0xFEA
  6459                           fsr0l	equ	0xFE9
  6460                           wreg	equ	0xFE8
  6461                           postdec1	equ	0xFE5
  6462                           fsr1h	equ	0xFE2
  6463                           fsr1l	equ	0xFE1
  6464                           bsr	equ	0xFE0
  6465                           indf2	equ	0xFDF
  6466                           postinc2	equ	0xFDE
  6467                           postdec2	equ	0xFDD
  6468                           fsr2h	equ	0xFDA
  6469                           fsr2l	equ	0xFD9
  6470                           status	equ	0xFD8
  6471                           
  6472 ;; *************** function _set_vier_uur *****************
  6473 ;; Defined at:
  6474 ;;		line 651 in file "led.c"
  6475 ;; Parameters:    Size  Location     Type
  6476 ;;		None
  6477 ;; Auto vars:     Size  Location     Type
  6478 ;;		None
  6479 ;; Return value:  Size  Location     Type
  6480 ;;                  1    wreg      void 
  6481 ;; Registers used:
  6482 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6483 ;; Tracked objects:
  6484 ;;		On entry : 0/0
  6485 ;;		On exit  : 0/0
  6486 ;;		Unchanged: 0/0
  6487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6488 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6489 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6490 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6491 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6492 ;;Total ram usage:        0 bytes
  6493 ;; Hardware stack levels used:    1
  6494 ;; Hardware stack levels required when called:    7
  6495 ;; This function calls:
  6496 ;;		_set_white_pixel
  6497 ;; This function is called by:
  6498 ;;		_set_time_led
  6499 ;; This function uses a non-reentrant model
  6500 ;;
  6501                           
  6502                           	psect	text23
  6503  003D5A                     __ptext23:
  6504                           	opt stack 0
  6505  003D5A                     _set_vier_uur:
  6506                           	opt stack 14
  6507                           
  6508                           ;led.c: 653: set_white_pixel(5,1);
  6509                           
  6510                           ;incstack = 0
  6511  003D5A  0E00               	movlw	0
  6512  003D5C  0100               	movlb	0	; () banked
  6513  003D5E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6514  003D60  0E05               	movlw	5
  6515  003D62  6F71               	movwf	set_white_pixel@x& (0+255),b
  6516  003D64  0E00               	movlw	0
  6517  003D66  0100               	movlb	0	; () banked
  6518  003D68  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6519  003D6A  0E01               	movlw	1
  6520  003D6C  6F73               	movwf	set_white_pixel@y& (0+255),b
  6521  003D6E  EC50  F025         	call	_set_white_pixel	;wreg free
  6522                           
  6523                           ;led.c: 654: set_white_pixel(6,1);
  6524  003D72  0E00               	movlw	0
  6525  003D74  0100               	movlb	0	; () banked
  6526  003D76  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6527  003D78  0E06               	movlw	6
  6528  003D7A  6F71               	movwf	set_white_pixel@x& (0+255),b
  6529  003D7C  0E00               	movlw	0
  6530  003D7E  0100               	movlb	0	; () banked
  6531  003D80  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6532  003D82  0E01               	movlw	1
  6533  003D84  6F73               	movwf	set_white_pixel@y& (0+255),b
  6534  003D86  EC50  F025         	call	_set_white_pixel	;wreg free
  6535                           
  6536                           ;led.c: 655: set_white_pixel(7,1);
  6537  003D8A  0E00               	movlw	0
  6538  003D8C  0100               	movlb	0	; () banked
  6539  003D8E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6540  003D90  0E07               	movlw	7
  6541  003D92  6F71               	movwf	set_white_pixel@x& (0+255),b
  6542  003D94  0E00               	movlw	0
  6543  003D96  0100               	movlb	0	; () banked
  6544  003D98  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6545  003D9A  0E01               	movlw	1
  6546  003D9C  6F73               	movwf	set_white_pixel@y& (0+255),b
  6547  003D9E  EC50  F025         	call	_set_white_pixel	;wreg free
  6548                           
  6549                           ;led.c: 656: set_white_pixel(8,1);
  6550  003DA2  0E00               	movlw	0
  6551  003DA4  0100               	movlb	0	; () banked
  6552  003DA6  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6553  003DA8  0E08               	movlw	8
  6554  003DAA  6F71               	movwf	set_white_pixel@x& (0+255),b
  6555  003DAC  0E00               	movlw	0
  6556  003DAE  0100               	movlb	0	; () banked
  6557  003DB0  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6558  003DB2  0E01               	movlw	1
  6559  003DB4  6F73               	movwf	set_white_pixel@y& (0+255),b
  6560  003DB6  EC50  F025         	call	_set_white_pixel	;wreg free
  6561  003DBA  0012               	return		;funcret
  6562  003DBC                     __end_of_set_vier_uur:
  6563                           	opt stack 0
  6564                           pclatu	equ	0xFFB
  6565                           pclath	equ	0xFFA
  6566                           tblptru	equ	0xFF8
  6567                           tblptrh	equ	0xFF7
  6568                           tblptrl	equ	0xFF6
  6569                           tablat	equ	0xFF5
  6570                           prodh	equ	0xFF4
  6571                           prodl	equ	0xFF3
  6572                           postinc0	equ	0xFEE
  6573                           fsr0h	equ	0xFEA
  6574                           fsr0l	equ	0xFE9
  6575                           wreg	equ	0xFE8
  6576                           postdec1	equ	0xFE5
  6577                           fsr1h	equ	0xFE2
  6578                           fsr1l	equ	0xFE1
  6579                           bsr	equ	0xFE0
  6580                           indf2	equ	0xFDF
  6581                           postinc2	equ	0xFDE
  6582                           postdec2	equ	0xFDD
  6583                           fsr2h	equ	0xFDA
  6584                           fsr2l	equ	0xFD9
  6585                           status	equ	0xFD8
  6586                           
  6587 ;; *************** function _set_vier_min *****************
  6588 ;; Defined at:
  6589 ;;		line 482 in file "led.c"
  6590 ;; Parameters:    Size  Location     Type
  6591 ;;		None
  6592 ;; Auto vars:     Size  Location     Type
  6593 ;;		None
  6594 ;; Return value:  Size  Location     Type
  6595 ;;                  1    wreg      void 
  6596 ;; Registers used:
  6597 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6598 ;; Tracked objects:
  6599 ;;		On entry : 0/0
  6600 ;;		On exit  : 0/0
  6601 ;;		Unchanged: 0/0
  6602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6607 ;;Total ram usage:        0 bytes
  6608 ;; Hardware stack levels used:    1
  6609 ;; Hardware stack levels required when called:    7
  6610 ;; This function calls:
  6611 ;;		_set_white_pixel
  6612 ;; This function is called by:
  6613 ;;		_set_time_led
  6614 ;; This function uses a non-reentrant model
  6615 ;;
  6616                           
  6617                           	psect	text24
  6618  003DBC                     __ptext24:
  6619                           	opt stack 0
  6620  003DBC                     _set_vier_min:
  6621                           	opt stack 14
  6622                           
  6623                           ;led.c: 484: set_white_pixel(1,10);
  6624                           
  6625                           ;incstack = 0
  6626  003DBC  0E00               	movlw	0
  6627  003DBE  0100               	movlb	0	; () banked
  6628  003DC0  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6629  003DC2  0E01               	movlw	1
  6630  003DC4  6F71               	movwf	set_white_pixel@x& (0+255),b
  6631  003DC6  0E00               	movlw	0
  6632  003DC8  0100               	movlb	0	; () banked
  6633  003DCA  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6634  003DCC  0E0A               	movlw	10
  6635  003DCE  6F73               	movwf	set_white_pixel@y& (0+255),b
  6636  003DD0  EC50  F025         	call	_set_white_pixel	;wreg free
  6637                           
  6638                           ;led.c: 485: set_white_pixel(2,10);
  6639  003DD4  0E00               	movlw	0
  6640  003DD6  0100               	movlb	0	; () banked
  6641  003DD8  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6642  003DDA  0E02               	movlw	2
  6643  003DDC  6F71               	movwf	set_white_pixel@x& (0+255),b
  6644  003DDE  0E00               	movlw	0
  6645  003DE0  0100               	movlb	0	; () banked
  6646  003DE2  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6647  003DE4  0E0A               	movlw	10
  6648  003DE6  6F73               	movwf	set_white_pixel@y& (0+255),b
  6649  003DE8  EC50  F025         	call	_set_white_pixel	;wreg free
  6650                           
  6651                           ;led.c: 486: set_white_pixel(3,10);
  6652  003DEC  0E00               	movlw	0
  6653  003DEE  0100               	movlb	0	; () banked
  6654  003DF0  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6655  003DF2  0E03               	movlw	3
  6656  003DF4  6F71               	movwf	set_white_pixel@x& (0+255),b
  6657  003DF6  0E00               	movlw	0
  6658  003DF8  0100               	movlb	0	; () banked
  6659  003DFA  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6660  003DFC  0E0A               	movlw	10
  6661  003DFE  6F73               	movwf	set_white_pixel@y& (0+255),b
  6662  003E00  EC50  F025         	call	_set_white_pixel	;wreg free
  6663                           
  6664                           ;led.c: 487: set_white_pixel(4,10);
  6665  003E04  0E00               	movlw	0
  6666  003E06  0100               	movlb	0	; () banked
  6667  003E08  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6668  003E0A  0E04               	movlw	4
  6669  003E0C  6F71               	movwf	set_white_pixel@x& (0+255),b
  6670  003E0E  0E00               	movlw	0
  6671  003E10  0100               	movlb	0	; () banked
  6672  003E12  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6673  003E14  0E0A               	movlw	10
  6674  003E16  6F73               	movwf	set_white_pixel@y& (0+255),b
  6675  003E18  EC50  F025         	call	_set_white_pixel	;wreg free
  6676  003E1C  0012               	return		;funcret
  6677  003E1E                     __end_of_set_vier_min:
  6678                           	opt stack 0
  6679                           pclatu	equ	0xFFB
  6680                           pclath	equ	0xFFA
  6681                           tblptru	equ	0xFF8
  6682                           tblptrh	equ	0xFF7
  6683                           tblptrl	equ	0xFF6
  6684                           tablat	equ	0xFF5
  6685                           prodh	equ	0xFF4
  6686                           prodl	equ	0xFF3
  6687                           postinc0	equ	0xFEE
  6688                           fsr0h	equ	0xFEA
  6689                           fsr0l	equ	0xFE9
  6690                           wreg	equ	0xFE8
  6691                           postdec1	equ	0xFE5
  6692                           fsr1h	equ	0xFE2
  6693                           fsr1l	equ	0xFE1
  6694                           bsr	equ	0xFE0
  6695                           indf2	equ	0xFDF
  6696                           postinc2	equ	0xFDE
  6697                           postdec2	equ	0xFDD
  6698                           fsr2h	equ	0xFDA
  6699                           fsr2l	equ	0xFD9
  6700                           status	equ	0xFD8
  6701                           
  6702 ;; *************** function _set_verjaars *****************
  6703 ;; Defined at:
  6704 ;;		line 744 in file "led.c"
  6705 ;; Parameters:    Size  Location     Type
  6706 ;;		None
  6707 ;; Auto vars:     Size  Location     Type
  6708 ;;  clr             3   17[BANK0 ] struct .
  6709 ;; Return value:  Size  Location     Type
  6710 ;;                  1    wreg      void 
  6711 ;; Registers used:
  6712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6713 ;; Tracked objects:
  6714 ;;		On entry : 0/0
  6715 ;;		On exit  : 0/0
  6716 ;;		Unchanged: 0/0
  6717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6719 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6721 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6722 ;;Total ram usage:        3 bytes
  6723 ;; Hardware stack levels used:    1
  6724 ;; Hardware stack levels required when called:    6
  6725 ;; This function calls:
  6726 ;;		_get_random_color
  6727 ;;		_set_pixel
  6728 ;; This function is called by:
  6729 ;;		_set_time_led
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text25
  6734  002874                     __ptext25:
  6735                           	opt stack 0
  6736  002874                     _set_verjaars:
  6737                           	opt stack 15
  6738                           
  6739                           ;led.c: 746: RGBLED clr;
  6740                           ;led.c: 747: get_random_color(&clr);
  6741                           
  6742                           ;incstack = 0
  6743  002874  0E71               	movlw	low set_verjaars@clr
  6744  002876  0100               	movlb	0	; () banked
  6745  002878  6F6A               	movwf	get_random_color@clr& (0+255),b
  6746  00287A  0E00               	movlw	high set_verjaars@clr
  6747  00287C  0100               	movlb	0	; () banked
  6748  00287E  6F6B               	movwf	(get_random_color@clr+1)& (0+255),b
  6749  002880  EC0B  F01D         	call	_get_random_color	;wreg free
  6750                           
  6751                           ;led.c: 749: set_pixel(1, 7, &clr);
  6752  002884  0E00               	movlw	0
  6753  002886  0100               	movlb	0	; () banked
  6754  002888  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  6755  00288A  0E01               	movlw	1
  6756  00288C  6F6B               	movwf	set_pixel@x& (0+255),b
  6757  00288E  0E00               	movlw	0
  6758  002890  0100               	movlb	0	; () banked
  6759  002892  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  6760  002894  0E07               	movlw	7
  6761  002896  6F6D               	movwf	set_pixel@y& (0+255),b
  6762  002898  0E71               	movlw	low set_verjaars@clr
  6763  00289A  0100               	movlb	0	; () banked
  6764  00289C  6F6F               	movwf	set_pixel@clr& (0+255),b
  6765  00289E  0E00               	movlw	high set_verjaars@clr
  6766  0028A0  0100               	movlb	0	; () banked
  6767  0028A2  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  6768  0028A4  EC7B  F01C         	call	_set_pixel	;wreg free
  6769                           
  6770                           ;led.c: 750: set_pixel(2, 7, &clr);
  6771  0028A8  0E00               	movlw	0
  6772  0028AA  0100               	movlb	0	; () banked
  6773  0028AC  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  6774  0028AE  0E02               	movlw	2
  6775  0028B0  6F6B               	movwf	set_pixel@x& (0+255),b
  6776  0028B2  0E00               	movlw	0
  6777  0028B4  0100               	movlb	0	; () banked
  6778  0028B6  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  6779  0028B8  0E07               	movlw	7
  6780  0028BA  6F6D               	movwf	set_pixel@y& (0+255),b
  6781  0028BC  0E71               	movlw	low set_verjaars@clr
  6782  0028BE  0100               	movlb	0	; () banked
  6783  0028C0  6F6F               	movwf	set_pixel@clr& (0+255),b
  6784  0028C2  0E00               	movlw	high set_verjaars@clr
  6785  0028C4  0100               	movlb	0	; () banked
  6786  0028C6  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  6787  0028C8  EC7B  F01C         	call	_set_pixel	;wreg free
  6788                           
  6789                           ;led.c: 751: set_pixel(3, 7, &clr);
  6790  0028CC  0E00               	movlw	0
  6791  0028CE  0100               	movlb	0	; () banked
  6792  0028D0  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  6793  0028D2  0E03               	movlw	3
  6794  0028D4  6F6B               	movwf	set_pixel@x& (0+255),b
  6795  0028D6  0E00               	movlw	0
  6796  0028D8  0100               	movlb	0	; () banked
  6797  0028DA  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  6798  0028DC  0E07               	movlw	7
  6799  0028DE  6F6D               	movwf	set_pixel@y& (0+255),b
  6800  0028E0  0E71               	movlw	low set_verjaars@clr
  6801  0028E2  0100               	movlb	0	; () banked
  6802  0028E4  6F6F               	movwf	set_pixel@clr& (0+255),b
  6803  0028E6  0E00               	movlw	high set_verjaars@clr
  6804  0028E8  0100               	movlb	0	; () banked
  6805  0028EA  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  6806  0028EC  EC7B  F01C         	call	_set_pixel	;wreg free
  6807                           
  6808                           ;led.c: 752: set_pixel(4, 7, &clr);
  6809  0028F0  0E00               	movlw	0
  6810  0028F2  0100               	movlb	0	; () banked
  6811  0028F4  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  6812  0028F6  0E04               	movlw	4
  6813  0028F8  6F6B               	movwf	set_pixel@x& (0+255),b
  6814  0028FA  0E00               	movlw	0
  6815  0028FC  0100               	movlb	0	; () banked
  6816  0028FE  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  6817  002900  0E07               	movlw	7
  6818  002902  6F6D               	movwf	set_pixel@y& (0+255),b
  6819  002904  0E71               	movlw	low set_verjaars@clr
  6820  002906  0100               	movlb	0	; () banked
  6821  002908  6F6F               	movwf	set_pixel@clr& (0+255),b
  6822  00290A  0E00               	movlw	high set_verjaars@clr
  6823  00290C  0100               	movlb	0	; () banked
  6824  00290E  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  6825  002910  EC7B  F01C         	call	_set_pixel	;wreg free
  6826                           
  6827                           ;led.c: 753: set_pixel(5, 7, &clr);
  6828  002914  0E00               	movlw	0
  6829  002916  0100               	movlb	0	; () banked
  6830  002918  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  6831  00291A  0E05               	movlw	5
  6832  00291C  6F6B               	movwf	set_pixel@x& (0+255),b
  6833  00291E  0E00               	movlw	0
  6834  002920  0100               	movlb	0	; () banked
  6835  002922  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  6836  002924  0E07               	movlw	7
  6837  002926  6F6D               	movwf	set_pixel@y& (0+255),b
  6838  002928  0E71               	movlw	low set_verjaars@clr
  6839  00292A  0100               	movlb	0	; () banked
  6840  00292C  6F6F               	movwf	set_pixel@clr& (0+255),b
  6841  00292E  0E00               	movlw	high set_verjaars@clr
  6842  002930  0100               	movlb	0	; () banked
  6843  002932  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  6844  002934  EC7B  F01C         	call	_set_pixel	;wreg free
  6845                           
  6846                           ;led.c: 754: set_pixel(6, 7, &clr);
  6847  002938  0E00               	movlw	0
  6848  00293A  0100               	movlb	0	; () banked
  6849  00293C  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  6850  00293E  0E06               	movlw	6
  6851  002940  6F6B               	movwf	set_pixel@x& (0+255),b
  6852  002942  0E00               	movlw	0
  6853  002944  0100               	movlb	0	; () banked
  6854  002946  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  6855  002948  0E07               	movlw	7
  6856  00294A  6F6D               	movwf	set_pixel@y& (0+255),b
  6857  00294C  0E71               	movlw	low set_verjaars@clr
  6858  00294E  0100               	movlb	0	; () banked
  6859  002950  6F6F               	movwf	set_pixel@clr& (0+255),b
  6860  002952  0E00               	movlw	high set_verjaars@clr
  6861  002954  0100               	movlb	0	; () banked
  6862  002956  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  6863  002958  EC7B  F01C         	call	_set_pixel	;wreg free
  6864                           
  6865                           ;led.c: 755: set_pixel(7, 7, &clr);
  6866  00295C  0E00               	movlw	0
  6867  00295E  0100               	movlb	0	; () banked
  6868  002960  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  6869  002962  0E07               	movlw	7
  6870  002964  6F6B               	movwf	set_pixel@x& (0+255),b
  6871  002966  0E00               	movlw	0
  6872  002968  0100               	movlb	0	; () banked
  6873  00296A  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  6874  00296C  0E07               	movlw	7
  6875  00296E  6F6D               	movwf	set_pixel@y& (0+255),b
  6876  002970  0E71               	movlw	low set_verjaars@clr
  6877  002972  0100               	movlb	0	; () banked
  6878  002974  6F6F               	movwf	set_pixel@clr& (0+255),b
  6879  002976  0E00               	movlw	high set_verjaars@clr
  6880  002978  0100               	movlb	0	; () banked
  6881  00297A  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  6882  00297C  EC7B  F01C         	call	_set_pixel	;wreg free
  6883                           
  6884                           ;led.c: 756: set_pixel(8, 7, &clr);
  6885  002980  0E00               	movlw	0
  6886  002982  0100               	movlb	0	; () banked
  6887  002984  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  6888  002986  0E08               	movlw	8
  6889  002988  6F6B               	movwf	set_pixel@x& (0+255),b
  6890  00298A  0E00               	movlw	0
  6891  00298C  0100               	movlb	0	; () banked
  6892  00298E  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  6893  002990  0E07               	movlw	7
  6894  002992  6F6D               	movwf	set_pixel@y& (0+255),b
  6895  002994  0E71               	movlw	low set_verjaars@clr
  6896  002996  0100               	movlb	0	; () banked
  6897  002998  6F6F               	movwf	set_pixel@clr& (0+255),b
  6898  00299A  0E00               	movlw	high set_verjaars@clr
  6899  00299C  0100               	movlb	0	; () banked
  6900  00299E  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  6901  0029A0  EC7B  F01C         	call	_set_pixel	;wreg free
  6902  0029A4  0012               	return		;funcret
  6903  0029A6                     __end_of_set_verjaars:
  6904                           	opt stack 0
  6905                           pclatu	equ	0xFFB
  6906                           pclath	equ	0xFFA
  6907                           tblptru	equ	0xFF8
  6908                           tblptrh	equ	0xFF7
  6909                           tblptrl	equ	0xFF6
  6910                           tablat	equ	0xFF5
  6911                           prodh	equ	0xFF4
  6912                           prodl	equ	0xFF3
  6913                           postinc0	equ	0xFEE
  6914                           fsr0h	equ	0xFEA
  6915                           fsr0l	equ	0xFE9
  6916                           wreg	equ	0xFE8
  6917                           postdec1	equ	0xFE5
  6918                           fsr1h	equ	0xFE2
  6919                           fsr1l	equ	0xFE1
  6920                           bsr	equ	0xFE0
  6921                           indf2	equ	0xFDF
  6922                           postinc2	equ	0xFDE
  6923                           postdec2	equ	0xFDD
  6924                           fsr2h	equ	0xFDA
  6925                           fsr2l	equ	0xFD9
  6926                           status	equ	0xFD8
  6927                           
  6928 ;; *************** function _set_veer *****************
  6929 ;; Defined at:
  6930 ;;		line 568 in file "led.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;		None
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  1    wreg      void 
  6937 ;; Registers used:
  6938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6948 ;;Total ram usage:        0 bytes
  6949 ;; Hardware stack levels used:    1
  6950 ;; Hardware stack levels required when called:    7
  6951 ;; This function calls:
  6952 ;;		_set_white_pixel
  6953 ;; This function is called by:
  6954 ;;		_set_time_led
  6955 ;; This function uses a non-reentrant model
  6956 ;;
  6957                           
  6958                           	psect	text26
  6959  003E1E                     __ptext26:
  6960                           	opt stack 0
  6961  003E1E                     _set_veer:
  6962                           	opt stack 14
  6963                           
  6964                           ;led.c: 570: set_white_pixel(1,8);
  6965                           
  6966                           ;incstack = 0
  6967  003E1E  0E00               	movlw	0
  6968  003E20  0100               	movlb	0	; () banked
  6969  003E22  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6970  003E24  0E01               	movlw	1
  6971  003E26  6F71               	movwf	set_white_pixel@x& (0+255),b
  6972  003E28  0E00               	movlw	0
  6973  003E2A  0100               	movlb	0	; () banked
  6974  003E2C  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6975  003E2E  0E08               	movlw	8
  6976  003E30  6F73               	movwf	set_white_pixel@y& (0+255),b
  6977  003E32  EC50  F025         	call	_set_white_pixel	;wreg free
  6978                           
  6979                           ;led.c: 571: set_white_pixel(2,8);
  6980  003E36  0E00               	movlw	0
  6981  003E38  0100               	movlb	0	; () banked
  6982  003E3A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6983  003E3C  0E02               	movlw	2
  6984  003E3E  6F71               	movwf	set_white_pixel@x& (0+255),b
  6985  003E40  0E00               	movlw	0
  6986  003E42  0100               	movlb	0	; () banked
  6987  003E44  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  6988  003E46  0E08               	movlw	8
  6989  003E48  6F73               	movwf	set_white_pixel@y& (0+255),b
  6990  003E4A  EC50  F025         	call	_set_white_pixel	;wreg free
  6991                           
  6992                           ;led.c: 572: set_white_pixel(3,8);
  6993  003E4E  0E00               	movlw	0
  6994  003E50  0100               	movlb	0	; () banked
  6995  003E52  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  6996  003E54  0E03               	movlw	3
  6997  003E56  6F71               	movwf	set_white_pixel@x& (0+255),b
  6998  003E58  0E00               	movlw	0
  6999  003E5A  0100               	movlb	0	; () banked
  7000  003E5C  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7001  003E5E  0E08               	movlw	8
  7002  003E60  6F73               	movwf	set_white_pixel@y& (0+255),b
  7003  003E62  EC50  F025         	call	_set_white_pixel	;wreg free
  7004                           
  7005                           ;led.c: 573: set_white_pixel(4,8);
  7006  003E66  0E00               	movlw	0
  7007  003E68  0100               	movlb	0	; () banked
  7008  003E6A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7009  003E6C  0E04               	movlw	4
  7010  003E6E  6F71               	movwf	set_white_pixel@x& (0+255),b
  7011  003E70  0E00               	movlw	0
  7012  003E72  0100               	movlb	0	; () banked
  7013  003E74  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7014  003E76  0E08               	movlw	8
  7015  003E78  6F73               	movwf	set_white_pixel@y& (0+255),b
  7016  003E7A  EC50  F025         	call	_set_white_pixel	;wreg free
  7017  003E7E  0012               	return		;funcret
  7018  003E80                     __end_of_set_veer:
  7019                           	opt stack 0
  7020                           pclatu	equ	0xFFB
  7021                           pclath	equ	0xFFA
  7022                           tblptru	equ	0xFF8
  7023                           tblptrh	equ	0xFF7
  7024                           tblptrl	equ	0xFF6
  7025                           tablat	equ	0xFF5
  7026                           prodh	equ	0xFF4
  7027                           prodl	equ	0xFF3
  7028                           postinc0	equ	0xFEE
  7029                           fsr0h	equ	0xFEA
  7030                           fsr0l	equ	0xFE9
  7031                           wreg	equ	0xFE8
  7032                           postdec1	equ	0xFE5
  7033                           fsr1h	equ	0xFE2
  7034                           fsr1l	equ	0xFE1
  7035                           bsr	equ	0xFE0
  7036                           indf2	equ	0xFDF
  7037                           postinc2	equ	0xFDE
  7038                           postdec2	equ	0xFDD
  7039                           fsr2h	equ	0xFDA
  7040                           fsr2l	equ	0xFD9
  7041                           status	equ	0xFD8
  7042                           
  7043 ;; *************** function _set_uur *****************
  7044 ;; Defined at:
  7045 ;;		line 721 in file "led.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;		None
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7063 ;;Total ram usage:        0 bytes
  7064 ;; Hardware stack levels used:    1
  7065 ;; Hardware stack levels required when called:    7
  7066 ;; This function calls:
  7067 ;;		_set_white_pixel
  7068 ;; This function is called by:
  7069 ;;		_set_time_led
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text27
  7074  004550                     __ptext27:
  7075                           	opt stack 0
  7076  004550                     _set_uur:
  7077                           	opt stack 14
  7078                           
  7079                           ;led.c: 723: set_white_pixel(14,1);
  7080                           
  7081                           ;incstack = 0
  7082  004550  0E00               	movlw	0
  7083  004552  0100               	movlb	0	; () banked
  7084  004554  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7085  004556  0E0E               	movlw	14
  7086  004558  6F71               	movwf	set_white_pixel@x& (0+255),b
  7087  00455A  0E00               	movlw	0
  7088  00455C  0100               	movlb	0	; () banked
  7089  00455E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7090  004560  0E01               	movlw	1
  7091  004562  6F73               	movwf	set_white_pixel@y& (0+255),b
  7092  004564  EC50  F025         	call	_set_white_pixel	;wreg free
  7093                           
  7094                           ;led.c: 724: set_white_pixel(15,1);
  7095  004568  0E00               	movlw	0
  7096  00456A  0100               	movlb	0	; () banked
  7097  00456C  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7098  00456E  0E0F               	movlw	15
  7099  004570  6F71               	movwf	set_white_pixel@x& (0+255),b
  7100  004572  0E00               	movlw	0
  7101  004574  0100               	movlb	0	; () banked
  7102  004576  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7103  004578  0E01               	movlw	1
  7104  00457A  6F73               	movwf	set_white_pixel@y& (0+255),b
  7105  00457C  EC50  F025         	call	_set_white_pixel	;wreg free
  7106                           
  7107                           ;led.c: 725: set_white_pixel(16,1);
  7108  004580  0E00               	movlw	0
  7109  004582  0100               	movlb	0	; () banked
  7110  004584  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7111  004586  0E10               	movlw	16
  7112  004588  6F71               	movwf	set_white_pixel@x& (0+255),b
  7113  00458A  0E00               	movlw	0
  7114  00458C  0100               	movlb	0	; () banked
  7115  00458E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7116  004590  0E01               	movlw	1
  7117  004592  6F73               	movwf	set_white_pixel@y& (0+255),b
  7118  004594  EC50  F025         	call	_set_white_pixel	;wreg free
  7119  004598  0012               	return		;funcret
  7120  00459A                     __end_of_set_uur:
  7121                           	opt stack 0
  7122                           pclatu	equ	0xFFB
  7123                           pclath	equ	0xFFA
  7124                           tblptru	equ	0xFF8
  7125                           tblptrh	equ	0xFF7
  7126                           tblptrl	equ	0xFF6
  7127                           tablat	equ	0xFF5
  7128                           prodh	equ	0xFF4
  7129                           prodl	equ	0xFF3
  7130                           postinc0	equ	0xFEE
  7131                           fsr0h	equ	0xFEA
  7132                           fsr0l	equ	0xFE9
  7133                           wreg	equ	0xFE8
  7134                           postdec1	equ	0xFE5
  7135                           fsr1h	equ	0xFE2
  7136                           fsr1l	equ	0xFE1
  7137                           bsr	equ	0xFE0
  7138                           indf2	equ	0xFDF
  7139                           postinc2	equ	0xFDE
  7140                           postdec2	equ	0xFDD
  7141                           fsr2h	equ	0xFDA
  7142                           fsr2l	equ	0xFD9
  7143                           status	equ	0xFD8
  7144                           
  7145 ;; *************** function _set_twintig *****************
  7146 ;; Defined at:
  7147 ;;		line 576 in file "led.c"
  7148 ;; Parameters:    Size  Location     Type
  7149 ;;		None
  7150 ;; Auto vars:     Size  Location     Type
  7151 ;;		None
  7152 ;; Return value:  Size  Location     Type
  7153 ;;                  1    wreg      void 
  7154 ;; Registers used:
  7155 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7156 ;; Tracked objects:
  7157 ;;		On entry : 0/0
  7158 ;;		On exit  : 0/0
  7159 ;;		Unchanged: 0/0
  7160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7161 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7162 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7163 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7164 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7165 ;;Total ram usage:        0 bytes
  7166 ;; Hardware stack levels used:    1
  7167 ;; Hardware stack levels required when called:    7
  7168 ;; This function calls:
  7169 ;;		_set_white_pixel
  7170 ;; This function is called by:
  7171 ;;		_set_time_led
  7172 ;; This function uses a non-reentrant model
  7173 ;;
  7174                           
  7175                           	psect	text28
  7176  00342C                     __ptext28:
  7177                           	opt stack 0
  7178  00342C                     _set_twintig:
  7179                           	opt stack 14
  7180                           
  7181                           ;led.c: 578: set_white_pixel(10,7);
  7182                           
  7183                           ;incstack = 0
  7184  00342C  0E00               	movlw	0
  7185  00342E  0100               	movlb	0	; () banked
  7186  003430  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7187  003432  0E0A               	movlw	10
  7188  003434  6F71               	movwf	set_white_pixel@x& (0+255),b
  7189  003436  0E00               	movlw	0
  7190  003438  0100               	movlb	0	; () banked
  7191  00343A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7192  00343C  0E07               	movlw	7
  7193  00343E  6F73               	movwf	set_white_pixel@y& (0+255),b
  7194  003440  EC50  F025         	call	_set_white_pixel	;wreg free
  7195                           
  7196                           ;led.c: 579: set_white_pixel(11,7);
  7197  003444  0E00               	movlw	0
  7198  003446  0100               	movlb	0	; () banked
  7199  003448  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7200  00344A  0E0B               	movlw	11
  7201  00344C  6F71               	movwf	set_white_pixel@x& (0+255),b
  7202  00344E  0E00               	movlw	0
  7203  003450  0100               	movlb	0	; () banked
  7204  003452  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7205  003454  0E07               	movlw	7
  7206  003456  6F73               	movwf	set_white_pixel@y& (0+255),b
  7207  003458  EC50  F025         	call	_set_white_pixel	;wreg free
  7208                           
  7209                           ;led.c: 580: set_white_pixel(12,7);
  7210  00345C  0E00               	movlw	0
  7211  00345E  0100               	movlb	0	; () banked
  7212  003460  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7213  003462  0E0C               	movlw	12
  7214  003464  6F71               	movwf	set_white_pixel@x& (0+255),b
  7215  003466  0E00               	movlw	0
  7216  003468  0100               	movlb	0	; () banked
  7217  00346A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7218  00346C  0E07               	movlw	7
  7219  00346E  6F73               	movwf	set_white_pixel@y& (0+255),b
  7220  003470  EC50  F025         	call	_set_white_pixel	;wreg free
  7221                           
  7222                           ;led.c: 581: set_white_pixel(13,7);
  7223  003474  0E00               	movlw	0
  7224  003476  0100               	movlb	0	; () banked
  7225  003478  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7226  00347A  0E0D               	movlw	13
  7227  00347C  6F71               	movwf	set_white_pixel@x& (0+255),b
  7228  00347E  0E00               	movlw	0
  7229  003480  0100               	movlb	0	; () banked
  7230  003482  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7231  003484  0E07               	movlw	7
  7232  003486  6F73               	movwf	set_white_pixel@y& (0+255),b
  7233  003488  EC50  F025         	call	_set_white_pixel	;wreg free
  7234                           
  7235                           ;led.c: 582: set_white_pixel(14,7);
  7236  00348C  0E00               	movlw	0
  7237  00348E  0100               	movlb	0	; () banked
  7238  003490  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7239  003492  0E0E               	movlw	14
  7240  003494  6F71               	movwf	set_white_pixel@x& (0+255),b
  7241  003496  0E00               	movlw	0
  7242  003498  0100               	movlb	0	; () banked
  7243  00349A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7244  00349C  0E07               	movlw	7
  7245  00349E  6F73               	movwf	set_white_pixel@y& (0+255),b
  7246  0034A0  EC50  F025         	call	_set_white_pixel	;wreg free
  7247                           
  7248                           ;led.c: 583: set_white_pixel(15,7);
  7249  0034A4  0E00               	movlw	0
  7250  0034A6  0100               	movlb	0	; () banked
  7251  0034A8  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7252  0034AA  0E0F               	movlw	15
  7253  0034AC  6F71               	movwf	set_white_pixel@x& (0+255),b
  7254  0034AE  0E00               	movlw	0
  7255  0034B0  0100               	movlb	0	; () banked
  7256  0034B2  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7257  0034B4  0E07               	movlw	7
  7258  0034B6  6F73               	movwf	set_white_pixel@y& (0+255),b
  7259  0034B8  EC50  F025         	call	_set_white_pixel	;wreg free
  7260                           
  7261                           ;led.c: 584: set_white_pixel(16,7);
  7262  0034BC  0E00               	movlw	0
  7263  0034BE  0100               	movlb	0	; () banked
  7264  0034C0  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7265  0034C2  0E10               	movlw	16
  7266  0034C4  6F71               	movwf	set_white_pixel@x& (0+255),b
  7267  0034C6  0E00               	movlw	0
  7268  0034C8  0100               	movlb	0	; () banked
  7269  0034CA  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7270  0034CC  0E07               	movlw	7
  7271  0034CE  6F73               	movwf	set_white_pixel@y& (0+255),b
  7272  0034D0  EC50  F025         	call	_set_white_pixel	;wreg free
  7273  0034D4  0012               	return		;funcret
  7274  0034D6                     __end_of_set_twintig:
  7275                           	opt stack 0
  7276                           pclatu	equ	0xFFB
  7277                           pclath	equ	0xFFA
  7278                           tblptru	equ	0xFF8
  7279                           tblptrh	equ	0xFF7
  7280                           tblptrl	equ	0xFF6
  7281                           tablat	equ	0xFF5
  7282                           prodh	equ	0xFF4
  7283                           prodl	equ	0xFF3
  7284                           postinc0	equ	0xFEE
  7285                           fsr0h	equ	0xFEA
  7286                           fsr0l	equ	0xFE9
  7287                           wreg	equ	0xFE8
  7288                           postdec1	equ	0xFE5
  7289                           fsr1h	equ	0xFE2
  7290                           fsr1l	equ	0xFE1
  7291                           bsr	equ	0xFE0
  7292                           indf2	equ	0xFDF
  7293                           postinc2	equ	0xFDE
  7294                           postdec2	equ	0xFDD
  7295                           fsr2h	equ	0xFDA
  7296                           fsr2l	equ	0xFD9
  7297                           status	equ	0xFD8
  7298                           
  7299 ;; *************** function _set_twee_min *****************
  7300 ;; Defined at:
  7301 ;;		line 459 in file "led.c"
  7302 ;; Parameters:    Size  Location     Type
  7303 ;;		None
  7304 ;; Auto vars:     Size  Location     Type
  7305 ;;		None
  7306 ;; Return value:  Size  Location     Type
  7307 ;;                  1    wreg      void 
  7308 ;; Registers used:
  7309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7310 ;; Tracked objects:
  7311 ;;		On entry : 0/0
  7312 ;;		On exit  : 0/0
  7313 ;;		Unchanged: 0/0
  7314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7319 ;;Total ram usage:        0 bytes
  7320 ;; Hardware stack levels used:    1
  7321 ;; Hardware stack levels required when called:    7
  7322 ;; This function calls:
  7323 ;;		_set_white_pixel
  7324 ;; This function is called by:
  7325 ;;		_set_time_led
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text29
  7330  003E80                     __ptext29:
  7331                           	opt stack 0
  7332  003E80                     _set_twee_min:
  7333                           	opt stack 14
  7334                           
  7335                           ;led.c: 461: set_white_pixel(5,11);
  7336                           
  7337                           ;incstack = 0
  7338  003E80  0E00               	movlw	0
  7339  003E82  0100               	movlb	0	; () banked
  7340  003E84  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7341  003E86  0E05               	movlw	5
  7342  003E88  6F71               	movwf	set_white_pixel@x& (0+255),b
  7343  003E8A  0E00               	movlw	0
  7344  003E8C  0100               	movlb	0	; () banked
  7345  003E8E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7346  003E90  0E0B               	movlw	11
  7347  003E92  6F73               	movwf	set_white_pixel@y& (0+255),b
  7348  003E94  EC50  F025         	call	_set_white_pixel	;wreg free
  7349                           
  7350                           ;led.c: 462: set_white_pixel(6,11);
  7351  003E98  0E00               	movlw	0
  7352  003E9A  0100               	movlb	0	; () banked
  7353  003E9C  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7354  003E9E  0E06               	movlw	6
  7355  003EA0  6F71               	movwf	set_white_pixel@x& (0+255),b
  7356  003EA2  0E00               	movlw	0
  7357  003EA4  0100               	movlb	0	; () banked
  7358  003EA6  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7359  003EA8  0E0B               	movlw	11
  7360  003EAA  6F73               	movwf	set_white_pixel@y& (0+255),b
  7361  003EAC  EC50  F025         	call	_set_white_pixel	;wreg free
  7362                           
  7363                           ;led.c: 463: set_white_pixel(7,11);
  7364  003EB0  0E00               	movlw	0
  7365  003EB2  0100               	movlb	0	; () banked
  7366  003EB4  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7367  003EB6  0E07               	movlw	7
  7368  003EB8  6F71               	movwf	set_white_pixel@x& (0+255),b
  7369  003EBA  0E00               	movlw	0
  7370  003EBC  0100               	movlb	0	; () banked
  7371  003EBE  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7372  003EC0  0E0B               	movlw	11
  7373  003EC2  6F73               	movwf	set_white_pixel@y& (0+255),b
  7374  003EC4  EC50  F025         	call	_set_white_pixel	;wreg free
  7375                           
  7376                           ;led.c: 464: set_white_pixel(8,11);
  7377  003EC8  0E00               	movlw	0
  7378  003ECA  0100               	movlb	0	; () banked
  7379  003ECC  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7380  003ECE  0E08               	movlw	8
  7381  003ED0  6F71               	movwf	set_white_pixel@x& (0+255),b
  7382  003ED2  0E00               	movlw	0
  7383  003ED4  0100               	movlb	0	; () banked
  7384  003ED6  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7385  003ED8  0E0B               	movlw	11
  7386  003EDA  6F73               	movwf	set_white_pixel@y& (0+255),b
  7387  003EDC  EC50  F025         	call	_set_white_pixel	;wreg free
  7388  003EE0  0012               	return		;funcret
  7389  003EE2                     __end_of_set_twee_min:
  7390                           	opt stack 0
  7391                           pclatu	equ	0xFFB
  7392                           pclath	equ	0xFFA
  7393                           tblptru	equ	0xFF8
  7394                           tblptrh	equ	0xFF7
  7395                           tblptrl	equ	0xFF6
  7396                           tablat	equ	0xFF5
  7397                           prodh	equ	0xFF4
  7398                           prodl	equ	0xFF3
  7399                           postinc0	equ	0xFEE
  7400                           fsr0h	equ	0xFEA
  7401                           fsr0l	equ	0xFE9
  7402                           wreg	equ	0xFE8
  7403                           postdec1	equ	0xFE5
  7404                           fsr1h	equ	0xFE2
  7405                           fsr1l	equ	0xFE1
  7406                           bsr	equ	0xFE0
  7407                           indf2	equ	0xFDF
  7408                           postinc2	equ	0xFDE
  7409                           postdec2	equ	0xFDD
  7410                           fsr2h	equ	0xFDA
  7411                           fsr2l	equ	0xFD9
  7412                           status	equ	0xFD8
  7413                           
  7414 ;; *************** function _set_twee_hour *****************
  7415 ;; Defined at:
  7416 ;;		line 635 in file "led.c"
  7417 ;; Parameters:    Size  Location     Type
  7418 ;;		None
  7419 ;; Auto vars:     Size  Location     Type
  7420 ;;		None
  7421 ;; Return value:  Size  Location     Type
  7422 ;;                  1    wreg      void 
  7423 ;; Registers used:
  7424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7425 ;; Tracked objects:
  7426 ;;		On entry : 0/0
  7427 ;;		On exit  : 0/0
  7428 ;;		Unchanged: 0/0
  7429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7430 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7431 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7432 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7433 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7434 ;;Total ram usage:        0 bytes
  7435 ;; Hardware stack levels used:    1
  7436 ;; Hardware stack levels required when called:    7
  7437 ;; This function calls:
  7438 ;;		_set_white_pixel
  7439 ;; This function is called by:
  7440 ;;		_set_time_led
  7441 ;; This function uses a non-reentrant model
  7442 ;;
  7443                           
  7444                           	psect	text30
  7445  003EE2                     __ptext30:
  7446                           	opt stack 0
  7447  003EE2                     _set_twee_hour:
  7448                           	opt stack 14
  7449                           
  7450                           ;led.c: 637: set_white_pixel(12,4);
  7451                           
  7452                           ;incstack = 0
  7453  003EE2  0E00               	movlw	0
  7454  003EE4  0100               	movlb	0	; () banked
  7455  003EE6  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7456  003EE8  0E0C               	movlw	12
  7457  003EEA  6F71               	movwf	set_white_pixel@x& (0+255),b
  7458  003EEC  0E00               	movlw	0
  7459  003EEE  0100               	movlb	0	; () banked
  7460  003EF0  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7461  003EF2  0E04               	movlw	4
  7462  003EF4  6F73               	movwf	set_white_pixel@y& (0+255),b
  7463  003EF6  EC50  F025         	call	_set_white_pixel	;wreg free
  7464                           
  7465                           ;led.c: 638: set_white_pixel(13,4);
  7466  003EFA  0E00               	movlw	0
  7467  003EFC  0100               	movlb	0	; () banked
  7468  003EFE  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7469  003F00  0E0D               	movlw	13
  7470  003F02  6F71               	movwf	set_white_pixel@x& (0+255),b
  7471  003F04  0E00               	movlw	0
  7472  003F06  0100               	movlb	0	; () banked
  7473  003F08  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7474  003F0A  0E04               	movlw	4
  7475  003F0C  6F73               	movwf	set_white_pixel@y& (0+255),b
  7476  003F0E  EC50  F025         	call	_set_white_pixel	;wreg free
  7477                           
  7478                           ;led.c: 639: set_white_pixel(14,4);
  7479  003F12  0E00               	movlw	0
  7480  003F14  0100               	movlb	0	; () banked
  7481  003F16  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7482  003F18  0E0E               	movlw	14
  7483  003F1A  6F71               	movwf	set_white_pixel@x& (0+255),b
  7484  003F1C  0E00               	movlw	0
  7485  003F1E  0100               	movlb	0	; () banked
  7486  003F20  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7487  003F22  0E04               	movlw	4
  7488  003F24  6F73               	movwf	set_white_pixel@y& (0+255),b
  7489  003F26  EC50  F025         	call	_set_white_pixel	;wreg free
  7490                           
  7491                           ;led.c: 640: set_white_pixel(15,4);
  7492  003F2A  0E00               	movlw	0
  7493  003F2C  0100               	movlb	0	; () banked
  7494  003F2E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7495  003F30  0E0F               	movlw	15
  7496  003F32  6F71               	movwf	set_white_pixel@x& (0+255),b
  7497  003F34  0E00               	movlw	0
  7498  003F36  0100               	movlb	0	; () banked
  7499  003F38  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7500  003F3A  0E04               	movlw	4
  7501  003F3C  6F73               	movwf	set_white_pixel@y& (0+255),b
  7502  003F3E  EC50  F025         	call	_set_white_pixel	;wreg free
  7503  003F42  0012               	return		;funcret
  7504  003F44                     __end_of_set_twee_hour:
  7505                           	opt stack 0
  7506                           pclatu	equ	0xFFB
  7507                           pclath	equ	0xFFA
  7508                           tblptru	equ	0xFF8
  7509                           tblptrh	equ	0xFF7
  7510                           tblptrl	equ	0xFF6
  7511                           tablat	equ	0xFF5
  7512                           prodh	equ	0xFF4
  7513                           prodl	equ	0xFF3
  7514                           postinc0	equ	0xFEE
  7515                           fsr0h	equ	0xFEA
  7516                           fsr0l	equ	0xFE9
  7517                           wreg	equ	0xFE8
  7518                           postdec1	equ	0xFE5
  7519                           fsr1h	equ	0xFE2
  7520                           fsr1l	equ	0xFE1
  7521                           bsr	equ	0xFE0
  7522                           indf2	equ	0xFDF
  7523                           postinc2	equ	0xFDE
  7524                           postdec2	equ	0xFDD
  7525                           fsr2h	equ	0xFDA
  7526                           fsr2l	equ	0xFD9
  7527                           status	equ	0xFD8
  7528                           
  7529 ;; *************** function _set_twaalf_uur *****************
  7530 ;; Defined at:
  7531 ;;		line 711 in file "led.c"
  7532 ;; Parameters:    Size  Location     Type
  7533 ;;		None
  7534 ;; Auto vars:     Size  Location     Type
  7535 ;;		None
  7536 ;; Return value:  Size  Location     Type
  7537 ;;                  1    wreg      void 
  7538 ;; Registers used:
  7539 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7540 ;; Tracked objects:
  7541 ;;		On entry : 0/0
  7542 ;;		On exit  : 0/0
  7543 ;;		Unchanged: 0/0
  7544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7545 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7546 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7547 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7548 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7549 ;;Total ram usage:        0 bytes
  7550 ;; Hardware stack levels used:    1
  7551 ;; Hardware stack levels required when called:    7
  7552 ;; This function calls:
  7553 ;;		_set_white_pixel
  7554 ;; This function is called by:
  7555 ;;		_set_time_led
  7556 ;; This function uses a non-reentrant model
  7557 ;;
  7558                           
  7559                           	psect	text31
  7560  0036AE                     __ptext31:
  7561                           	opt stack 0
  7562  0036AE                     _set_twaalf_uur:
  7563                           	opt stack 14
  7564                           
  7565                           ;led.c: 713: set_white_pixel(6,2);
  7566                           
  7567                           ;incstack = 0
  7568  0036AE  0E00               	movlw	0
  7569  0036B0  0100               	movlb	0	; () banked
  7570  0036B2  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7571  0036B4  0E06               	movlw	6
  7572  0036B6  6F71               	movwf	set_white_pixel@x& (0+255),b
  7573  0036B8  0E00               	movlw	0
  7574  0036BA  0100               	movlb	0	; () banked
  7575  0036BC  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7576  0036BE  0E02               	movlw	2
  7577  0036C0  6F73               	movwf	set_white_pixel@y& (0+255),b
  7578  0036C2  EC50  F025         	call	_set_white_pixel	;wreg free
  7579                           
  7580                           ;led.c: 714: set_white_pixel(7,2);
  7581  0036C6  0E00               	movlw	0
  7582  0036C8  0100               	movlb	0	; () banked
  7583  0036CA  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7584  0036CC  0E07               	movlw	7
  7585  0036CE  6F71               	movwf	set_white_pixel@x& (0+255),b
  7586  0036D0  0E00               	movlw	0
  7587  0036D2  0100               	movlb	0	; () banked
  7588  0036D4  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7589  0036D6  0E02               	movlw	2
  7590  0036D8  6F73               	movwf	set_white_pixel@y& (0+255),b
  7591  0036DA  EC50  F025         	call	_set_white_pixel	;wreg free
  7592                           
  7593                           ;led.c: 715: set_white_pixel(8,2);
  7594  0036DE  0E00               	movlw	0
  7595  0036E0  0100               	movlb	0	; () banked
  7596  0036E2  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7597  0036E4  0E08               	movlw	8
  7598  0036E6  6F71               	movwf	set_white_pixel@x& (0+255),b
  7599  0036E8  0E00               	movlw	0
  7600  0036EA  0100               	movlb	0	; () banked
  7601  0036EC  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7602  0036EE  0E02               	movlw	2
  7603  0036F0  6F73               	movwf	set_white_pixel@y& (0+255),b
  7604  0036F2  EC50  F025         	call	_set_white_pixel	;wreg free
  7605                           
  7606                           ;led.c: 716: set_white_pixel(9,2);
  7607  0036F6  0E00               	movlw	0
  7608  0036F8  0100               	movlb	0	; () banked
  7609  0036FA  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7610  0036FC  0E09               	movlw	9
  7611  0036FE  6F71               	movwf	set_white_pixel@x& (0+255),b
  7612  003700  0E00               	movlw	0
  7613  003702  0100               	movlb	0	; () banked
  7614  003704  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7615  003706  0E02               	movlw	2
  7616  003708  6F73               	movwf	set_white_pixel@y& (0+255),b
  7617  00370A  EC50  F025         	call	_set_white_pixel	;wreg free
  7618                           
  7619                           ;led.c: 717: set_white_pixel(10,2);
  7620  00370E  0E00               	movlw	0
  7621  003710  0100               	movlb	0	; () banked
  7622  003712  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7623  003714  0E0A               	movlw	10
  7624  003716  6F71               	movwf	set_white_pixel@x& (0+255),b
  7625  003718  0E00               	movlw	0
  7626  00371A  0100               	movlb	0	; () banked
  7627  00371C  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7628  00371E  0E02               	movlw	2
  7629  003720  6F73               	movwf	set_white_pixel@y& (0+255),b
  7630  003722  EC50  F025         	call	_set_white_pixel	;wreg free
  7631                           
  7632                           ;led.c: 718: set_white_pixel(11,2);
  7633  003726  0E00               	movlw	0
  7634  003728  0100               	movlb	0	; () banked
  7635  00372A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7636  00372C  0E0B               	movlw	11
  7637  00372E  6F71               	movwf	set_white_pixel@x& (0+255),b
  7638  003730  0E00               	movlw	0
  7639  003732  0100               	movlb	0	; () banked
  7640  003734  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7641  003736  0E02               	movlw	2
  7642  003738  6F73               	movwf	set_white_pixel@y& (0+255),b
  7643  00373A  EC50  F025         	call	_set_white_pixel	;wreg free
  7644  00373E  0012               	return		;funcret
  7645  003740                     __end_of_set_twaalf_uur:
  7646                           	opt stack 0
  7647                           pclatu	equ	0xFFB
  7648                           pclath	equ	0xFFA
  7649                           tblptru	equ	0xFF8
  7650                           tblptrh	equ	0xFF7
  7651                           tblptrl	equ	0xFF6
  7652                           tablat	equ	0xFF5
  7653                           prodh	equ	0xFF4
  7654                           prodl	equ	0xFF3
  7655                           postinc0	equ	0xFEE
  7656                           fsr0h	equ	0xFEA
  7657                           fsr0l	equ	0xFE9
  7658                           wreg	equ	0xFE8
  7659                           postdec1	equ	0xFE5
  7660                           fsr1h	equ	0xFE2
  7661                           fsr1l	equ	0xFE1
  7662                           bsr	equ	0xFE0
  7663                           indf2	equ	0xFDF
  7664                           postinc2	equ	0xFDE
  7665                           postdec2	equ	0xFDD
  7666                           fsr2h	equ	0xFDA
  7667                           fsr2l	equ	0xFD9
  7668                           status	equ	0xFD8
  7669                           
  7670 ;; *************** function _set_twaalf_min *****************
  7671 ;; Defined at:
  7672 ;;		line 551 in file "led.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;		None
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7690 ;;Total ram usage:        0 bytes
  7691 ;; Hardware stack levels used:    1
  7692 ;; Hardware stack levels required when called:    7
  7693 ;; This function calls:
  7694 ;;		_set_white_pixel
  7695 ;; This function is called by:
  7696 ;;		_set_time_led
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text32
  7701  003740                     __ptext32:
  7702                           	opt stack 0
  7703  003740                     _set_twaalf_min:
  7704                           	opt stack 14
  7705                           
  7706                           ;led.c: 553: set_white_pixel(6,8);
  7707                           
  7708                           ;incstack = 0
  7709  003740  0E00               	movlw	0
  7710  003742  0100               	movlb	0	; () banked
  7711  003744  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7712  003746  0E06               	movlw	6
  7713  003748  6F71               	movwf	set_white_pixel@x& (0+255),b
  7714  00374A  0E00               	movlw	0
  7715  00374C  0100               	movlb	0	; () banked
  7716  00374E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7717  003750  0E08               	movlw	8
  7718  003752  6F73               	movwf	set_white_pixel@y& (0+255),b
  7719  003754  EC50  F025         	call	_set_white_pixel	;wreg free
  7720                           
  7721                           ;led.c: 554: set_white_pixel(7,8);
  7722  003758  0E00               	movlw	0
  7723  00375A  0100               	movlb	0	; () banked
  7724  00375C  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7725  00375E  0E07               	movlw	7
  7726  003760  6F71               	movwf	set_white_pixel@x& (0+255),b
  7727  003762  0E00               	movlw	0
  7728  003764  0100               	movlb	0	; () banked
  7729  003766  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7730  003768  0E08               	movlw	8
  7731  00376A  6F73               	movwf	set_white_pixel@y& (0+255),b
  7732  00376C  EC50  F025         	call	_set_white_pixel	;wreg free
  7733                           
  7734                           ;led.c: 555: set_white_pixel(8,8);
  7735  003770  0E00               	movlw	0
  7736  003772  0100               	movlb	0	; () banked
  7737  003774  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7738  003776  0E08               	movlw	8
  7739  003778  6F71               	movwf	set_white_pixel@x& (0+255),b
  7740  00377A  0E00               	movlw	0
  7741  00377C  0100               	movlb	0	; () banked
  7742  00377E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7743  003780  0E08               	movlw	8
  7744  003782  6F73               	movwf	set_white_pixel@y& (0+255),b
  7745  003784  EC50  F025         	call	_set_white_pixel	;wreg free
  7746                           
  7747                           ;led.c: 556: set_white_pixel(9,8);
  7748  003788  0E00               	movlw	0
  7749  00378A  0100               	movlb	0	; () banked
  7750  00378C  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7751  00378E  0E09               	movlw	9
  7752  003790  6F71               	movwf	set_white_pixel@x& (0+255),b
  7753  003792  0E00               	movlw	0
  7754  003794  0100               	movlb	0	; () banked
  7755  003796  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7756  003798  0E08               	movlw	8
  7757  00379A  6F73               	movwf	set_white_pixel@y& (0+255),b
  7758  00379C  EC50  F025         	call	_set_white_pixel	;wreg free
  7759                           
  7760                           ;led.c: 557: set_white_pixel(10,8);
  7761  0037A0  0E00               	movlw	0
  7762  0037A2  0100               	movlb	0	; () banked
  7763  0037A4  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7764  0037A6  0E0A               	movlw	10
  7765  0037A8  6F71               	movwf	set_white_pixel@x& (0+255),b
  7766  0037AA  0E00               	movlw	0
  7767  0037AC  0100               	movlb	0	; () banked
  7768  0037AE  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7769  0037B0  0E08               	movlw	8
  7770  0037B2  6F73               	movwf	set_white_pixel@y& (0+255),b
  7771  0037B4  EC50  F025         	call	_set_white_pixel	;wreg free
  7772                           
  7773                           ;led.c: 558: set_white_pixel(11,8);
  7774  0037B8  0E00               	movlw	0
  7775  0037BA  0100               	movlb	0	; () banked
  7776  0037BC  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  7777  0037BE  0E0B               	movlw	11
  7778  0037C0  6F71               	movwf	set_white_pixel@x& (0+255),b
  7779  0037C2  0E00               	movlw	0
  7780  0037C4  0100               	movlb	0	; () banked
  7781  0037C6  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  7782  0037C8  0E08               	movlw	8
  7783  0037CA  6F73               	movwf	set_white_pixel@y& (0+255),b
  7784  0037CC  EC50  F025         	call	_set_white_pixel	;wreg free
  7785  0037D0  0012               	return		;funcret
  7786  0037D2                     __end_of_set_twaalf_min:
  7787                           	opt stack 0
  7788                           pclatu	equ	0xFFB
  7789                           pclath	equ	0xFFA
  7790                           tblptru	equ	0xFF8
  7791                           tblptrh	equ	0xFF7
  7792                           tblptrl	equ	0xFF6
  7793                           tablat	equ	0xFF5
  7794                           prodh	equ	0xFF4
  7795                           prodl	equ	0xFF3
  7796                           postinc0	equ	0xFEE
  7797                           fsr0h	equ	0xFEA
  7798                           fsr0l	equ	0xFE9
  7799                           wreg	equ	0xFE8
  7800                           postdec1	equ	0xFE5
  7801                           fsr1h	equ	0xFE2
  7802                           fsr1l	equ	0xFE1
  7803                           bsr	equ	0xFE0
  7804                           indf2	equ	0xFDF
  7805                           postinc2	equ	0xFDE
  7806                           postdec2	equ	0xFDD
  7807                           fsr2h	equ	0xFDA
  7808                           fsr2l	equ	0xFD9
  7809                           status	equ	0xFD8
  7810                           
  7811 ;; *************** function _set_trou *****************
  7812 ;; Defined at:
  7813 ;;		line 759 in file "led.c"
  7814 ;; Parameters:    Size  Location     Type
  7815 ;;		None
  7816 ;; Auto vars:     Size  Location     Type
  7817 ;;  clr             3   17[BANK0 ] struct .
  7818 ;; Return value:  Size  Location     Type
  7819 ;;                  1    wreg      void 
  7820 ;; Registers used:
  7821 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7822 ;; Tracked objects:
  7823 ;;		On entry : 0/0
  7824 ;;		On exit  : 0/0
  7825 ;;		Unchanged: 0/0
  7826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7828 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7829 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7830 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7831 ;;Total ram usage:        3 bytes
  7832 ;; Hardware stack levels used:    1
  7833 ;; Hardware stack levels required when called:    6
  7834 ;; This function calls:
  7835 ;;		_get_random_color
  7836 ;;		_set_pixel
  7837 ;; This function is called by:
  7838 ;;		_set_time_led
  7839 ;; This function uses a non-reentrant model
  7840 ;;
  7841                           
  7842                           	psect	text33
  7843  0034D6                     __ptext33:
  7844                           	opt stack 0
  7845  0034D6                     _set_trou:
  7846                           	opt stack 15
  7847                           
  7848                           ;led.c: 761: RGBLED clr;
  7849                           ;led.c: 762: get_random_color(&clr);
  7850                           
  7851                           ;incstack = 0
  7852  0034D6  0E71               	movlw	low set_trou@clr
  7853  0034D8  0100               	movlb	0	; () banked
  7854  0034DA  6F6A               	movwf	get_random_color@clr& (0+255),b
  7855  0034DC  0E00               	movlw	high set_trou@clr
  7856  0034DE  0100               	movlb	0	; () banked
  7857  0034E0  6F6B               	movwf	(get_random_color@clr+1)& (0+255),b
  7858  0034E2  EC0B  F01D         	call	_get_random_color	;wreg free
  7859                           
  7860                           ;led.c: 764: set_pixel(3, 6, &clr);
  7861  0034E6  0E00               	movlw	0
  7862  0034E8  0100               	movlb	0	; () banked
  7863  0034EA  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  7864  0034EC  0E03               	movlw	3
  7865  0034EE  6F6B               	movwf	set_pixel@x& (0+255),b
  7866  0034F0  0E00               	movlw	0
  7867  0034F2  0100               	movlb	0	; () banked
  7868  0034F4  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  7869  0034F6  0E06               	movlw	6
  7870  0034F8  6F6D               	movwf	set_pixel@y& (0+255),b
  7871  0034FA  0E71               	movlw	low set_trou@clr
  7872  0034FC  0100               	movlb	0	; () banked
  7873  0034FE  6F6F               	movwf	set_pixel@clr& (0+255),b
  7874  003500  0E00               	movlw	high set_trou@clr
  7875  003502  0100               	movlb	0	; () banked
  7876  003504  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  7877  003506  EC7B  F01C         	call	_set_pixel	;wreg free
  7878                           
  7879                           ;led.c: 765: set_pixel(4, 6, &clr);
  7880  00350A  0E00               	movlw	0
  7881  00350C  0100               	movlb	0	; () banked
  7882  00350E  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  7883  003510  0E04               	movlw	4
  7884  003512  6F6B               	movwf	set_pixel@x& (0+255),b
  7885  003514  0E00               	movlw	0
  7886  003516  0100               	movlb	0	; () banked
  7887  003518  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  7888  00351A  0E06               	movlw	6
  7889  00351C  6F6D               	movwf	set_pixel@y& (0+255),b
  7890  00351E  0E71               	movlw	low set_trou@clr
  7891  003520  0100               	movlb	0	; () banked
  7892  003522  6F6F               	movwf	set_pixel@clr& (0+255),b
  7893  003524  0E00               	movlw	high set_trou@clr
  7894  003526  0100               	movlb	0	; () banked
  7895  003528  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  7896  00352A  EC7B  F01C         	call	_set_pixel	;wreg free
  7897                           
  7898                           ;led.c: 766: set_pixel(5, 6, &clr);
  7899  00352E  0E00               	movlw	0
  7900  003530  0100               	movlb	0	; () banked
  7901  003532  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  7902  003534  0E05               	movlw	5
  7903  003536  6F6B               	movwf	set_pixel@x& (0+255),b
  7904  003538  0E00               	movlw	0
  7905  00353A  0100               	movlb	0	; () banked
  7906  00353C  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  7907  00353E  0E06               	movlw	6
  7908  003540  6F6D               	movwf	set_pixel@y& (0+255),b
  7909  003542  0E71               	movlw	low set_trou@clr
  7910  003544  0100               	movlb	0	; () banked
  7911  003546  6F6F               	movwf	set_pixel@clr& (0+255),b
  7912  003548  0E00               	movlw	high set_trou@clr
  7913  00354A  0100               	movlb	0	; () banked
  7914  00354C  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  7915  00354E  EC7B  F01C         	call	_set_pixel	;wreg free
  7916                           
  7917                           ;led.c: 767: set_pixel(6, 6, &clr);
  7918  003552  0E00               	movlw	0
  7919  003554  0100               	movlb	0	; () banked
  7920  003556  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  7921  003558  0E06               	movlw	6
  7922  00355A  6F6B               	movwf	set_pixel@x& (0+255),b
  7923  00355C  0E00               	movlw	0
  7924  00355E  0100               	movlb	0	; () banked
  7925  003560  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  7926  003562  0E06               	movlw	6
  7927  003564  6F6D               	movwf	set_pixel@y& (0+255),b
  7928  003566  0E71               	movlw	low set_trou@clr
  7929  003568  0100               	movlb	0	; () banked
  7930  00356A  6F6F               	movwf	set_pixel@clr& (0+255),b
  7931  00356C  0E00               	movlw	high set_trou@clr
  7932  00356E  0100               	movlb	0	; () banked
  7933  003570  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  7934  003572  EC7B  F01C         	call	_set_pixel	;wreg free
  7935  003576  0012               	return		;funcret
  7936  003578                     __end_of_set_trou:
  7937                           	opt stack 0
  7938                           pclatu	equ	0xFFB
  7939                           pclath	equ	0xFFA
  7940                           tblptru	equ	0xFF8
  7941                           tblptrh	equ	0xFF7
  7942                           tblptrl	equ	0xFF6
  7943                           tablat	equ	0xFF5
  7944                           prodh	equ	0xFF4
  7945                           prodl	equ	0xFF3
  7946                           postinc0	equ	0xFEE
  7947                           fsr0h	equ	0xFEA
  7948                           fsr0l	equ	0xFE9
  7949                           wreg	equ	0xFE8
  7950                           postdec1	equ	0xFE5
  7951                           fsr1h	equ	0xFE2
  7952                           fsr1l	equ	0xFE1
  7953                           bsr	equ	0xFE0
  7954                           indf2	equ	0xFDF
  7955                           postinc2	equ	0xFDE
  7956                           postdec2	equ	0xFDD
  7957                           fsr2h	equ	0xFDA
  7958                           fsr2l	equ	0xFD9
  7959                           status	equ	0xFD8
  7960                           
  7961 ;; *************** function _set_tien_uur *****************
  7962 ;; Defined at:
  7963 ;;		line 696 in file "led.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;		None
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;		None
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  1    wreg      void 
  7970 ;; Registers used:
  7971 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 0/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7977 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7978 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7979 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7980 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7981 ;;Total ram usage:        0 bytes
  7982 ;; Hardware stack levels used:    1
  7983 ;; Hardware stack levels required when called:    7
  7984 ;; This function calls:
  7985 ;;		_set_white_pixel
  7986 ;; This function is called by:
  7987 ;;		_set_time_led
  7988 ;; This function uses a non-reentrant model
  7989 ;;
  7990                           
  7991                           	psect	text34
  7992  003F44                     __ptext34:
  7993                           	opt stack 0
  7994  003F44                     _set_tien_uur:
  7995                           	opt stack 14
  7996                           
  7997                           ;led.c: 698: set_white_pixel(9,1);
  7998                           
  7999                           ;incstack = 0
  8000  003F44  0E00               	movlw	0
  8001  003F46  0100               	movlb	0	; () banked
  8002  003F48  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8003  003F4A  0E09               	movlw	9
  8004  003F4C  6F71               	movwf	set_white_pixel@x& (0+255),b
  8005  003F4E  0E00               	movlw	0
  8006  003F50  0100               	movlb	0	; () banked
  8007  003F52  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8008  003F54  0E01               	movlw	1
  8009  003F56  6F73               	movwf	set_white_pixel@y& (0+255),b
  8010  003F58  EC50  F025         	call	_set_white_pixel	;wreg free
  8011                           
  8012                           ;led.c: 699: set_white_pixel(10,1);
  8013  003F5C  0E00               	movlw	0
  8014  003F5E  0100               	movlb	0	; () banked
  8015  003F60  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8016  003F62  0E0A               	movlw	10
  8017  003F64  6F71               	movwf	set_white_pixel@x& (0+255),b
  8018  003F66  0E00               	movlw	0
  8019  003F68  0100               	movlb	0	; () banked
  8020  003F6A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8021  003F6C  0E01               	movlw	1
  8022  003F6E  6F73               	movwf	set_white_pixel@y& (0+255),b
  8023  003F70  EC50  F025         	call	_set_white_pixel	;wreg free
  8024                           
  8025                           ;led.c: 700: set_white_pixel(11,1);
  8026  003F74  0E00               	movlw	0
  8027  003F76  0100               	movlb	0	; () banked
  8028  003F78  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8029  003F7A  0E0B               	movlw	11
  8030  003F7C  6F71               	movwf	set_white_pixel@x& (0+255),b
  8031  003F7E  0E00               	movlw	0
  8032  003F80  0100               	movlb	0	; () banked
  8033  003F82  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8034  003F84  0E01               	movlw	1
  8035  003F86  6F73               	movwf	set_white_pixel@y& (0+255),b
  8036  003F88  EC50  F025         	call	_set_white_pixel	;wreg free
  8037                           
  8038                           ;led.c: 701: set_white_pixel(12,1);
  8039  003F8C  0E00               	movlw	0
  8040  003F8E  0100               	movlb	0	; () banked
  8041  003F90  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8042  003F92  0E0C               	movlw	12
  8043  003F94  6F71               	movwf	set_white_pixel@x& (0+255),b
  8044  003F96  0E00               	movlw	0
  8045  003F98  0100               	movlb	0	; () banked
  8046  003F9A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8047  003F9C  0E01               	movlw	1
  8048  003F9E  6F73               	movwf	set_white_pixel@y& (0+255),b
  8049  003FA0  EC50  F025         	call	_set_white_pixel	;wreg free
  8050  003FA4  0012               	return		;funcret
  8051  003FA6                     __end_of_set_tien_uur:
  8052                           	opt stack 0
  8053                           pclatu	equ	0xFFB
  8054                           pclath	equ	0xFFA
  8055                           tblptru	equ	0xFF8
  8056                           tblptrh	equ	0xFF7
  8057                           tblptrl	equ	0xFF6
  8058                           tablat	equ	0xFF5
  8059                           prodh	equ	0xFF4
  8060                           prodl	equ	0xFF3
  8061                           postinc0	equ	0xFEE
  8062                           fsr0h	equ	0xFEA
  8063                           fsr0l	equ	0xFE9
  8064                           wreg	equ	0xFE8
  8065                           postdec1	equ	0xFE5
  8066                           fsr1h	equ	0xFE2
  8067                           fsr1l	equ	0xFE1
  8068                           bsr	equ	0xFE0
  8069                           indf2	equ	0xFDF
  8070                           postinc2	equ	0xFDE
  8071                           postdec2	equ	0xFDD
  8072                           fsr2h	equ	0xFDA
  8073                           fsr2l	equ	0xFD9
  8074                           status	equ	0xFD8
  8075                           
  8076 ;; *************** function _set_tien_min *****************
  8077 ;; Defined at:
  8078 ;;		line 527 in file "led.c"
  8079 ;; Parameters:    Size  Location     Type
  8080 ;;		None
  8081 ;; Auto vars:     Size  Location     Type
  8082 ;;		None
  8083 ;; Return value:  Size  Location     Type
  8084 ;;                  1    wreg      void 
  8085 ;; Registers used:
  8086 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8087 ;; Tracked objects:
  8088 ;;		On entry : 0/0
  8089 ;;		On exit  : 0/0
  8090 ;;		Unchanged: 0/0
  8091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8092 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8093 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8094 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8095 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8096 ;;Total ram usage:        0 bytes
  8097 ;; Hardware stack levels used:    1
  8098 ;; Hardware stack levels required when called:    7
  8099 ;; This function calls:
  8100 ;;		_set_white_pixel
  8101 ;; This function is called by:
  8102 ;;		_set_time_led
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           	psect	text35
  8107  003FA6                     __ptext35:
  8108                           	opt stack 0
  8109  003FA6                     _set_tien_min:
  8110                           	opt stack 14
  8111                           
  8112                           ;led.c: 529: set_white_pixel(13,8);
  8113                           
  8114                           ;incstack = 0
  8115  003FA6  0E00               	movlw	0
  8116  003FA8  0100               	movlb	0	; () banked
  8117  003FAA  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8118  003FAC  0E0D               	movlw	13
  8119  003FAE  6F71               	movwf	set_white_pixel@x& (0+255),b
  8120  003FB0  0E00               	movlw	0
  8121  003FB2  0100               	movlb	0	; () banked
  8122  003FB4  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8123  003FB6  0E08               	movlw	8
  8124  003FB8  6F73               	movwf	set_white_pixel@y& (0+255),b
  8125  003FBA  EC50  F025         	call	_set_white_pixel	;wreg free
  8126                           
  8127                           ;led.c: 530: set_white_pixel(14,8);
  8128  003FBE  0E00               	movlw	0
  8129  003FC0  0100               	movlb	0	; () banked
  8130  003FC2  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8131  003FC4  0E0E               	movlw	14
  8132  003FC6  6F71               	movwf	set_white_pixel@x& (0+255),b
  8133  003FC8  0E00               	movlw	0
  8134  003FCA  0100               	movlb	0	; () banked
  8135  003FCC  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8136  003FCE  0E08               	movlw	8
  8137  003FD0  6F73               	movwf	set_white_pixel@y& (0+255),b
  8138  003FD2  EC50  F025         	call	_set_white_pixel	;wreg free
  8139                           
  8140                           ;led.c: 531: set_white_pixel(15,8);
  8141  003FD6  0E00               	movlw	0
  8142  003FD8  0100               	movlb	0	; () banked
  8143  003FDA  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8144  003FDC  0E0F               	movlw	15
  8145  003FDE  6F71               	movwf	set_white_pixel@x& (0+255),b
  8146  003FE0  0E00               	movlw	0
  8147  003FE2  0100               	movlb	0	; () banked
  8148  003FE4  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8149  003FE6  0E08               	movlw	8
  8150  003FE8  6F73               	movwf	set_white_pixel@y& (0+255),b
  8151  003FEA  EC50  F025         	call	_set_white_pixel	;wreg free
  8152                           
  8153                           ;led.c: 532: set_white_pixel(16,8);
  8154  003FEE  0E00               	movlw	0
  8155  003FF0  0100               	movlb	0	; () banked
  8156  003FF2  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8157  003FF4  0E10               	movlw	16
  8158  003FF6  6F71               	movwf	set_white_pixel@x& (0+255),b
  8159  003FF8  0E00               	movlw	0
  8160  003FFA  0100               	movlb	0	; () banked
  8161  003FFC  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8162  003FFE  0E08               	movlw	8
  8163  004000  6F73               	movwf	set_white_pixel@y& (0+255),b
  8164  004002  EC50  F025         	call	_set_white_pixel	;wreg free
  8165  004006  0012               	return		;funcret
  8166  004008                     __end_of_set_tien_min:
  8167                           	opt stack 0
  8168                           pclatu	equ	0xFFB
  8169                           pclath	equ	0xFFA
  8170                           tblptru	equ	0xFF8
  8171                           tblptrh	equ	0xFF7
  8172                           tblptrl	equ	0xFF6
  8173                           tablat	equ	0xFF5
  8174                           prodh	equ	0xFF4
  8175                           prodl	equ	0xFF3
  8176                           postinc0	equ	0xFEE
  8177                           fsr0h	equ	0xFEA
  8178                           fsr0l	equ	0xFE9
  8179                           wreg	equ	0xFE8
  8180                           postdec1	equ	0xFE5
  8181                           fsr1h	equ	0xFE2
  8182                           fsr1l	equ	0xFE1
  8183                           bsr	equ	0xFE0
  8184                           indf2	equ	0xFDF
  8185                           postinc2	equ	0xFDE
  8186                           postdec2	equ	0xFDD
  8187                           fsr2h	equ	0xFDA
  8188                           fsr2l	equ	0xFD9
  8189                           status	equ	0xFD8
  8190                           
  8191 ;; *************** function _set_sewe_uur *****************
  8192 ;; Defined at:
  8193 ;;		line 673 in file "led.c"
  8194 ;; Parameters:    Size  Location     Type
  8195 ;;		None
  8196 ;; Auto vars:     Size  Location     Type
  8197 ;;		None
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  1    wreg      void 
  8200 ;; Registers used:
  8201 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8207 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8208 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8209 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8210 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8211 ;;Total ram usage:        0 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    7
  8214 ;; This function calls:
  8215 ;;		_set_white_pixel
  8216 ;; This function is called by:
  8217 ;;		_set_time_led
  8218 ;; This function uses a non-reentrant model
  8219 ;;
  8220                           
  8221                           	psect	text36
  8222  004008                     __ptext36:
  8223                           	opt stack 0
  8224  004008                     _set_sewe_uur:
  8225                           	opt stack 14
  8226                           
  8227                           ;led.c: 675: set_white_pixel(9,3);
  8228                           
  8229                           ;incstack = 0
  8230  004008  0E00               	movlw	0
  8231  00400A  0100               	movlb	0	; () banked
  8232  00400C  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8233  00400E  0E09               	movlw	9
  8234  004010  6F71               	movwf	set_white_pixel@x& (0+255),b
  8235  004012  0E00               	movlw	0
  8236  004014  0100               	movlb	0	; () banked
  8237  004016  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8238  004018  0E03               	movlw	3
  8239  00401A  6F73               	movwf	set_white_pixel@y& (0+255),b
  8240  00401C  EC50  F025         	call	_set_white_pixel	;wreg free
  8241                           
  8242                           ;led.c: 676: set_white_pixel(10,3);
  8243  004020  0E00               	movlw	0
  8244  004022  0100               	movlb	0	; () banked
  8245  004024  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8246  004026  0E0A               	movlw	10
  8247  004028  6F71               	movwf	set_white_pixel@x& (0+255),b
  8248  00402A  0E00               	movlw	0
  8249  00402C  0100               	movlb	0	; () banked
  8250  00402E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8251  004030  0E03               	movlw	3
  8252  004032  6F73               	movwf	set_white_pixel@y& (0+255),b
  8253  004034  EC50  F025         	call	_set_white_pixel	;wreg free
  8254                           
  8255                           ;led.c: 677: set_white_pixel(11,3);
  8256  004038  0E00               	movlw	0
  8257  00403A  0100               	movlb	0	; () banked
  8258  00403C  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8259  00403E  0E0B               	movlw	11
  8260  004040  6F71               	movwf	set_white_pixel@x& (0+255),b
  8261  004042  0E00               	movlw	0
  8262  004044  0100               	movlb	0	; () banked
  8263  004046  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8264  004048  0E03               	movlw	3
  8265  00404A  6F73               	movwf	set_white_pixel@y& (0+255),b
  8266  00404C  EC50  F025         	call	_set_white_pixel	;wreg free
  8267                           
  8268                           ;led.c: 678: set_white_pixel(12,3);
  8269  004050  0E00               	movlw	0
  8270  004052  0100               	movlb	0	; () banked
  8271  004054  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8272  004056  0E0C               	movlw	12
  8273  004058  6F71               	movwf	set_white_pixel@x& (0+255),b
  8274  00405A  0E00               	movlw	0
  8275  00405C  0100               	movlb	0	; () banked
  8276  00405E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8277  004060  0E03               	movlw	3
  8278  004062  6F73               	movwf	set_white_pixel@y& (0+255),b
  8279  004064  EC50  F025         	call	_set_white_pixel	;wreg free
  8280  004068  0012               	return		;funcret
  8281  00406A                     __end_of_set_sewe_uur:
  8282                           	opt stack 0
  8283                           pclatu	equ	0xFFB
  8284                           pclath	equ	0xFFA
  8285                           tblptru	equ	0xFF8
  8286                           tblptrh	equ	0xFF7
  8287                           tblptrl	equ	0xFF6
  8288                           tablat	equ	0xFF5
  8289                           prodh	equ	0xFF4
  8290                           prodl	equ	0xFF3
  8291                           postinc0	equ	0xFEE
  8292                           fsr0h	equ	0xFEA
  8293                           fsr0l	equ	0xFE9
  8294                           wreg	equ	0xFE8
  8295                           postdec1	equ	0xFE5
  8296                           fsr1h	equ	0xFE2
  8297                           fsr1l	equ	0xFE1
  8298                           bsr	equ	0xFE0
  8299                           indf2	equ	0xFDF
  8300                           postinc2	equ	0xFDE
  8301                           postdec2	equ	0xFDD
  8302                           fsr2h	equ	0xFDA
  8303                           fsr2l	equ	0xFD9
  8304                           status	equ	0xFD8
  8305                           
  8306 ;; *************** function _set_sewe_min *****************
  8307 ;; Defined at:
  8308 ;;		line 504 in file "led.c"
  8309 ;; Parameters:    Size  Location     Type
  8310 ;;		None
  8311 ;; Auto vars:     Size  Location     Type
  8312 ;;		None
  8313 ;; Return value:  Size  Location     Type
  8314 ;;                  1    wreg      void 
  8315 ;; Registers used:
  8316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8317 ;; Tracked objects:
  8318 ;;		On entry : 0/0
  8319 ;;		On exit  : 0/0
  8320 ;;		Unchanged: 0/0
  8321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8326 ;;Total ram usage:        0 bytes
  8327 ;; Hardware stack levels used:    1
  8328 ;; Hardware stack levels required when called:    7
  8329 ;; This function calls:
  8330 ;;		_set_white_pixel
  8331 ;; This function is called by:
  8332 ;;		_set_time_led
  8333 ;; This function uses a non-reentrant model
  8334 ;;
  8335                           
  8336                           	psect	text37
  8337  00406A                     __ptext37:
  8338                           	opt stack 0
  8339  00406A                     _set_sewe_min:
  8340                           	opt stack 14
  8341                           
  8342                           ;led.c: 506: set_white_pixel(7,10);
  8343                           
  8344                           ;incstack = 0
  8345  00406A  0E00               	movlw	0
  8346  00406C  0100               	movlb	0	; () banked
  8347  00406E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8348  004070  0E07               	movlw	7
  8349  004072  6F71               	movwf	set_white_pixel@x& (0+255),b
  8350  004074  0E00               	movlw	0
  8351  004076  0100               	movlb	0	; () banked
  8352  004078  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8353  00407A  0E0A               	movlw	10
  8354  00407C  6F73               	movwf	set_white_pixel@y& (0+255),b
  8355  00407E  EC50  F025         	call	_set_white_pixel	;wreg free
  8356                           
  8357                           ;led.c: 507: set_white_pixel(8,10);
  8358  004082  0E00               	movlw	0
  8359  004084  0100               	movlb	0	; () banked
  8360  004086  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8361  004088  0E08               	movlw	8
  8362  00408A  6F71               	movwf	set_white_pixel@x& (0+255),b
  8363  00408C  0E00               	movlw	0
  8364  00408E  0100               	movlb	0	; () banked
  8365  004090  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8366  004092  0E0A               	movlw	10
  8367  004094  6F73               	movwf	set_white_pixel@y& (0+255),b
  8368  004096  EC50  F025         	call	_set_white_pixel	;wreg free
  8369                           
  8370                           ;led.c: 508: set_white_pixel(9,10);
  8371  00409A  0E00               	movlw	0
  8372  00409C  0100               	movlb	0	; () banked
  8373  00409E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8374  0040A0  0E09               	movlw	9
  8375  0040A2  6F71               	movwf	set_white_pixel@x& (0+255),b
  8376  0040A4  0E00               	movlw	0
  8377  0040A6  0100               	movlb	0	; () banked
  8378  0040A8  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8379  0040AA  0E0A               	movlw	10
  8380  0040AC  6F73               	movwf	set_white_pixel@y& (0+255),b
  8381  0040AE  EC50  F025         	call	_set_white_pixel	;wreg free
  8382                           
  8383                           ;led.c: 509: set_white_pixel(10,10);
  8384  0040B2  0E00               	movlw	0
  8385  0040B4  0100               	movlb	0	; () banked
  8386  0040B6  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8387  0040B8  0E0A               	movlw	10
  8388  0040BA  6F71               	movwf	set_white_pixel@x& (0+255),b
  8389  0040BC  0E00               	movlw	0
  8390  0040BE  0100               	movlb	0	; () banked
  8391  0040C0  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8392  0040C2  0E0A               	movlw	10
  8393  0040C4  6F73               	movwf	set_white_pixel@y& (0+255),b
  8394  0040C6  EC50  F025         	call	_set_white_pixel	;wreg free
  8395  0040CA  0012               	return		;funcret
  8396  0040CC                     __end_of_set_sewe_min:
  8397                           	opt stack 0
  8398                           pclatu	equ	0xFFB
  8399                           pclath	equ	0xFFA
  8400                           tblptru	equ	0xFF8
  8401                           tblptrh	equ	0xFF7
  8402                           tblptrl	equ	0xFF6
  8403                           tablat	equ	0xFF5
  8404                           prodh	equ	0xFF4
  8405                           prodl	equ	0xFF3
  8406                           postinc0	equ	0xFEE
  8407                           fsr0h	equ	0xFEA
  8408                           fsr0l	equ	0xFE9
  8409                           wreg	equ	0xFE8
  8410                           postdec1	equ	0xFE5
  8411                           fsr1h	equ	0xFE2
  8412                           fsr1l	equ	0xFE1
  8413                           bsr	equ	0xFE0
  8414                           indf2	equ	0xFDF
  8415                           postinc2	equ	0xFDE
  8416                           postdec2	equ	0xFDD
  8417                           fsr2h	equ	0xFDA
  8418                           fsr2l	equ	0xFD9
  8419                           status	equ	0xFD8
  8420                           
  8421 ;; *************** function _set_ses_uur *****************
  8422 ;; Defined at:
  8423 ;;		line 666 in file "led.c"
  8424 ;; Parameters:    Size  Location     Type
  8425 ;;		None
  8426 ;; Auto vars:     Size  Location     Type
  8427 ;;		None
  8428 ;; Return value:  Size  Location     Type
  8429 ;;                  1    wreg      void 
  8430 ;; Registers used:
  8431 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8432 ;; Tracked objects:
  8433 ;;		On entry : 0/0
  8434 ;;		On exit  : 0/0
  8435 ;;		Unchanged: 0/0
  8436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8437 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8438 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8439 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8440 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8441 ;;Total ram usage:        0 bytes
  8442 ;; Hardware stack levels used:    1
  8443 ;; Hardware stack levels required when called:    7
  8444 ;; This function calls:
  8445 ;;		_set_white_pixel
  8446 ;; This function is called by:
  8447 ;;		_set_time_led
  8448 ;; This function uses a non-reentrant model
  8449 ;;
  8450                           
  8451                           	psect	text38
  8452  00459A                     __ptext38:
  8453                           	opt stack 0
  8454  00459A                     _set_ses_uur:
  8455                           	opt stack 14
  8456                           
  8457                           ;led.c: 668: set_white_pixel(7,3);
  8458                           
  8459                           ;incstack = 0
  8460  00459A  0E00               	movlw	0
  8461  00459C  0100               	movlb	0	; () banked
  8462  00459E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8463  0045A0  0E07               	movlw	7
  8464  0045A2  6F71               	movwf	set_white_pixel@x& (0+255),b
  8465  0045A4  0E00               	movlw	0
  8466  0045A6  0100               	movlb	0	; () banked
  8467  0045A8  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8468  0045AA  0E03               	movlw	3
  8469  0045AC  6F73               	movwf	set_white_pixel@y& (0+255),b
  8470  0045AE  EC50  F025         	call	_set_white_pixel	;wreg free
  8471                           
  8472                           ;led.c: 669: set_white_pixel(8,3);
  8473  0045B2  0E00               	movlw	0
  8474  0045B4  0100               	movlb	0	; () banked
  8475  0045B6  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8476  0045B8  0E08               	movlw	8
  8477  0045BA  6F71               	movwf	set_white_pixel@x& (0+255),b
  8478  0045BC  0E00               	movlw	0
  8479  0045BE  0100               	movlb	0	; () banked
  8480  0045C0  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8481  0045C2  0E03               	movlw	3
  8482  0045C4  6F73               	movwf	set_white_pixel@y& (0+255),b
  8483  0045C6  EC50  F025         	call	_set_white_pixel	;wreg free
  8484                           
  8485                           ;led.c: 670: set_white_pixel(9,3);
  8486  0045CA  0E00               	movlw	0
  8487  0045CC  0100               	movlb	0	; () banked
  8488  0045CE  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8489  0045D0  0E09               	movlw	9
  8490  0045D2  6F71               	movwf	set_white_pixel@x& (0+255),b
  8491  0045D4  0E00               	movlw	0
  8492  0045D6  0100               	movlb	0	; () banked
  8493  0045D8  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8494  0045DA  0E03               	movlw	3
  8495  0045DC  6F73               	movwf	set_white_pixel@y& (0+255),b
  8496  0045DE  EC50  F025         	call	_set_white_pixel	;wreg free
  8497  0045E2  0012               	return		;funcret
  8498  0045E4                     __end_of_set_ses_uur:
  8499                           	opt stack 0
  8500                           pclatu	equ	0xFFB
  8501                           pclath	equ	0xFFA
  8502                           tblptru	equ	0xFF8
  8503                           tblptrh	equ	0xFF7
  8504                           tblptrl	equ	0xFF6
  8505                           tablat	equ	0xFF5
  8506                           prodh	equ	0xFF4
  8507                           prodl	equ	0xFF3
  8508                           postinc0	equ	0xFEE
  8509                           fsr0h	equ	0xFEA
  8510                           fsr0l	equ	0xFE9
  8511                           wreg	equ	0xFE8
  8512                           postdec1	equ	0xFE5
  8513                           fsr1h	equ	0xFE2
  8514                           fsr1l	equ	0xFE1
  8515                           bsr	equ	0xFE0
  8516                           indf2	equ	0xFDF
  8517                           postinc2	equ	0xFDE
  8518                           postdec2	equ	0xFDD
  8519                           fsr2h	equ	0xFDA
  8520                           fsr2l	equ	0xFD9
  8521                           status	equ	0xFD8
  8522                           
  8523 ;; *************** function _set_ses_min *****************
  8524 ;; Defined at:
  8525 ;;		line 497 in file "led.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;		None
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;		None
  8530 ;; Return value:  Size  Location     Type
  8531 ;;                  1    wreg      void 
  8532 ;; Registers used:
  8533 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8534 ;; Tracked objects:
  8535 ;;		On entry : 0/0
  8536 ;;		On exit  : 0/0
  8537 ;;		Unchanged: 0/0
  8538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8539 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8542 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8543 ;;Total ram usage:        0 bytes
  8544 ;; Hardware stack levels used:    1
  8545 ;; Hardware stack levels required when called:    7
  8546 ;; This function calls:
  8547 ;;		_set_white_pixel
  8548 ;; This function is called by:
  8549 ;;		_set_time_led
  8550 ;; This function uses a non-reentrant model
  8551 ;;
  8552                           
  8553                           	psect	text39
  8554  0045E4                     __ptext39:
  8555                           	opt stack 0
  8556  0045E4                     _set_ses_min:
  8557                           	opt stack 14
  8558                           
  8559                           ;led.c: 499: set_white_pixel(5,10);
  8560                           
  8561                           ;incstack = 0
  8562  0045E4  0E00               	movlw	0
  8563  0045E6  0100               	movlb	0	; () banked
  8564  0045E8  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8565  0045EA  0E05               	movlw	5
  8566  0045EC  6F71               	movwf	set_white_pixel@x& (0+255),b
  8567  0045EE  0E00               	movlw	0
  8568  0045F0  0100               	movlb	0	; () banked
  8569  0045F2  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8570  0045F4  0E0A               	movlw	10
  8571  0045F6  6F73               	movwf	set_white_pixel@y& (0+255),b
  8572  0045F8  EC50  F025         	call	_set_white_pixel	;wreg free
  8573                           
  8574                           ;led.c: 500: set_white_pixel(6,10);
  8575  0045FC  0E00               	movlw	0
  8576  0045FE  0100               	movlb	0	; () banked
  8577  004600  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8578  004602  0E06               	movlw	6
  8579  004604  6F71               	movwf	set_white_pixel@x& (0+255),b
  8580  004606  0E00               	movlw	0
  8581  004608  0100               	movlb	0	; () banked
  8582  00460A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8583  00460C  0E0A               	movlw	10
  8584  00460E  6F73               	movwf	set_white_pixel@y& (0+255),b
  8585  004610  EC50  F025         	call	_set_white_pixel	;wreg free
  8586                           
  8587                           ;led.c: 501: set_white_pixel(7,10);
  8588  004614  0E00               	movlw	0
  8589  004616  0100               	movlb	0	; () banked
  8590  004618  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8591  00461A  0E07               	movlw	7
  8592  00461C  6F71               	movwf	set_white_pixel@x& (0+255),b
  8593  00461E  0E00               	movlw	0
  8594  004620  0100               	movlb	0	; () banked
  8595  004622  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8596  004624  0E0A               	movlw	10
  8597  004626  6F73               	movwf	set_white_pixel@y& (0+255),b
  8598  004628  EC50  F025         	call	_set_white_pixel	;wreg free
  8599  00462C  0012               	return		;funcret
  8600  00462E                     __end_of_set_ses_min:
  8601                           	opt stack 0
  8602                           pclatu	equ	0xFFB
  8603                           pclath	equ	0xFFA
  8604                           tblptru	equ	0xFF8
  8605                           tblptrh	equ	0xFF7
  8606                           tblptrl	equ	0xFF6
  8607                           tablat	equ	0xFF5
  8608                           prodh	equ	0xFF4
  8609                           prodl	equ	0xFF3
  8610                           postinc0	equ	0xFEE
  8611                           fsr0h	equ	0xFEA
  8612                           fsr0l	equ	0xFE9
  8613                           wreg	equ	0xFE8
  8614                           postdec1	equ	0xFE5
  8615                           fsr1h	equ	0xFE2
  8616                           fsr1l	equ	0xFE1
  8617                           bsr	equ	0xFE0
  8618                           indf2	equ	0xFDF
  8619                           postinc2	equ	0xFDE
  8620                           postdec2	equ	0xFDD
  8621                           fsr2h	equ	0xFDA
  8622                           fsr2l	equ	0xFD9
  8623                           status	equ	0xFD8
  8624                           
  8625 ;; *************** function _set_oor *****************
  8626 ;; Defined at:
  8627 ;;		line 621 in file "led.c"
  8628 ;; Parameters:    Size  Location     Type
  8629 ;;		None
  8630 ;; Auto vars:     Size  Location     Type
  8631 ;;		None
  8632 ;; Return value:  Size  Location     Type
  8633 ;;                  1    wreg      void 
  8634 ;; Registers used:
  8635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8636 ;; Tracked objects:
  8637 ;;		On entry : 0/0
  8638 ;;		On exit  : 0/0
  8639 ;;		Unchanged: 0/0
  8640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8641 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8642 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8643 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8644 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8645 ;;Total ram usage:        0 bytes
  8646 ;; Hardware stack levels used:    1
  8647 ;; Hardware stack levels required when called:    7
  8648 ;; This function calls:
  8649 ;;		_set_white_pixel
  8650 ;; This function is called by:
  8651 ;;		_set_time_led
  8652 ;; This function uses a non-reentrant model
  8653 ;;
  8654                           
  8655                           	psect	text40
  8656  00462E                     __ptext40:
  8657                           	opt stack 0
  8658  00462E                     _set_oor:
  8659                           	opt stack 14
  8660                           
  8661                           ;led.c: 623: set_white_pixel(8,4);
  8662                           
  8663                           ;incstack = 0
  8664  00462E  0E00               	movlw	0
  8665  004630  0100               	movlb	0	; () banked
  8666  004632  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8667  004634  0E08               	movlw	8
  8668  004636  6F71               	movwf	set_white_pixel@x& (0+255),b
  8669  004638  0E00               	movlw	0
  8670  00463A  0100               	movlb	0	; () banked
  8671  00463C  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8672  00463E  0E04               	movlw	4
  8673  004640  6F73               	movwf	set_white_pixel@y& (0+255),b
  8674  004642  EC50  F025         	call	_set_white_pixel	;wreg free
  8675                           
  8676                           ;led.c: 624: set_white_pixel(9,4);
  8677  004646  0E00               	movlw	0
  8678  004648  0100               	movlb	0	; () banked
  8679  00464A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8680  00464C  0E09               	movlw	9
  8681  00464E  6F71               	movwf	set_white_pixel@x& (0+255),b
  8682  004650  0E00               	movlw	0
  8683  004652  0100               	movlb	0	; () banked
  8684  004654  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8685  004656  0E04               	movlw	4
  8686  004658  6F73               	movwf	set_white_pixel@y& (0+255),b
  8687  00465A  EC50  F025         	call	_set_white_pixel	;wreg free
  8688                           
  8689                           ;led.c: 625: set_white_pixel(10,4);
  8690  00465E  0E00               	movlw	0
  8691  004660  0100               	movlb	0	; () banked
  8692  004662  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8693  004664  0E0A               	movlw	10
  8694  004666  6F71               	movwf	set_white_pixel@x& (0+255),b
  8695  004668  0E00               	movlw	0
  8696  00466A  0100               	movlb	0	; () banked
  8697  00466C  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8698  00466E  0E04               	movlw	4
  8699  004670  6F73               	movwf	set_white_pixel@y& (0+255),b
  8700  004672  EC50  F025         	call	_set_white_pixel	;wreg free
  8701  004676  0012               	return		;funcret
  8702  004678                     __end_of_set_oor:
  8703                           	opt stack 0
  8704                           pclatu	equ	0xFFB
  8705                           pclath	equ	0xFFA
  8706                           tblptru	equ	0xFF8
  8707                           tblptrh	equ	0xFF7
  8708                           tblptrl	equ	0xFF6
  8709                           tablat	equ	0xFF5
  8710                           prodh	equ	0xFF4
  8711                           prodl	equ	0xFF3
  8712                           postinc0	equ	0xFEE
  8713                           fsr0h	equ	0xFEA
  8714                           fsr0l	equ	0xFE9
  8715                           wreg	equ	0xFE8
  8716                           postdec1	equ	0xFE5
  8717                           fsr1h	equ	0xFE2
  8718                           fsr1l	equ	0xFE1
  8719                           bsr	equ	0xFE0
  8720                           indf2	equ	0xFDF
  8721                           postinc2	equ	0xFDE
  8722                           postdec2	equ	0xFDD
  8723                           fsr2h	equ	0xFDA
  8724                           fsr2l	equ	0xFD9
  8725                           status	equ	0xFD8
  8726                           
  8727 ;; *************** function _set_ntien_min *****************
  8728 ;; Defined at:
  8729 ;;		line 535 in file "led.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;		None
  8732 ;; Auto vars:     Size  Location     Type
  8733 ;;		None
  8734 ;; Return value:  Size  Location     Type
  8735 ;;                  1    wreg      void 
  8736 ;; Registers used:
  8737 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8738 ;; Tracked objects:
  8739 ;;		On entry : 0/0
  8740 ;;		On exit  : 0/0
  8741 ;;		Unchanged: 0/0
  8742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8743 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8744 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8745 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8746 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8747 ;;Total ram usage:        0 bytes
  8748 ;; Hardware stack levels used:    1
  8749 ;; Hardware stack levels required when called:    7
  8750 ;; This function calls:
  8751 ;;		_set_white_pixel
  8752 ;; This function is called by:
  8753 ;;		_set_time_led
  8754 ;; This function uses a non-reentrant model
  8755 ;;
  8756                           
  8757                           	psect	text41
  8758  003B92                     __ptext41:
  8759                           	opt stack 0
  8760  003B92                     _set_ntien_min:
  8761                           	opt stack 14
  8762                           
  8763                           ;led.c: 537: set_white_pixel(12,8);
  8764                           
  8765                           ;incstack = 0
  8766  003B92  0E00               	movlw	0
  8767  003B94  0100               	movlb	0	; () banked
  8768  003B96  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8769  003B98  0E0C               	movlw	12
  8770  003B9A  6F71               	movwf	set_white_pixel@x& (0+255),b
  8771  003B9C  0E00               	movlw	0
  8772  003B9E  0100               	movlb	0	; () banked
  8773  003BA0  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8774  003BA2  0E08               	movlw	8
  8775  003BA4  6F73               	movwf	set_white_pixel@y& (0+255),b
  8776  003BA6  EC50  F025         	call	_set_white_pixel	;wreg free
  8777                           
  8778                           ;led.c: 538: set_white_pixel(13,8);
  8779  003BAA  0E00               	movlw	0
  8780  003BAC  0100               	movlb	0	; () banked
  8781  003BAE  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8782  003BB0  0E0D               	movlw	13
  8783  003BB2  6F71               	movwf	set_white_pixel@x& (0+255),b
  8784  003BB4  0E00               	movlw	0
  8785  003BB6  0100               	movlb	0	; () banked
  8786  003BB8  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8787  003BBA  0E08               	movlw	8
  8788  003BBC  6F73               	movwf	set_white_pixel@y& (0+255),b
  8789  003BBE  EC50  F025         	call	_set_white_pixel	;wreg free
  8790                           
  8791                           ;led.c: 539: set_white_pixel(14,8);
  8792  003BC2  0E00               	movlw	0
  8793  003BC4  0100               	movlb	0	; () banked
  8794  003BC6  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8795  003BC8  0E0E               	movlw	14
  8796  003BCA  6F71               	movwf	set_white_pixel@x& (0+255),b
  8797  003BCC  0E00               	movlw	0
  8798  003BCE  0100               	movlb	0	; () banked
  8799  003BD0  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8800  003BD2  0E08               	movlw	8
  8801  003BD4  6F73               	movwf	set_white_pixel@y& (0+255),b
  8802  003BD6  EC50  F025         	call	_set_white_pixel	;wreg free
  8803                           
  8804                           ;led.c: 540: set_white_pixel(15,8);
  8805  003BDA  0E00               	movlw	0
  8806  003BDC  0100               	movlb	0	; () banked
  8807  003BDE  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8808  003BE0  0E0F               	movlw	15
  8809  003BE2  6F71               	movwf	set_white_pixel@x& (0+255),b
  8810  003BE4  0E00               	movlw	0
  8811  003BE6  0100               	movlb	0	; () banked
  8812  003BE8  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8813  003BEA  0E08               	movlw	8
  8814  003BEC  6F73               	movwf	set_white_pixel@y& (0+255),b
  8815  003BEE  EC50  F025         	call	_set_white_pixel	;wreg free
  8816                           
  8817                           ;led.c: 541: set_white_pixel(16,8);
  8818  003BF2  0E00               	movlw	0
  8819  003BF4  0100               	movlb	0	; () banked
  8820  003BF6  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8821  003BF8  0E10               	movlw	16
  8822  003BFA  6F71               	movwf	set_white_pixel@x& (0+255),b
  8823  003BFC  0E00               	movlw	0
  8824  003BFE  0100               	movlb	0	; () banked
  8825  003C00  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8826  003C02  0E08               	movlw	8
  8827  003C04  6F73               	movwf	set_white_pixel@y& (0+255),b
  8828  003C06  EC50  F025         	call	_set_white_pixel	;wreg free
  8829  003C0A  0012               	return		;funcret
  8830  003C0C                     __end_of_set_ntien_min:
  8831                           	opt stack 0
  8832                           pclatu	equ	0xFFB
  8833                           pclath	equ	0xFFA
  8834                           tblptru	equ	0xFF8
  8835                           tblptrh	equ	0xFF7
  8836                           tblptrl	equ	0xFF6
  8837                           tablat	equ	0xFF5
  8838                           prodh	equ	0xFF4
  8839                           prodl	equ	0xFF3
  8840                           postinc0	equ	0xFEE
  8841                           fsr0h	equ	0xFEA
  8842                           fsr0l	equ	0xFE9
  8843                           wreg	equ	0xFE8
  8844                           postdec1	equ	0xFE5
  8845                           fsr1h	equ	0xFE2
  8846                           fsr1l	equ	0xFE1
  8847                           bsr	equ	0xFE0
  8848                           indf2	equ	0xFDF
  8849                           postinc2	equ	0xFDE
  8850                           postdec2	equ	0xFDD
  8851                           fsr2h	equ	0xFDA
  8852                           fsr2l	equ	0xFD9
  8853                           status	equ	0xFD8
  8854                           
  8855 ;; *************** function _set_nege_uur *****************
  8856 ;; Defined at:
  8857 ;;		line 688 in file "led.c"
  8858 ;; Parameters:    Size  Location     Type
  8859 ;;		None
  8860 ;; Auto vars:     Size  Location     Type
  8861 ;;		None
  8862 ;; Return value:  Size  Location     Type
  8863 ;;                  1    wreg      void 
  8864 ;; Registers used:
  8865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8866 ;; Tracked objects:
  8867 ;;		On entry : 0/0
  8868 ;;		On exit  : 0/0
  8869 ;;		Unchanged: 0/0
  8870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8872 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8874 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8875 ;;Total ram usage:        0 bytes
  8876 ;; Hardware stack levels used:    1
  8877 ;; Hardware stack levels required when called:    7
  8878 ;; This function calls:
  8879 ;;		_set_white_pixel
  8880 ;; This function is called by:
  8881 ;;		_set_time_led
  8882 ;; This function uses a non-reentrant model
  8883 ;;
  8884                           
  8885                           	psect	text42
  8886  0040CC                     __ptext42:
  8887                           	opt stack 0
  8888  0040CC                     _set_nege_uur:
  8889                           	opt stack 14
  8890                           
  8891                           ;led.c: 690: set_white_pixel(13,2);
  8892                           
  8893                           ;incstack = 0
  8894  0040CC  0E00               	movlw	0
  8895  0040CE  0100               	movlb	0	; () banked
  8896  0040D0  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8897  0040D2  0E0D               	movlw	13
  8898  0040D4  6F71               	movwf	set_white_pixel@x& (0+255),b
  8899  0040D6  0E00               	movlw	0
  8900  0040D8  0100               	movlb	0	; () banked
  8901  0040DA  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8902  0040DC  0E02               	movlw	2
  8903  0040DE  6F73               	movwf	set_white_pixel@y& (0+255),b
  8904  0040E0  EC50  F025         	call	_set_white_pixel	;wreg free
  8905                           
  8906                           ;led.c: 691: set_white_pixel(14,2);
  8907  0040E4  0E00               	movlw	0
  8908  0040E6  0100               	movlb	0	; () banked
  8909  0040E8  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8910  0040EA  0E0E               	movlw	14
  8911  0040EC  6F71               	movwf	set_white_pixel@x& (0+255),b
  8912  0040EE  0E00               	movlw	0
  8913  0040F0  0100               	movlb	0	; () banked
  8914  0040F2  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8915  0040F4  0E02               	movlw	2
  8916  0040F6  6F73               	movwf	set_white_pixel@y& (0+255),b
  8917  0040F8  EC50  F025         	call	_set_white_pixel	;wreg free
  8918                           
  8919                           ;led.c: 692: set_white_pixel(15,2);
  8920  0040FC  0E00               	movlw	0
  8921  0040FE  0100               	movlb	0	; () banked
  8922  004100  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8923  004102  0E0F               	movlw	15
  8924  004104  6F71               	movwf	set_white_pixel@x& (0+255),b
  8925  004106  0E00               	movlw	0
  8926  004108  0100               	movlb	0	; () banked
  8927  00410A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8928  00410C  0E02               	movlw	2
  8929  00410E  6F73               	movwf	set_white_pixel@y& (0+255),b
  8930  004110  EC50  F025         	call	_set_white_pixel	;wreg free
  8931                           
  8932                           ;led.c: 693: set_white_pixel(16,2);
  8933  004114  0E00               	movlw	0
  8934  004116  0100               	movlb	0	; () banked
  8935  004118  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  8936  00411A  0E10               	movlw	16
  8937  00411C  6F71               	movwf	set_white_pixel@x& (0+255),b
  8938  00411E  0E00               	movlw	0
  8939  004120  0100               	movlb	0	; () banked
  8940  004122  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  8941  004124  0E02               	movlw	2
  8942  004126  6F73               	movwf	set_white_pixel@y& (0+255),b
  8943  004128  EC50  F025         	call	_set_white_pixel	;wreg free
  8944  00412C  0012               	return		;funcret
  8945  00412E                     __end_of_set_nege_uur:
  8946                           	opt stack 0
  8947                           pclatu	equ	0xFFB
  8948                           pclath	equ	0xFFA
  8949                           tblptru	equ	0xFF8
  8950                           tblptrh	equ	0xFF7
  8951                           tblptrl	equ	0xFF6
  8952                           tablat	equ	0xFF5
  8953                           prodh	equ	0xFF4
  8954                           prodl	equ	0xFF3
  8955                           postinc0	equ	0xFEE
  8956                           fsr0h	equ	0xFEA
  8957                           fsr0l	equ	0xFE9
  8958                           wreg	equ	0xFE8
  8959                           postdec1	equ	0xFE5
  8960                           fsr1h	equ	0xFE2
  8961                           fsr1l	equ	0xFE1
  8962                           bsr	equ	0xFE0
  8963                           indf2	equ	0xFDF
  8964                           postinc2	equ	0xFDE
  8965                           postdec2	equ	0xFDD
  8966                           fsr2h	equ	0xFDA
  8967                           fsr2l	equ	0xFD9
  8968                           status	equ	0xFD8
  8969                           
  8970 ;; *************** function _set_nege_min *****************
  8971 ;; Defined at:
  8972 ;;		line 519 in file "led.c"
  8973 ;; Parameters:    Size  Location     Type
  8974 ;;		None
  8975 ;; Auto vars:     Size  Location     Type
  8976 ;;		None
  8977 ;; Return value:  Size  Location     Type
  8978 ;;                  1    wreg      void 
  8979 ;; Registers used:
  8980 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8981 ;; Tracked objects:
  8982 ;;		On entry : 0/0
  8983 ;;		On exit  : 0/0
  8984 ;;		Unchanged: 0/0
  8985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8986 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8987 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8988 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8989 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8990 ;;Total ram usage:        0 bytes
  8991 ;; Hardware stack levels used:    1
  8992 ;; Hardware stack levels required when called:    7
  8993 ;; This function calls:
  8994 ;;		_set_white_pixel
  8995 ;; This function is called by:
  8996 ;;		_set_time_led
  8997 ;; This function uses a non-reentrant model
  8998 ;;
  8999                           
  9000                           	psect	text43
  9001  00412E                     __ptext43:
  9002                           	opt stack 0
  9003  00412E                     _set_nege_min:
  9004                           	opt stack 14
  9005                           
  9006                           ;led.c: 521: set_white_pixel(13,10);
  9007                           
  9008                           ;incstack = 0
  9009  00412E  0E00               	movlw	0
  9010  004130  0100               	movlb	0	; () banked
  9011  004132  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9012  004134  0E0D               	movlw	13
  9013  004136  6F71               	movwf	set_white_pixel@x& (0+255),b
  9014  004138  0E00               	movlw	0
  9015  00413A  0100               	movlb	0	; () banked
  9016  00413C  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9017  00413E  0E0A               	movlw	10
  9018  004140  6F73               	movwf	set_white_pixel@y& (0+255),b
  9019  004142  EC50  F025         	call	_set_white_pixel	;wreg free
  9020                           
  9021                           ;led.c: 522: set_white_pixel(14,10);
  9022  004146  0E00               	movlw	0
  9023  004148  0100               	movlb	0	; () banked
  9024  00414A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9025  00414C  0E0E               	movlw	14
  9026  00414E  6F71               	movwf	set_white_pixel@x& (0+255),b
  9027  004150  0E00               	movlw	0
  9028  004152  0100               	movlb	0	; () banked
  9029  004154  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9030  004156  0E0A               	movlw	10
  9031  004158  6F73               	movwf	set_white_pixel@y& (0+255),b
  9032  00415A  EC50  F025         	call	_set_white_pixel	;wreg free
  9033                           
  9034                           ;led.c: 523: set_white_pixel(15,10);
  9035  00415E  0E00               	movlw	0
  9036  004160  0100               	movlb	0	; () banked
  9037  004162  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9038  004164  0E0F               	movlw	15
  9039  004166  6F71               	movwf	set_white_pixel@x& (0+255),b
  9040  004168  0E00               	movlw	0
  9041  00416A  0100               	movlb	0	; () banked
  9042  00416C  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9043  00416E  0E0A               	movlw	10
  9044  004170  6F73               	movwf	set_white_pixel@y& (0+255),b
  9045  004172  EC50  F025         	call	_set_white_pixel	;wreg free
  9046                           
  9047                           ;led.c: 524: set_white_pixel(16,10);
  9048  004176  0E00               	movlw	0
  9049  004178  0100               	movlb	0	; () banked
  9050  00417A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9051  00417C  0E10               	movlw	16
  9052  00417E  6F71               	movwf	set_white_pixel@x& (0+255),b
  9053  004180  0E00               	movlw	0
  9054  004182  0100               	movlb	0	; () banked
  9055  004184  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9056  004186  0E0A               	movlw	10
  9057  004188  6F73               	movwf	set_white_pixel@y& (0+255),b
  9058  00418A  EC50  F025         	call	_set_white_pixel	;wreg free
  9059  00418E  0012               	return		;funcret
  9060  004190                     __end_of_set_nege_min:
  9061                           	opt stack 0
  9062                           pclatu	equ	0xFFB
  9063                           pclath	equ	0xFFA
  9064                           tblptru	equ	0xFF8
  9065                           tblptrh	equ	0xFF7
  9066                           tblptrl	equ	0xFF6
  9067                           tablat	equ	0xFF5
  9068                           prodh	equ	0xFF4
  9069                           prodl	equ	0xFF3
  9070                           postinc0	equ	0xFEE
  9071                           fsr0h	equ	0xFEA
  9072                           fsr0l	equ	0xFE9
  9073                           wreg	equ	0xFE8
  9074                           postdec1	equ	0xFE5
  9075                           fsr1h	equ	0xFE2
  9076                           fsr1l	equ	0xFE1
  9077                           bsr	equ	0xFE0
  9078                           indf2	equ	0xFDF
  9079                           postinc2	equ	0xFDE
  9080                           postdec2	equ	0xFDD
  9081                           fsr2h	equ	0xFDA
  9082                           fsr2l	equ	0xFD9
  9083                           status	equ	0xFD8
  9084                           
  9085 ;; *************** function _set_minuut *****************
  9086 ;; Defined at:
  9087 ;;		line 593 in file "led.c"
  9088 ;; Parameters:    Size  Location     Type
  9089 ;;		None
  9090 ;; Auto vars:     Size  Location     Type
  9091 ;;		None
  9092 ;; Return value:  Size  Location     Type
  9093 ;;                  1    wreg      void 
  9094 ;; Registers used:
  9095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9096 ;; Tracked objects:
  9097 ;;		On entry : 0/0
  9098 ;;		On exit  : 0/0
  9099 ;;		Unchanged: 0/0
  9100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9105 ;;Total ram usage:        0 bytes
  9106 ;; Hardware stack levels used:    1
  9107 ;; Hardware stack levels required when called:    7
  9108 ;; This function calls:
  9109 ;;		_set_white_pixel
  9110 ;; This function is called by:
  9111 ;;		_set_time_led
  9112 ;; This function uses a non-reentrant model
  9113 ;;
  9114                           
  9115                           	psect	text44
  9116  0037D2                     __ptext44:
  9117                           	opt stack 0
  9118  0037D2                     _set_minuut:
  9119                           	opt stack 14
  9120                           
  9121                           ;led.c: 595: set_white_pixel(1,5);
  9122                           
  9123                           ;incstack = 0
  9124  0037D2  0E00               	movlw	0
  9125  0037D4  0100               	movlb	0	; () banked
  9126  0037D6  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9127  0037D8  0E01               	movlw	1
  9128  0037DA  6F71               	movwf	set_white_pixel@x& (0+255),b
  9129  0037DC  0E00               	movlw	0
  9130  0037DE  0100               	movlb	0	; () banked
  9131  0037E0  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9132  0037E2  0E05               	movlw	5
  9133  0037E4  6F73               	movwf	set_white_pixel@y& (0+255),b
  9134  0037E6  EC50  F025         	call	_set_white_pixel	;wreg free
  9135                           
  9136                           ;led.c: 596: set_white_pixel(2,5);
  9137  0037EA  0E00               	movlw	0
  9138  0037EC  0100               	movlb	0	; () banked
  9139  0037EE  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9140  0037F0  0E02               	movlw	2
  9141  0037F2  6F71               	movwf	set_white_pixel@x& (0+255),b
  9142  0037F4  0E00               	movlw	0
  9143  0037F6  0100               	movlb	0	; () banked
  9144  0037F8  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9145  0037FA  0E05               	movlw	5
  9146  0037FC  6F73               	movwf	set_white_pixel@y& (0+255),b
  9147  0037FE  EC50  F025         	call	_set_white_pixel	;wreg free
  9148                           
  9149                           ;led.c: 597: set_white_pixel(3,5);
  9150  003802  0E00               	movlw	0
  9151  003804  0100               	movlb	0	; () banked
  9152  003806  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9153  003808  0E03               	movlw	3
  9154  00380A  6F71               	movwf	set_white_pixel@x& (0+255),b
  9155  00380C  0E00               	movlw	0
  9156  00380E  0100               	movlb	0	; () banked
  9157  003810  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9158  003812  0E05               	movlw	5
  9159  003814  6F73               	movwf	set_white_pixel@y& (0+255),b
  9160  003816  EC50  F025         	call	_set_white_pixel	;wreg free
  9161                           
  9162                           ;led.c: 598: set_white_pixel(4,5);
  9163  00381A  0E00               	movlw	0
  9164  00381C  0100               	movlb	0	; () banked
  9165  00381E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9166  003820  0E04               	movlw	4
  9167  003822  6F71               	movwf	set_white_pixel@x& (0+255),b
  9168  003824  0E00               	movlw	0
  9169  003826  0100               	movlb	0	; () banked
  9170  003828  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9171  00382A  0E05               	movlw	5
  9172  00382C  6F73               	movwf	set_white_pixel@y& (0+255),b
  9173  00382E  EC50  F025         	call	_set_white_pixel	;wreg free
  9174                           
  9175                           ;led.c: 599: set_white_pixel(5,5);
  9176  003832  0E00               	movlw	0
  9177  003834  0100               	movlb	0	; () banked
  9178  003836  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9179  003838  0E05               	movlw	5
  9180  00383A  6F71               	movwf	set_white_pixel@x& (0+255),b
  9181  00383C  0E00               	movlw	0
  9182  00383E  0100               	movlb	0	; () banked
  9183  003840  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9184  003842  0E05               	movlw	5
  9185  003844  6F73               	movwf	set_white_pixel@y& (0+255),b
  9186  003846  EC50  F025         	call	_set_white_pixel	;wreg free
  9187                           
  9188                           ;led.c: 600: set_white_pixel(6,5);
  9189  00384A  0E00               	movlw	0
  9190  00384C  0100               	movlb	0	; () banked
  9191  00384E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9192  003850  0E06               	movlw	6
  9193  003852  6F71               	movwf	set_white_pixel@x& (0+255),b
  9194  003854  0E00               	movlw	0
  9195  003856  0100               	movlb	0	; () banked
  9196  003858  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9197  00385A  0E05               	movlw	5
  9198  00385C  6F73               	movwf	set_white_pixel@y& (0+255),b
  9199  00385E  EC50  F025         	call	_set_white_pixel	;wreg free
  9200  003862  0012               	return		;funcret
  9201  003864                     __end_of_set_minuut:
  9202                           	opt stack 0
  9203                           pclatu	equ	0xFFB
  9204                           pclath	equ	0xFFA
  9205                           tblptru	equ	0xFF8
  9206                           tblptrh	equ	0xFF7
  9207                           tblptrl	equ	0xFF6
  9208                           tablat	equ	0xFF5
  9209                           prodh	equ	0xFF4
  9210                           prodl	equ	0xFF3
  9211                           postinc0	equ	0xFEE
  9212                           fsr0h	equ	0xFEA
  9213                           fsr0l	equ	0xFE9
  9214                           wreg	equ	0xFE8
  9215                           postdec1	equ	0xFE5
  9216                           fsr1h	equ	0xFE2
  9217                           fsr1l	equ	0xFE1
  9218                           bsr	equ	0xFE0
  9219                           indf2	equ	0xFDF
  9220                           postinc2	equ	0xFDE
  9221                           postdec2	equ	0xFDD
  9222                           fsr2h	equ	0xFDA
  9223                           fsr2l	equ	0xFD9
  9224                           status	equ	0xFD8
  9225                           
  9226 ;; *************** function _set_minute *****************
  9227 ;; Defined at:
  9228 ;;		line 603 in file "led.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;		None
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      void 
  9235 ;; Registers used:
  9236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9246 ;;Total ram usage:        0 bytes
  9247 ;; Hardware stack levels used:    1
  9248 ;; Hardware stack levels required when called:    7
  9249 ;; This function calls:
  9250 ;;		_set_white_pixel
  9251 ;; This function is called by:
  9252 ;;		_set_time_led
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           	psect	text45
  9257  003864                     __ptext45:
  9258                           	opt stack 0
  9259  003864                     _set_minute:
  9260                           	opt stack 14
  9261                           
  9262                           ;led.c: 605: set_white_pixel(11,5);
  9263                           
  9264                           ;incstack = 0
  9265  003864  0E00               	movlw	0
  9266  003866  0100               	movlb	0	; () banked
  9267  003868  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9268  00386A  0E0B               	movlw	11
  9269  00386C  6F71               	movwf	set_white_pixel@x& (0+255),b
  9270  00386E  0E00               	movlw	0
  9271  003870  0100               	movlb	0	; () banked
  9272  003872  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9273  003874  0E05               	movlw	5
  9274  003876  6F73               	movwf	set_white_pixel@y& (0+255),b
  9275  003878  EC50  F025         	call	_set_white_pixel	;wreg free
  9276                           
  9277                           ;led.c: 606: set_white_pixel(12,5);
  9278  00387C  0E00               	movlw	0
  9279  00387E  0100               	movlb	0	; () banked
  9280  003880  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9281  003882  0E0C               	movlw	12
  9282  003884  6F71               	movwf	set_white_pixel@x& (0+255),b
  9283  003886  0E00               	movlw	0
  9284  003888  0100               	movlb	0	; () banked
  9285  00388A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9286  00388C  0E05               	movlw	5
  9287  00388E  6F73               	movwf	set_white_pixel@y& (0+255),b
  9288  003890  EC50  F025         	call	_set_white_pixel	;wreg free
  9289                           
  9290                           ;led.c: 607: set_white_pixel(13,5);
  9291  003894  0E00               	movlw	0
  9292  003896  0100               	movlb	0	; () banked
  9293  003898  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9294  00389A  0E0D               	movlw	13
  9295  00389C  6F71               	movwf	set_white_pixel@x& (0+255),b
  9296  00389E  0E00               	movlw	0
  9297  0038A0  0100               	movlb	0	; () banked
  9298  0038A2  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9299  0038A4  0E05               	movlw	5
  9300  0038A6  6F73               	movwf	set_white_pixel@y& (0+255),b
  9301  0038A8  EC50  F025         	call	_set_white_pixel	;wreg free
  9302                           
  9303                           ;led.c: 608: set_white_pixel(14,5);
  9304  0038AC  0E00               	movlw	0
  9305  0038AE  0100               	movlb	0	; () banked
  9306  0038B0  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9307  0038B2  0E0E               	movlw	14
  9308  0038B4  6F71               	movwf	set_white_pixel@x& (0+255),b
  9309  0038B6  0E00               	movlw	0
  9310  0038B8  0100               	movlb	0	; () banked
  9311  0038BA  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9312  0038BC  0E05               	movlw	5
  9313  0038BE  6F73               	movwf	set_white_pixel@y& (0+255),b
  9314  0038C0  EC50  F025         	call	_set_white_pixel	;wreg free
  9315                           
  9316                           ;led.c: 609: set_white_pixel(15,5);
  9317  0038C4  0E00               	movlw	0
  9318  0038C6  0100               	movlb	0	; () banked
  9319  0038C8  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9320  0038CA  0E0F               	movlw	15
  9321  0038CC  6F71               	movwf	set_white_pixel@x& (0+255),b
  9322  0038CE  0E00               	movlw	0
  9323  0038D0  0100               	movlb	0	; () banked
  9324  0038D2  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9325  0038D4  0E05               	movlw	5
  9326  0038D6  6F73               	movwf	set_white_pixel@y& (0+255),b
  9327  0038D8  EC50  F025         	call	_set_white_pixel	;wreg free
  9328                           
  9329                           ;led.c: 610: set_white_pixel(16,5);
  9330  0038DC  0E00               	movlw	0
  9331  0038DE  0100               	movlb	0	; () banked
  9332  0038E0  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9333  0038E2  0E10               	movlw	16
  9334  0038E4  6F71               	movwf	set_white_pixel@x& (0+255),b
  9335  0038E6  0E00               	movlw	0
  9336  0038E8  0100               	movlb	0	; () banked
  9337  0038EA  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9338  0038EC  0E05               	movlw	5
  9339  0038EE  6F73               	movwf	set_white_pixel@y& (0+255),b
  9340  0038F0  EC50  F025         	call	_set_white_pixel	;wreg free
  9341  0038F4  0012               	return		;funcret
  9342  0038F6                     __end_of_set_minute:
  9343                           	opt stack 0
  9344                           pclatu	equ	0xFFB
  9345                           pclath	equ	0xFFA
  9346                           tblptru	equ	0xFF8
  9347                           tblptrh	equ	0xFF7
  9348                           tblptrl	equ	0xFF6
  9349                           tablat	equ	0xFF5
  9350                           prodh	equ	0xFF4
  9351                           prodl	equ	0xFF3
  9352                           postinc0	equ	0xFEE
  9353                           fsr0h	equ	0xFEA
  9354                           fsr0l	equ	0xFE9
  9355                           wreg	equ	0xFE8
  9356                           postdec1	equ	0xFE5
  9357                           fsr1h	equ	0xFE2
  9358                           fsr1l	equ	0xFE1
  9359                           bsr	equ	0xFE0
  9360                           indf2	equ	0xFDF
  9361                           postinc2	equ	0xFDE
  9362                           postdec2	equ	0xFDD
  9363                           fsr2h	equ	0xFDA
  9364                           fsr2l	equ	0xFD9
  9365                           status	equ	0xFD8
  9366                           
  9367 ;; *************** function _set_minell *****************
  9368 ;; Defined at:
  9369 ;;		line 780 in file "led.c"
  9370 ;; Parameters:    Size  Location     Type
  9371 ;;		None
  9372 ;; Auto vars:     Size  Location     Type
  9373 ;;  clr             3   17[BANK0 ] struct .
  9374 ;; Return value:  Size  Location     Type
  9375 ;;                  1    wreg      void 
  9376 ;; Registers used:
  9377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9378 ;; Tracked objects:
  9379 ;;		On entry : 0/0
  9380 ;;		On exit  : 0/0
  9381 ;;		Unchanged: 0/0
  9382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9384 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;Total ram usage:        3 bytes
  9388 ;; Hardware stack levels used:    1
  9389 ;; Hardware stack levels required when called:    6
  9390 ;; This function calls:
  9391 ;;		_get_random_color
  9392 ;;		_set_pixel
  9393 ;; This function is called by:
  9394 ;;		_set_time_led
  9395 ;; This function uses a non-reentrant model
  9396 ;;
  9397                           
  9398                           	psect	text46
  9399  002DB4                     __ptext46:
  9400                           	opt stack 0
  9401  002DB4                     _set_minell:
  9402                           	opt stack 15
  9403                           
  9404                           ;led.c: 782: RGBLED clr;
  9405                           ;led.c: 783: get_random_color(&clr);
  9406                           
  9407                           ;incstack = 0
  9408  002DB4  0E71               	movlw	low set_minell@clr
  9409  002DB6  0100               	movlb	0	; () banked
  9410  002DB8  6F6A               	movwf	get_random_color@clr& (0+255),b
  9411  002DBA  0E00               	movlw	high set_minell@clr
  9412  002DBC  0100               	movlb	0	; () banked
  9413  002DBE  6F6B               	movwf	(get_random_color@clr+1)& (0+255),b
  9414  002DC0  EC0B  F01D         	call	_get_random_color	;wreg free
  9415                           
  9416                           ;led.c: 785: set_pixel(11, 6, &clr);
  9417  002DC4  0E00               	movlw	0
  9418  002DC6  0100               	movlb	0	; () banked
  9419  002DC8  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9420  002DCA  0E0B               	movlw	11
  9421  002DCC  6F6B               	movwf	set_pixel@x& (0+255),b
  9422  002DCE  0E00               	movlw	0
  9423  002DD0  0100               	movlb	0	; () banked
  9424  002DD2  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9425  002DD4  0E06               	movlw	6
  9426  002DD6  6F6D               	movwf	set_pixel@y& (0+255),b
  9427  002DD8  0E71               	movlw	low set_minell@clr
  9428  002DDA  0100               	movlb	0	; () banked
  9429  002DDC  6F6F               	movwf	set_pixel@clr& (0+255),b
  9430  002DDE  0E00               	movlw	high set_minell@clr
  9431  002DE0  0100               	movlb	0	; () banked
  9432  002DE2  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9433  002DE4  EC7B  F01C         	call	_set_pixel	;wreg free
  9434                           
  9435                           ;led.c: 786: set_pixel(12, 6, &clr);
  9436  002DE8  0E00               	movlw	0
  9437  002DEA  0100               	movlb	0	; () banked
  9438  002DEC  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9439  002DEE  0E0C               	movlw	12
  9440  002DF0  6F6B               	movwf	set_pixel@x& (0+255),b
  9441  002DF2  0E00               	movlw	0
  9442  002DF4  0100               	movlb	0	; () banked
  9443  002DF6  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9444  002DF8  0E06               	movlw	6
  9445  002DFA  6F6D               	movwf	set_pixel@y& (0+255),b
  9446  002DFC  0E71               	movlw	low set_minell@clr
  9447  002DFE  0100               	movlb	0	; () banked
  9448  002E00  6F6F               	movwf	set_pixel@clr& (0+255),b
  9449  002E02  0E00               	movlw	high set_minell@clr
  9450  002E04  0100               	movlb	0	; () banked
  9451  002E06  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9452  002E08  EC7B  F01C         	call	_set_pixel	;wreg free
  9453                           
  9454                           ;led.c: 787: set_pixel(13, 6, &clr);
  9455  002E0C  0E00               	movlw	0
  9456  002E0E  0100               	movlb	0	; () banked
  9457  002E10  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9458  002E12  0E0D               	movlw	13
  9459  002E14  6F6B               	movwf	set_pixel@x& (0+255),b
  9460  002E16  0E00               	movlw	0
  9461  002E18  0100               	movlb	0	; () banked
  9462  002E1A  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9463  002E1C  0E06               	movlw	6
  9464  002E1E  6F6D               	movwf	set_pixel@y& (0+255),b
  9465  002E20  0E71               	movlw	low set_minell@clr
  9466  002E22  0100               	movlb	0	; () banked
  9467  002E24  6F6F               	movwf	set_pixel@clr& (0+255),b
  9468  002E26  0E00               	movlw	high set_minell@clr
  9469  002E28  0100               	movlb	0	; () banked
  9470  002E2A  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9471  002E2C  EC7B  F01C         	call	_set_pixel	;wreg free
  9472                           
  9473                           ;led.c: 788: set_pixel(14, 6, &clr);
  9474  002E30  0E00               	movlw	0
  9475  002E32  0100               	movlb	0	; () banked
  9476  002E34  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9477  002E36  0E0E               	movlw	14
  9478  002E38  6F6B               	movwf	set_pixel@x& (0+255),b
  9479  002E3A  0E00               	movlw	0
  9480  002E3C  0100               	movlb	0	; () banked
  9481  002E3E  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9482  002E40  0E06               	movlw	6
  9483  002E42  6F6D               	movwf	set_pixel@y& (0+255),b
  9484  002E44  0E71               	movlw	low set_minell@clr
  9485  002E46  0100               	movlb	0	; () banked
  9486  002E48  6F6F               	movwf	set_pixel@clr& (0+255),b
  9487  002E4A  0E00               	movlw	high set_minell@clr
  9488  002E4C  0100               	movlb	0	; () banked
  9489  002E4E  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9490  002E50  EC7B  F01C         	call	_set_pixel	;wreg free
  9491                           
  9492                           ;led.c: 789: set_pixel(15, 6, &clr);
  9493  002E54  0E00               	movlw	0
  9494  002E56  0100               	movlb	0	; () banked
  9495  002E58  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9496  002E5A  0E0F               	movlw	15
  9497  002E5C  6F6B               	movwf	set_pixel@x& (0+255),b
  9498  002E5E  0E00               	movlw	0
  9499  002E60  0100               	movlb	0	; () banked
  9500  002E62  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9501  002E64  0E06               	movlw	6
  9502  002E66  6F6D               	movwf	set_pixel@y& (0+255),b
  9503  002E68  0E71               	movlw	low set_minell@clr
  9504  002E6A  0100               	movlb	0	; () banked
  9505  002E6C  6F6F               	movwf	set_pixel@clr& (0+255),b
  9506  002E6E  0E00               	movlw	high set_minell@clr
  9507  002E70  0100               	movlb	0	; () banked
  9508  002E72  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9509  002E74  EC7B  F01C         	call	_set_pixel	;wreg free
  9510                           
  9511                           ;led.c: 790: set_pixel(16, 6, &clr);
  9512  002E78  0E00               	movlw	0
  9513  002E7A  0100               	movlb	0	; () banked
  9514  002E7C  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9515  002E7E  0E10               	movlw	16
  9516  002E80  6F6B               	movwf	set_pixel@x& (0+255),b
  9517  002E82  0E00               	movlw	0
  9518  002E84  0100               	movlb	0	; () banked
  9519  002E86  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9520  002E88  0E06               	movlw	6
  9521  002E8A  6F6D               	movwf	set_pixel@y& (0+255),b
  9522  002E8C  0E71               	movlw	low set_minell@clr
  9523  002E8E  0100               	movlb	0	; () banked
  9524  002E90  6F6F               	movwf	set_pixel@clr& (0+255),b
  9525  002E92  0E00               	movlw	high set_minell@clr
  9526  002E94  0100               	movlb	0	; () banked
  9527  002E96  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9528  002E98  EC7B  F01C         	call	_set_pixel	;wreg free
  9529  002E9C  0012               	return		;funcret
  9530  002E9E                     __end_of_set_minell:
  9531                           	opt stack 0
  9532                           pclatu	equ	0xFFB
  9533                           pclath	equ	0xFFA
  9534                           tblptru	equ	0xFF8
  9535                           tblptrh	equ	0xFF7
  9536                           tblptrl	equ	0xFF6
  9537                           tablat	equ	0xFF5
  9538                           prodh	equ	0xFF4
  9539                           prodl	equ	0xFF3
  9540                           postinc0	equ	0xFEE
  9541                           fsr0h	equ	0xFEA
  9542                           fsr0l	equ	0xFE9
  9543                           wreg	equ	0xFE8
  9544                           postdec1	equ	0xFE5
  9545                           fsr1h	equ	0xFE2
  9546                           fsr1l	equ	0xFE1
  9547                           bsr	equ	0xFE0
  9548                           indf2	equ	0xFDF
  9549                           postinc2	equ	0xFDE
  9550                           postdec2	equ	0xFDD
  9551                           fsr2h	equ	0xFDA
  9552                           fsr2l	equ	0xFD9
  9553                           status	equ	0xFD8
  9554                           
  9555 ;; *************** function _set_kwart *****************
  9556 ;; Defined at:
  9557 ;;		line 442 in file "led.c"
  9558 ;; Parameters:    Size  Location     Type
  9559 ;;		None
  9560 ;; Auto vars:     Size  Location     Type
  9561 ;;		None
  9562 ;; Return value:  Size  Location     Type
  9563 ;;                  1    wreg      void 
  9564 ;; Registers used:
  9565 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9566 ;; Tracked objects:
  9567 ;;		On entry : 0/0
  9568 ;;		On exit  : 0/0
  9569 ;;		Unchanged: 0/0
  9570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9572 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9574 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9575 ;;Total ram usage:        0 bytes
  9576 ;; Hardware stack levels used:    1
  9577 ;; Hardware stack levels required when called:    7
  9578 ;; This function calls:
  9579 ;;		_set_white_pixel
  9580 ;; This function is called by:
  9581 ;;		_set_time_led
  9582 ;; This function uses a non-reentrant model
  9583 ;;
  9584                           
  9585                           	psect	text47
  9586  003C0C                     __ptext47:
  9587                           	opt stack 0
  9588  003C0C                     _set_kwart:
  9589                           	opt stack 14
  9590                           
  9591                           ;led.c: 444: set_white_pixel(12,12);
  9592                           
  9593                           ;incstack = 0
  9594  003C0C  0E00               	movlw	0
  9595  003C0E  0100               	movlb	0	; () banked
  9596  003C10  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9597  003C12  0E0C               	movlw	12
  9598  003C14  6F71               	movwf	set_white_pixel@x& (0+255),b
  9599  003C16  0E00               	movlw	0
  9600  003C18  0100               	movlb	0	; () banked
  9601  003C1A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9602  003C1C  0E0C               	movlw	12
  9603  003C1E  6F73               	movwf	set_white_pixel@y& (0+255),b
  9604  003C20  EC50  F025         	call	_set_white_pixel	;wreg free
  9605                           
  9606                           ;led.c: 445: set_white_pixel(13,12);
  9607  003C24  0E00               	movlw	0
  9608  003C26  0100               	movlb	0	; () banked
  9609  003C28  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9610  003C2A  0E0D               	movlw	13
  9611  003C2C  6F71               	movwf	set_white_pixel@x& (0+255),b
  9612  003C2E  0E00               	movlw	0
  9613  003C30  0100               	movlb	0	; () banked
  9614  003C32  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9615  003C34  0E0C               	movlw	12
  9616  003C36  6F73               	movwf	set_white_pixel@y& (0+255),b
  9617  003C38  EC50  F025         	call	_set_white_pixel	;wreg free
  9618                           
  9619                           ;led.c: 446: set_white_pixel(14,12);
  9620  003C3C  0E00               	movlw	0
  9621  003C3E  0100               	movlb	0	; () banked
  9622  003C40  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9623  003C42  0E0E               	movlw	14
  9624  003C44  6F71               	movwf	set_white_pixel@x& (0+255),b
  9625  003C46  0E00               	movlw	0
  9626  003C48  0100               	movlb	0	; () banked
  9627  003C4A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9628  003C4C  0E0C               	movlw	12
  9629  003C4E  6F73               	movwf	set_white_pixel@y& (0+255),b
  9630  003C50  EC50  F025         	call	_set_white_pixel	;wreg free
  9631                           
  9632                           ;led.c: 447: set_white_pixel(15,12);
  9633  003C54  0E00               	movlw	0
  9634  003C56  0100               	movlb	0	; () banked
  9635  003C58  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9636  003C5A  0E0F               	movlw	15
  9637  003C5C  6F71               	movwf	set_white_pixel@x& (0+255),b
  9638  003C5E  0E00               	movlw	0
  9639  003C60  0100               	movlb	0	; () banked
  9640  003C62  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9641  003C64  0E0C               	movlw	12
  9642  003C66  6F73               	movwf	set_white_pixel@y& (0+255),b
  9643  003C68  EC50  F025         	call	_set_white_pixel	;wreg free
  9644                           
  9645                           ;led.c: 448: set_white_pixel(16,12);
  9646  003C6C  0E00               	movlw	0
  9647  003C6E  0100               	movlb	0	; () banked
  9648  003C70  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9649  003C72  0E10               	movlw	16
  9650  003C74  6F71               	movwf	set_white_pixel@x& (0+255),b
  9651  003C76  0E00               	movlw	0
  9652  003C78  0100               	movlb	0	; () banked
  9653  003C7A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9654  003C7C  0E0C               	movlw	12
  9655  003C7E  6F73               	movwf	set_white_pixel@y& (0+255),b
  9656  003C80  EC50  F025         	call	_set_white_pixel	;wreg free
  9657  003C84  0012               	return		;funcret
  9658  003C86                     __end_of_set_kwart:
  9659                           	opt stack 0
  9660                           pclatu	equ	0xFFB
  9661                           pclath	equ	0xFFA
  9662                           tblptru	equ	0xFF8
  9663                           tblptrh	equ	0xFF7
  9664                           tblptrl	equ	0xFF6
  9665                           tablat	equ	0xFF5
  9666                           prodh	equ	0xFF4
  9667                           prodl	equ	0xFF3
  9668                           postinc0	equ	0xFEE
  9669                           fsr0h	equ	0xFEA
  9670                           fsr0l	equ	0xFE9
  9671                           wreg	equ	0xFE8
  9672                           postdec1	equ	0xFE5
  9673                           fsr1h	equ	0xFE2
  9674                           fsr1l	equ	0xFE1
  9675                           bsr	equ	0xFE0
  9676                           indf2	equ	0xFDF
  9677                           postinc2	equ	0xFDE
  9678                           postdec2	equ	0xFDD
  9679                           fsr2h	equ	0xFDA
  9680                           fsr2l	equ	0xFD9
  9681                           status	equ	0xFD8
  9682                           
  9683 ;; *************** function _set_jason *****************
  9684 ;; Defined at:
  9685 ;;		line 802 in file "led.c"
  9686 ;; Parameters:    Size  Location     Type
  9687 ;;		None
  9688 ;; Auto vars:     Size  Location     Type
  9689 ;;  clr             3   17[BANK0 ] struct .
  9690 ;; Return value:  Size  Location     Type
  9691 ;;                  1    wreg      void 
  9692 ;; Registers used:
  9693 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9694 ;; Tracked objects:
  9695 ;;		On entry : 0/0
  9696 ;;		On exit  : 0/0
  9697 ;;		Unchanged: 0/0
  9698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9699 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9700 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9702 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9703 ;;Total ram usage:        3 bytes
  9704 ;; Hardware stack levels used:    1
  9705 ;; Hardware stack levels required when called:    6
  9706 ;; This function calls:
  9707 ;;		_get_random_color
  9708 ;;		_set_pixel
  9709 ;; This function is called by:
  9710 ;;		_set_time_led
  9711 ;; This function uses a non-reentrant model
  9712 ;;
  9713                           
  9714                           	psect	text48
  9715  00313E                     __ptext48:
  9716                           	opt stack 0
  9717  00313E                     _set_jason:
  9718                           	opt stack 15
  9719                           
  9720                           ;led.c: 804: RGBLED clr;
  9721                           ;led.c: 805: get_random_color(&clr);
  9722                           
  9723                           ;incstack = 0
  9724  00313E  0E71               	movlw	low set_jason@clr
  9725  003140  0100               	movlb	0	; () banked
  9726  003142  6F6A               	movwf	get_random_color@clr& (0+255),b
  9727  003144  0E00               	movlw	high set_jason@clr
  9728  003146  0100               	movlb	0	; () banked
  9729  003148  6F6B               	movwf	(get_random_color@clr+1)& (0+255),b
  9730  00314A  EC0B  F01D         	call	_get_random_color	;wreg free
  9731                           
  9732                           ;led.c: 807: set_pixel(1, 4, &clr);
  9733  00314E  0E00               	movlw	0
  9734  003150  0100               	movlb	0	; () banked
  9735  003152  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9736  003154  0E01               	movlw	1
  9737  003156  6F6B               	movwf	set_pixel@x& (0+255),b
  9738  003158  0E00               	movlw	0
  9739  00315A  0100               	movlb	0	; () banked
  9740  00315C  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9741  00315E  0E04               	movlw	4
  9742  003160  6F6D               	movwf	set_pixel@y& (0+255),b
  9743  003162  0E71               	movlw	low set_jason@clr
  9744  003164  0100               	movlb	0	; () banked
  9745  003166  6F6F               	movwf	set_pixel@clr& (0+255),b
  9746  003168  0E00               	movlw	high set_jason@clr
  9747  00316A  0100               	movlb	0	; () banked
  9748  00316C  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9749  00316E  EC7B  F01C         	call	_set_pixel	;wreg free
  9750                           
  9751                           ;led.c: 808: set_pixel(2, 4, &clr);
  9752  003172  0E00               	movlw	0
  9753  003174  0100               	movlb	0	; () banked
  9754  003176  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9755  003178  0E02               	movlw	2
  9756  00317A  6F6B               	movwf	set_pixel@x& (0+255),b
  9757  00317C  0E00               	movlw	0
  9758  00317E  0100               	movlb	0	; () banked
  9759  003180  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9760  003182  0E04               	movlw	4
  9761  003184  6F6D               	movwf	set_pixel@y& (0+255),b
  9762  003186  0E71               	movlw	low set_jason@clr
  9763  003188  0100               	movlb	0	; () banked
  9764  00318A  6F6F               	movwf	set_pixel@clr& (0+255),b
  9765  00318C  0E00               	movlw	high set_jason@clr
  9766  00318E  0100               	movlb	0	; () banked
  9767  003190  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9768  003192  EC7B  F01C         	call	_set_pixel	;wreg free
  9769                           
  9770                           ;led.c: 809: set_pixel(3, 4, &clr);
  9771  003196  0E00               	movlw	0
  9772  003198  0100               	movlb	0	; () banked
  9773  00319A  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9774  00319C  0E03               	movlw	3
  9775  00319E  6F6B               	movwf	set_pixel@x& (0+255),b
  9776  0031A0  0E00               	movlw	0
  9777  0031A2  0100               	movlb	0	; () banked
  9778  0031A4  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9779  0031A6  0E04               	movlw	4
  9780  0031A8  6F6D               	movwf	set_pixel@y& (0+255),b
  9781  0031AA  0E71               	movlw	low set_jason@clr
  9782  0031AC  0100               	movlb	0	; () banked
  9783  0031AE  6F6F               	movwf	set_pixel@clr& (0+255),b
  9784  0031B0  0E00               	movlw	high set_jason@clr
  9785  0031B2  0100               	movlb	0	; () banked
  9786  0031B4  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9787  0031B6  EC7B  F01C         	call	_set_pixel	;wreg free
  9788                           
  9789                           ;led.c: 810: set_pixel(4, 4, &clr);
  9790  0031BA  0E00               	movlw	0
  9791  0031BC  0100               	movlb	0	; () banked
  9792  0031BE  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9793  0031C0  0E04               	movlw	4
  9794  0031C2  6F6B               	movwf	set_pixel@x& (0+255),b
  9795  0031C4  0E00               	movlw	0
  9796  0031C6  0100               	movlb	0	; () banked
  9797  0031C8  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9798  0031CA  0E04               	movlw	4
  9799  0031CC  6F6D               	movwf	set_pixel@y& (0+255),b
  9800  0031CE  0E71               	movlw	low set_jason@clr
  9801  0031D0  0100               	movlb	0	; () banked
  9802  0031D2  6F6F               	movwf	set_pixel@clr& (0+255),b
  9803  0031D4  0E00               	movlw	high set_jason@clr
  9804  0031D6  0100               	movlb	0	; () banked
  9805  0031D8  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9806  0031DA  EC7B  F01C         	call	_set_pixel	;wreg free
  9807                           
  9808                           ;led.c: 811: set_pixel(5, 4, &clr);
  9809  0031DE  0E00               	movlw	0
  9810  0031E0  0100               	movlb	0	; () banked
  9811  0031E2  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
  9812  0031E4  0E05               	movlw	5
  9813  0031E6  6F6B               	movwf	set_pixel@x& (0+255),b
  9814  0031E8  0E00               	movlw	0
  9815  0031EA  0100               	movlb	0	; () banked
  9816  0031EC  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
  9817  0031EE  0E04               	movlw	4
  9818  0031F0  6F6D               	movwf	set_pixel@y& (0+255),b
  9819  0031F2  0E71               	movlw	low set_jason@clr
  9820  0031F4  0100               	movlb	0	; () banked
  9821  0031F6  6F6F               	movwf	set_pixel@clr& (0+255),b
  9822  0031F8  0E00               	movlw	high set_jason@clr
  9823  0031FA  0100               	movlb	0	; () banked
  9824  0031FC  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
  9825  0031FE  EC7B  F01C         	call	_set_pixel	;wreg free
  9826  003202  0012               	return		;funcret
  9827  003204                     __end_of_set_jason:
  9828                           	opt stack 0
  9829                           pclatu	equ	0xFFB
  9830                           pclath	equ	0xFFA
  9831                           tblptru	equ	0xFF8
  9832                           tblptrh	equ	0xFF7
  9833                           tblptrl	equ	0xFF6
  9834                           tablat	equ	0xFF5
  9835                           prodh	equ	0xFF4
  9836                           prodl	equ	0xFF3
  9837                           postinc0	equ	0xFEE
  9838                           fsr0h	equ	0xFEA
  9839                           fsr0l	equ	0xFE9
  9840                           wreg	equ	0xFE8
  9841                           postdec1	equ	0xFE5
  9842                           fsr1h	equ	0xFE2
  9843                           fsr1l	equ	0xFE1
  9844                           bsr	equ	0xFE0
  9845                           indf2	equ	0xFDF
  9846                           postinc2	equ	0xFDE
  9847                           postdec2	equ	0xFDD
  9848                           fsr2h	equ	0xFDA
  9849                           fsr2l	equ	0xFD9
  9850                           status	equ	0xFD8
  9851                           
  9852 ;; *************** function _set_half *****************
  9853 ;; Defined at:
  9854 ;;		line 451 in file "led.c"
  9855 ;; Parameters:    Size  Location     Type
  9856 ;;		None
  9857 ;; Auto vars:     Size  Location     Type
  9858 ;;		None
  9859 ;; Return value:  Size  Location     Type
  9860 ;;                  1    wreg      void 
  9861 ;; Registers used:
  9862 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9863 ;; Tracked objects:
  9864 ;;		On entry : 0/0
  9865 ;;		On exit  : 0/0
  9866 ;;		Unchanged: 0/0
  9867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9869 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9871 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9872 ;;Total ram usage:        0 bytes
  9873 ;; Hardware stack levels used:    1
  9874 ;; Hardware stack levels required when called:    7
  9875 ;; This function calls:
  9876 ;;		_set_white_pixel
  9877 ;; This function is called by:
  9878 ;;		_set_time_led
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           
  9882                           	psect	text49
  9883  004190                     __ptext49:
  9884                           	opt stack 0
  9885  004190                     _set_half:
  9886                           	opt stack 14
  9887                           
  9888                           ;led.c: 453: set_white_pixel(1,11);
  9889                           
  9890                           ;incstack = 0
  9891  004190  0E00               	movlw	0
  9892  004192  0100               	movlb	0	; () banked
  9893  004194  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9894  004196  0E01               	movlw	1
  9895  004198  6F71               	movwf	set_white_pixel@x& (0+255),b
  9896  00419A  0E00               	movlw	0
  9897  00419C  0100               	movlb	0	; () banked
  9898  00419E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9899  0041A0  0E0B               	movlw	11
  9900  0041A2  6F73               	movwf	set_white_pixel@y& (0+255),b
  9901  0041A4  EC50  F025         	call	_set_white_pixel	;wreg free
  9902                           
  9903                           ;led.c: 454: set_white_pixel(2,11);
  9904  0041A8  0E00               	movlw	0
  9905  0041AA  0100               	movlb	0	; () banked
  9906  0041AC  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9907  0041AE  0E02               	movlw	2
  9908  0041B0  6F71               	movwf	set_white_pixel@x& (0+255),b
  9909  0041B2  0E00               	movlw	0
  9910  0041B4  0100               	movlb	0	; () banked
  9911  0041B6  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9912  0041B8  0E0B               	movlw	11
  9913  0041BA  6F73               	movwf	set_white_pixel@y& (0+255),b
  9914  0041BC  EC50  F025         	call	_set_white_pixel	;wreg free
  9915                           
  9916                           ;led.c: 455: set_white_pixel(3,11);
  9917  0041C0  0E00               	movlw	0
  9918  0041C2  0100               	movlb	0	; () banked
  9919  0041C4  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9920  0041C6  0E03               	movlw	3
  9921  0041C8  6F71               	movwf	set_white_pixel@x& (0+255),b
  9922  0041CA  0E00               	movlw	0
  9923  0041CC  0100               	movlb	0	; () banked
  9924  0041CE  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9925  0041D0  0E0B               	movlw	11
  9926  0041D2  6F73               	movwf	set_white_pixel@y& (0+255),b
  9927  0041D4  EC50  F025         	call	_set_white_pixel	;wreg free
  9928                           
  9929                           ;led.c: 456: set_white_pixel(4,11);
  9930  0041D8  0E00               	movlw	0
  9931  0041DA  0100               	movlb	0	; () banked
  9932  0041DC  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
  9933  0041DE  0E04               	movlw	4
  9934  0041E0  6F71               	movwf	set_white_pixel@x& (0+255),b
  9935  0041E2  0E00               	movlw	0
  9936  0041E4  0100               	movlb	0	; () banked
  9937  0041E6  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
  9938  0041E8  0E0B               	movlw	11
  9939  0041EA  6F73               	movwf	set_white_pixel@y& (0+255),b
  9940  0041EC  EC50  F025         	call	_set_white_pixel	;wreg free
  9941  0041F0  0012               	return		;funcret
  9942  0041F2                     __end_of_set_half:
  9943                           	opt stack 0
  9944                           pclatu	equ	0xFFB
  9945                           pclath	equ	0xFFA
  9946                           tblptru	equ	0xFF8
  9947                           tblptrh	equ	0xFF7
  9948                           tblptrl	equ	0xFF6
  9949                           tablat	equ	0xFF5
  9950                           prodh	equ	0xFF4
  9951                           prodl	equ	0xFF3
  9952                           postinc0	equ	0xFEE
  9953                           fsr0h	equ	0xFEA
  9954                           fsr0l	equ	0xFE9
  9955                           wreg	equ	0xFE8
  9956                           postdec1	equ	0xFE5
  9957                           fsr1h	equ	0xFE2
  9958                           fsr1l	equ	0xFE1
  9959                           bsr	equ	0xFE0
  9960                           indf2	equ	0xFDF
  9961                           postinc2	equ	0xFDE
  9962                           postdec2	equ	0xFDD
  9963                           fsr2h	equ	0xFDA
  9964                           fsr2l	equ	0xFD9
  9965                           status	equ	0xFD8
  9966                           
  9967 ;; *************** function _set_gelukkige *****************
  9968 ;; Defined at:
  9969 ;;		line 728 in file "led.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;		None
  9972 ;; Auto vars:     Size  Location     Type
  9973 ;;  clr             3   17[BANK0 ] struct .
  9974 ;; Return value:  Size  Location     Type
  9975 ;;                  1    wreg      void 
  9976 ;; Registers used:
  9977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9978 ;; Tracked objects:
  9979 ;;		On entry : 0/0
  9980 ;;		On exit  : 0/0
  9981 ;;		Unchanged: 0/0
  9982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9984 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9986 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9987 ;;Total ram usage:        3 bytes
  9988 ;; Hardware stack levels used:    1
  9989 ;; Hardware stack levels required when called:    6
  9990 ;; This function calls:
  9991 ;;		_get_random_color
  9992 ;;		_set_pixel
  9993 ;; This function is called by:
  9994 ;;		_set_time_led
  9995 ;; This function uses a non-reentrant model
  9996 ;;
  9997                           
  9998                           	psect	text50
  9999  002490                     __ptext50:
 10000                           	opt stack 0
 10001  002490                     _set_gelukkige:
 10002                           	opt stack 15
 10003                           
 10004                           ;led.c: 730: RGBLED clr;
 10005                           ;led.c: 731: get_random_color(&clr);
 10006                           
 10007                           ;incstack = 0
 10008  002490  0E71               	movlw	low set_gelukkige@clr
 10009  002492  0100               	movlb	0	; () banked
 10010  002494  6F6A               	movwf	get_random_color@clr& (0+255),b
 10011  002496  0E00               	movlw	high set_gelukkige@clr
 10012  002498  0100               	movlb	0	; () banked
 10013  00249A  6F6B               	movwf	(get_random_color@clr+1)& (0+255),b
 10014  00249C  EC0B  F01D         	call	_get_random_color	;wreg free
 10015                           
 10016                           ;led.c: 733: set_pixel(1, 9, &clr);
 10017  0024A0  0E00               	movlw	0
 10018  0024A2  0100               	movlb	0	; () banked
 10019  0024A4  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10020  0024A6  0E01               	movlw	1
 10021  0024A8  6F6B               	movwf	set_pixel@x& (0+255),b
 10022  0024AA  0E00               	movlw	0
 10023  0024AC  0100               	movlb	0	; () banked
 10024  0024AE  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10025  0024B0  0E09               	movlw	9
 10026  0024B2  6F6D               	movwf	set_pixel@y& (0+255),b
 10027  0024B4  0E71               	movlw	low set_gelukkige@clr
 10028  0024B6  0100               	movlb	0	; () banked
 10029  0024B8  6F6F               	movwf	set_pixel@clr& (0+255),b
 10030  0024BA  0E00               	movlw	high set_gelukkige@clr
 10031  0024BC  0100               	movlb	0	; () banked
 10032  0024BE  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10033  0024C0  EC7B  F01C         	call	_set_pixel	;wreg free
 10034                           
 10035                           ;led.c: 734: set_pixel(2, 9, &clr);
 10036  0024C4  0E00               	movlw	0
 10037  0024C6  0100               	movlb	0	; () banked
 10038  0024C8  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10039  0024CA  0E02               	movlw	2
 10040  0024CC  6F6B               	movwf	set_pixel@x& (0+255),b
 10041  0024CE  0E00               	movlw	0
 10042  0024D0  0100               	movlb	0	; () banked
 10043  0024D2  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10044  0024D4  0E09               	movlw	9
 10045  0024D6  6F6D               	movwf	set_pixel@y& (0+255),b
 10046  0024D8  0E71               	movlw	low set_gelukkige@clr
 10047  0024DA  0100               	movlb	0	; () banked
 10048  0024DC  6F6F               	movwf	set_pixel@clr& (0+255),b
 10049  0024DE  0E00               	movlw	high set_gelukkige@clr
 10050  0024E0  0100               	movlb	0	; () banked
 10051  0024E2  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10052  0024E4  EC7B  F01C         	call	_set_pixel	;wreg free
 10053                           
 10054                           ;led.c: 735: set_pixel(3, 9, &clr);
 10055  0024E8  0E00               	movlw	0
 10056  0024EA  0100               	movlb	0	; () banked
 10057  0024EC  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10058  0024EE  0E03               	movlw	3
 10059  0024F0  6F6B               	movwf	set_pixel@x& (0+255),b
 10060  0024F2  0E00               	movlw	0
 10061  0024F4  0100               	movlb	0	; () banked
 10062  0024F6  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10063  0024F8  0E09               	movlw	9
 10064  0024FA  6F6D               	movwf	set_pixel@y& (0+255),b
 10065  0024FC  0E71               	movlw	low set_gelukkige@clr
 10066  0024FE  0100               	movlb	0	; () banked
 10067  002500  6F6F               	movwf	set_pixel@clr& (0+255),b
 10068  002502  0E00               	movlw	high set_gelukkige@clr
 10069  002504  0100               	movlb	0	; () banked
 10070  002506  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10071  002508  EC7B  F01C         	call	_set_pixel	;wreg free
 10072                           
 10073                           ;led.c: 736: set_pixel(4, 9, &clr);
 10074  00250C  0E00               	movlw	0
 10075  00250E  0100               	movlb	0	; () banked
 10076  002510  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10077  002512  0E04               	movlw	4
 10078  002514  6F6B               	movwf	set_pixel@x& (0+255),b
 10079  002516  0E00               	movlw	0
 10080  002518  0100               	movlb	0	; () banked
 10081  00251A  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10082  00251C  0E09               	movlw	9
 10083  00251E  6F6D               	movwf	set_pixel@y& (0+255),b
 10084  002520  0E71               	movlw	low set_gelukkige@clr
 10085  002522  0100               	movlb	0	; () banked
 10086  002524  6F6F               	movwf	set_pixel@clr& (0+255),b
 10087  002526  0E00               	movlw	high set_gelukkige@clr
 10088  002528  0100               	movlb	0	; () banked
 10089  00252A  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10090  00252C  EC7B  F01C         	call	_set_pixel	;wreg free
 10091                           
 10092                           ;led.c: 737: set_pixel(5, 9, &clr);
 10093  002530  0E00               	movlw	0
 10094  002532  0100               	movlb	0	; () banked
 10095  002534  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10096  002536  0E05               	movlw	5
 10097  002538  6F6B               	movwf	set_pixel@x& (0+255),b
 10098  00253A  0E00               	movlw	0
 10099  00253C  0100               	movlb	0	; () banked
 10100  00253E  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10101  002540  0E09               	movlw	9
 10102  002542  6F6D               	movwf	set_pixel@y& (0+255),b
 10103  002544  0E71               	movlw	low set_gelukkige@clr
 10104  002546  0100               	movlb	0	; () banked
 10105  002548  6F6F               	movwf	set_pixel@clr& (0+255),b
 10106  00254A  0E00               	movlw	high set_gelukkige@clr
 10107  00254C  0100               	movlb	0	; () banked
 10108  00254E  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10109  002550  EC7B  F01C         	call	_set_pixel	;wreg free
 10110                           
 10111                           ;led.c: 738: set_pixel(6, 9, &clr);
 10112  002554  0E00               	movlw	0
 10113  002556  0100               	movlb	0	; () banked
 10114  002558  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10115  00255A  0E06               	movlw	6
 10116  00255C  6F6B               	movwf	set_pixel@x& (0+255),b
 10117  00255E  0E00               	movlw	0
 10118  002560  0100               	movlb	0	; () banked
 10119  002562  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10120  002564  0E09               	movlw	9
 10121  002566  6F6D               	movwf	set_pixel@y& (0+255),b
 10122  002568  0E71               	movlw	low set_gelukkige@clr
 10123  00256A  0100               	movlb	0	; () banked
 10124  00256C  6F6F               	movwf	set_pixel@clr& (0+255),b
 10125  00256E  0E00               	movlw	high set_gelukkige@clr
 10126  002570  0100               	movlb	0	; () banked
 10127  002572  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10128  002574  EC7B  F01C         	call	_set_pixel	;wreg free
 10129                           
 10130                           ;led.c: 739: set_pixel(7, 9, &clr);
 10131  002578  0E00               	movlw	0
 10132  00257A  0100               	movlb	0	; () banked
 10133  00257C  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10134  00257E  0E07               	movlw	7
 10135  002580  6F6B               	movwf	set_pixel@x& (0+255),b
 10136  002582  0E00               	movlw	0
 10137  002584  0100               	movlb	0	; () banked
 10138  002586  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10139  002588  0E09               	movlw	9
 10140  00258A  6F6D               	movwf	set_pixel@y& (0+255),b
 10141  00258C  0E71               	movlw	low set_gelukkige@clr
 10142  00258E  0100               	movlb	0	; () banked
 10143  002590  6F6F               	movwf	set_pixel@clr& (0+255),b
 10144  002592  0E00               	movlw	high set_gelukkige@clr
 10145  002594  0100               	movlb	0	; () banked
 10146  002596  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10147  002598  EC7B  F01C         	call	_set_pixel	;wreg free
 10148                           
 10149                           ;led.c: 740: set_pixel(8, 9, &clr);
 10150  00259C  0E00               	movlw	0
 10151  00259E  0100               	movlb	0	; () banked
 10152  0025A0  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10153  0025A2  0E08               	movlw	8
 10154  0025A4  6F6B               	movwf	set_pixel@x& (0+255),b
 10155  0025A6  0E00               	movlw	0
 10156  0025A8  0100               	movlb	0	; () banked
 10157  0025AA  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10158  0025AC  0E09               	movlw	9
 10159  0025AE  6F6D               	movwf	set_pixel@y& (0+255),b
 10160  0025B0  0E71               	movlw	low set_gelukkige@clr
 10161  0025B2  0100               	movlb	0	; () banked
 10162  0025B4  6F6F               	movwf	set_pixel@clr& (0+255),b
 10163  0025B6  0E00               	movlw	high set_gelukkige@clr
 10164  0025B8  0100               	movlb	0	; () banked
 10165  0025BA  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10166  0025BC  EC7B  F01C         	call	_set_pixel	;wreg free
 10167                           
 10168                           ;led.c: 741: set_pixel(9, 9, &clr);
 10169  0025C0  0E00               	movlw	0
 10170  0025C2  0100               	movlb	0	; () banked
 10171  0025C4  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10172  0025C6  0E09               	movlw	9
 10173  0025C8  6F6B               	movwf	set_pixel@x& (0+255),b
 10174  0025CA  0E00               	movlw	0
 10175  0025CC  0100               	movlb	0	; () banked
 10176  0025CE  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10177  0025D0  0E09               	movlw	9
 10178  0025D2  6F6D               	movwf	set_pixel@y& (0+255),b
 10179  0025D4  0E71               	movlw	low set_gelukkige@clr
 10180  0025D6  0100               	movlb	0	; () banked
 10181  0025D8  6F6F               	movwf	set_pixel@clr& (0+255),b
 10182  0025DA  0E00               	movlw	high set_gelukkige@clr
 10183  0025DC  0100               	movlb	0	; () banked
 10184  0025DE  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10185  0025E0  EC7B  F01C         	call	_set_pixel	;wreg free
 10186  0025E4  0012               	return		;funcret
 10187  0025E6                     __end_of_set_gelukkige:
 10188                           	opt stack 0
 10189                           pclatu	equ	0xFFB
 10190                           pclath	equ	0xFFA
 10191                           tblptru	equ	0xFF8
 10192                           tblptrh	equ	0xFF7
 10193                           tblptrl	equ	0xFF6
 10194                           tablat	equ	0xFF5
 10195                           prodh	equ	0xFF4
 10196                           prodl	equ	0xFF3
 10197                           postinc0	equ	0xFEE
 10198                           fsr0h	equ	0xFEA
 10199                           fsr0l	equ	0xFE9
 10200                           wreg	equ	0xFE8
 10201                           postdec1	equ	0xFE5
 10202                           fsr1h	equ	0xFE2
 10203                           fsr1l	equ	0xFE1
 10204                           bsr	equ	0xFE0
 10205                           indf2	equ	0xFDF
 10206                           postinc2	equ	0xFDE
 10207                           postdec2	equ	0xFDD
 10208                           fsr2h	equ	0xFDA
 10209                           fsr2l	equ	0xFD9
 10210                           status	equ	0xFD8
 10211                           
 10212 ;; *************** function _set_en_mj *****************
 10213 ;; Defined at:
 10214 ;;		line 793 in file "led.c"
 10215 ;; Parameters:    Size  Location     Type
 10216 ;;		None
 10217 ;; Auto vars:     Size  Location     Type
 10218 ;;  clr             3   17[BANK0 ] struct .
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  1    wreg      void 
 10221 ;; Registers used:
 10222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10229 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10231 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10232 ;;Total ram usage:        3 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:    6
 10235 ;; This function calls:
 10236 ;;		_get_random_color
 10237 ;;		_set_pixel
 10238 ;; This function is called by:
 10239 ;;		_set_time_led
 10240 ;; This function uses a non-reentrant model
 10241 ;;
 10242                           
 10243                           	psect	text51
 10244  004316                     __ptext51:
 10245                           	opt stack 0
 10246  004316                     _set_en_mj:
 10247                           	opt stack 15
 10248                           
 10249                           ;led.c: 795: RGBLED clr;
 10250                           ;led.c: 796: get_random_color(&clr);
 10251                           
 10252                           ;incstack = 0
 10253  004316  0E71               	movlw	low set_en_mj@clr
 10254  004318  0100               	movlb	0	; () banked
 10255  00431A  6F6A               	movwf	get_random_color@clr& (0+255),b
 10256  00431C  0E00               	movlw	high set_en_mj@clr
 10257  00431E  0100               	movlb	0	; () banked
 10258  004320  6F6B               	movwf	(get_random_color@clr+1)& (0+255),b
 10259  004322  EC0B  F01D         	call	_get_random_color	;wreg free
 10260                           
 10261                           ;led.c: 798: set_pixel(8, 5, &clr);
 10262  004326  0E00               	movlw	0
 10263  004328  0100               	movlb	0	; () banked
 10264  00432A  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10265  00432C  0E08               	movlw	8
 10266  00432E  6F6B               	movwf	set_pixel@x& (0+255),b
 10267  004330  0E00               	movlw	0
 10268  004332  0100               	movlb	0	; () banked
 10269  004334  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10270  004336  0E05               	movlw	5
 10271  004338  6F6D               	movwf	set_pixel@y& (0+255),b
 10272  00433A  0E71               	movlw	low set_en_mj@clr
 10273  00433C  0100               	movlb	0	; () banked
 10274  00433E  6F6F               	movwf	set_pixel@clr& (0+255),b
 10275  004340  0E00               	movlw	high set_en_mj@clr
 10276  004342  0100               	movlb	0	; () banked
 10277  004344  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10278  004346  EC7B  F01C         	call	_set_pixel	;wreg free
 10279                           
 10280                           ;led.c: 799: set_pixel(9, 5, &clr);
 10281  00434A  0E00               	movlw	0
 10282  00434C  0100               	movlb	0	; () banked
 10283  00434E  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 10284  004350  0E09               	movlw	9
 10285  004352  6F6B               	movwf	set_pixel@x& (0+255),b
 10286  004354  0E00               	movlw	0
 10287  004356  0100               	movlb	0	; () banked
 10288  004358  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 10289  00435A  0E05               	movlw	5
 10290  00435C  6F6D               	movwf	set_pixel@y& (0+255),b
 10291  00435E  0E71               	movlw	low set_en_mj@clr
 10292  004360  0100               	movlb	0	; () banked
 10293  004362  6F6F               	movwf	set_pixel@clr& (0+255),b
 10294  004364  0E00               	movlw	high set_en_mj@clr
 10295  004366  0100               	movlb	0	; () banked
 10296  004368  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 10297  00436A  EC7B  F01C         	call	_set_pixel	;wreg free
 10298  00436E  0012               	return		;funcret
 10299  004370                     __end_of_set_en_mj:
 10300                           	opt stack 0
 10301                           pclatu	equ	0xFFB
 10302                           pclath	equ	0xFFA
 10303                           tblptru	equ	0xFF8
 10304                           tblptrh	equ	0xFF7
 10305                           tblptrl	equ	0xFF6
 10306                           tablat	equ	0xFF5
 10307                           prodh	equ	0xFF4
 10308                           prodl	equ	0xFF3
 10309                           postinc0	equ	0xFEE
 10310                           fsr0h	equ	0xFEA
 10311                           fsr0l	equ	0xFE9
 10312                           wreg	equ	0xFE8
 10313                           postdec1	equ	0xFE5
 10314                           fsr1h	equ	0xFE2
 10315                           fsr1l	equ	0xFE1
 10316                           bsr	equ	0xFE0
 10317                           indf2	equ	0xFDF
 10318                           postinc2	equ	0xFDE
 10319                           postdec2	equ	0xFDD
 10320                           fsr2h	equ	0xFDA
 10321                           fsr2l	equ	0xFD9
 10322                           status	equ	0xFD8
 10323                           
 10324 ;; *************** function _set_en *****************
 10325 ;; Defined at:
 10326 ;;		line 587 in file "led.c"
 10327 ;; Parameters:    Size  Location     Type
 10328 ;;		None
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;		None
 10331 ;; Return value:  Size  Location     Type
 10332 ;;                  1    wreg      void 
 10333 ;; Registers used:
 10334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10335 ;; Tracked objects:
 10336 ;;		On entry : 0/0
 10337 ;;		On exit  : 0/0
 10338 ;;		Unchanged: 0/0
 10339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10341 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10343 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10344 ;;Total ram usage:        0 bytes
 10345 ;; Hardware stack levels used:    1
 10346 ;; Hardware stack levels required when called:    7
 10347 ;; This function calls:
 10348 ;;		_set_white_pixel
 10349 ;; This function is called by:
 10350 ;;		_set_time_led
 10351 ;; This function uses a non-reentrant model
 10352 ;;
 10353                           
 10354                           	psect	text52
 10355  004A3E                     __ptext52:
 10356                           	opt stack 0
 10357  004A3E                     _set_en:
 10358                           	opt stack 14
 10359                           
 10360                           ;led.c: 589: set_white_pixel(15,8);
 10361                           
 10362                           ;incstack = 0
 10363  004A3E  0E00               	movlw	0
 10364  004A40  0100               	movlb	0	; () banked
 10365  004A42  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10366  004A44  0E0F               	movlw	15
 10367  004A46  6F71               	movwf	set_white_pixel@x& (0+255),b
 10368  004A48  0E00               	movlw	0
 10369  004A4A  0100               	movlb	0	; () banked
 10370  004A4C  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10371  004A4E  0E08               	movlw	8
 10372  004A50  6F73               	movwf	set_white_pixel@y& (0+255),b
 10373  004A52  EC50  F025         	call	_set_white_pixel	;wreg free
 10374                           
 10375                           ;led.c: 590: set_white_pixel(16,8);
 10376  004A56  0E00               	movlw	0
 10377  004A58  0100               	movlb	0	; () banked
 10378  004A5A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10379  004A5C  0E10               	movlw	16
 10380  004A5E  6F71               	movwf	set_white_pixel@x& (0+255),b
 10381  004A60  0E00               	movlw	0
 10382  004A62  0100               	movlb	0	; () banked
 10383  004A64  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10384  004A66  0E08               	movlw	8
 10385  004A68  6F73               	movwf	set_white_pixel@y& (0+255),b
 10386  004A6A  EC50  F025         	call	_set_white_pixel	;wreg free
 10387  004A6E  0012               	return		;funcret
 10388  004A70                     __end_of_set_en:
 10389                           	opt stack 0
 10390                           pclatu	equ	0xFFB
 10391                           pclath	equ	0xFFA
 10392                           tblptru	equ	0xFF8
 10393                           tblptrh	equ	0xFF7
 10394                           tblptrl	equ	0xFF6
 10395                           tablat	equ	0xFF5
 10396                           prodh	equ	0xFF4
 10397                           prodl	equ	0xFF3
 10398                           postinc0	equ	0xFEE
 10399                           fsr0h	equ	0xFEA
 10400                           fsr0l	equ	0xFE9
 10401                           wreg	equ	0xFE8
 10402                           postdec1	equ	0xFE5
 10403                           fsr1h	equ	0xFE2
 10404                           fsr1l	equ	0xFE1
 10405                           bsr	equ	0xFE0
 10406                           indf2	equ	0xFDF
 10407                           postinc2	equ	0xFDE
 10408                           postdec2	equ	0xFDD
 10409                           fsr2h	equ	0xFDA
 10410                           fsr2l	equ	0xFD9
 10411                           status	equ	0xFD8
 10412                           
 10413 ;; *************** function _set_elf_uur *****************
 10414 ;; Defined at:
 10415 ;;		line 704 in file "led.c"
 10416 ;; Parameters:    Size  Location     Type
 10417 ;;		None
 10418 ;; Auto vars:     Size  Location     Type
 10419 ;;		None
 10420 ;; Return value:  Size  Location     Type
 10421 ;;                  1    wreg      void 
 10422 ;; Registers used:
 10423 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10424 ;; Tracked objects:
 10425 ;;		On entry : 0/0
 10426 ;;		On exit  : 0/0
 10427 ;;		Unchanged: 0/0
 10428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10432 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10433 ;;Total ram usage:        0 bytes
 10434 ;; Hardware stack levels used:    1
 10435 ;; Hardware stack levels required when called:    7
 10436 ;; This function calls:
 10437 ;;		_set_white_pixel
 10438 ;; This function is called by:
 10439 ;;		_set_time_led
 10440 ;; This function uses a non-reentrant model
 10441 ;;
 10442                           
 10443                           	psect	text53
 10444  004678                     __ptext53:
 10445                           	opt stack 0
 10446  004678                     _set_elf_uur:
 10447                           	opt stack 14
 10448                           
 10449                           ;led.c: 706: set_white_pixel(1,1);
 10450                           
 10451                           ;incstack = 0
 10452  004678  0E00               	movlw	0
 10453  00467A  0100               	movlb	0	; () banked
 10454  00467C  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10455  00467E  0E01               	movlw	1
 10456  004680  6F71               	movwf	set_white_pixel@x& (0+255),b
 10457  004682  0E00               	movlw	0
 10458  004684  0100               	movlb	0	; () banked
 10459  004686  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10460  004688  0E01               	movlw	1
 10461  00468A  6F73               	movwf	set_white_pixel@y& (0+255),b
 10462  00468C  EC50  F025         	call	_set_white_pixel	;wreg free
 10463                           
 10464                           ;led.c: 707: set_white_pixel(2,1);
 10465  004690  0E00               	movlw	0
 10466  004692  0100               	movlb	0	; () banked
 10467  004694  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10468  004696  0E02               	movlw	2
 10469  004698  6F71               	movwf	set_white_pixel@x& (0+255),b
 10470  00469A  0E00               	movlw	0
 10471  00469C  0100               	movlb	0	; () banked
 10472  00469E  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10473  0046A0  0E01               	movlw	1
 10474  0046A2  6F73               	movwf	set_white_pixel@y& (0+255),b
 10475  0046A4  EC50  F025         	call	_set_white_pixel	;wreg free
 10476                           
 10477                           ;led.c: 708: set_white_pixel(3,1);
 10478  0046A8  0E00               	movlw	0
 10479  0046AA  0100               	movlb	0	; () banked
 10480  0046AC  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10481  0046AE  0E03               	movlw	3
 10482  0046B0  6F71               	movwf	set_white_pixel@x& (0+255),b
 10483  0046B2  0E00               	movlw	0
 10484  0046B4  0100               	movlb	0	; () banked
 10485  0046B6  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10486  0046B8  0E01               	movlw	1
 10487  0046BA  6F73               	movwf	set_white_pixel@y& (0+255),b
 10488  0046BC  EC50  F025         	call	_set_white_pixel	;wreg free
 10489  0046C0  0012               	return		;funcret
 10490  0046C2                     __end_of_set_elf_uur:
 10491                           	opt stack 0
 10492                           pclatu	equ	0xFFB
 10493                           pclath	equ	0xFFA
 10494                           tblptru	equ	0xFF8
 10495                           tblptrh	equ	0xFF7
 10496                           tblptrl	equ	0xFF6
 10497                           tablat	equ	0xFF5
 10498                           prodh	equ	0xFF4
 10499                           prodl	equ	0xFF3
 10500                           postinc0	equ	0xFEE
 10501                           fsr0h	equ	0xFEA
 10502                           fsr0l	equ	0xFE9
 10503                           wreg	equ	0xFE8
 10504                           postdec1	equ	0xFE5
 10505                           fsr1h	equ	0xFE2
 10506                           fsr1l	equ	0xFE1
 10507                           bsr	equ	0xFE0
 10508                           indf2	equ	0xFDF
 10509                           postinc2	equ	0xFDE
 10510                           postdec2	equ	0xFDD
 10511                           fsr2h	equ	0xFDA
 10512                           fsr2l	equ	0xFD9
 10513                           status	equ	0xFD8
 10514                           
 10515 ;; *************** function _set_elf_min *****************
 10516 ;; Defined at:
 10517 ;;		line 544 in file "led.c"
 10518 ;; Parameters:    Size  Location     Type
 10519 ;;		None
 10520 ;; Auto vars:     Size  Location     Type
 10521 ;;		None
 10522 ;; Return value:  Size  Location     Type
 10523 ;;                  1    wreg      void 
 10524 ;; Registers used:
 10525 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10526 ;; Tracked objects:
 10527 ;;		On entry : 0/0
 10528 ;;		On exit  : 0/0
 10529 ;;		Unchanged: 0/0
 10530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10531 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10532 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10533 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10534 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10535 ;;Total ram usage:        0 bytes
 10536 ;; Hardware stack levels used:    1
 10537 ;; Hardware stack levels required when called:    7
 10538 ;; This function calls:
 10539 ;;		_set_white_pixel
 10540 ;; This function is called by:
 10541 ;;		_set_time_led
 10542 ;; This function uses a non-reentrant model
 10543 ;;
 10544                           
 10545                           	psect	text54
 10546  0046C2                     __ptext54:
 10547                           	opt stack 0
 10548  0046C2                     _set_elf_min:
 10549                           	opt stack 14
 10550                           
 10551                           ;led.c: 546: set_white_pixel(10,10);
 10552                           
 10553                           ;incstack = 0
 10554  0046C2  0E00               	movlw	0
 10555  0046C4  0100               	movlb	0	; () banked
 10556  0046C6  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10557  0046C8  0E0A               	movlw	10
 10558  0046CA  6F71               	movwf	set_white_pixel@x& (0+255),b
 10559  0046CC  0E00               	movlw	0
 10560  0046CE  0100               	movlb	0	; () banked
 10561  0046D0  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10562  0046D2  0E0A               	movlw	10
 10563  0046D4  6F73               	movwf	set_white_pixel@y& (0+255),b
 10564  0046D6  EC50  F025         	call	_set_white_pixel	;wreg free
 10565                           
 10566                           ;led.c: 547: set_white_pixel(11,10);
 10567  0046DA  0E00               	movlw	0
 10568  0046DC  0100               	movlb	0	; () banked
 10569  0046DE  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10570  0046E0  0E0B               	movlw	11
 10571  0046E2  6F71               	movwf	set_white_pixel@x& (0+255),b
 10572  0046E4  0E00               	movlw	0
 10573  0046E6  0100               	movlb	0	; () banked
 10574  0046E8  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10575  0046EA  0E0A               	movlw	10
 10576  0046EC  6F73               	movwf	set_white_pixel@y& (0+255),b
 10577  0046EE  EC50  F025         	call	_set_white_pixel	;wreg free
 10578                           
 10579                           ;led.c: 548: set_white_pixel(12,10);
 10580  0046F2  0E00               	movlw	0
 10581  0046F4  0100               	movlb	0	; () banked
 10582  0046F6  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10583  0046F8  0E0C               	movlw	12
 10584  0046FA  6F71               	movwf	set_white_pixel@x& (0+255),b
 10585  0046FC  0E00               	movlw	0
 10586  0046FE  0100               	movlb	0	; () banked
 10587  004700  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10588  004702  0E0A               	movlw	10
 10589  004704  6F73               	movwf	set_white_pixel@y& (0+255),b
 10590  004706  EC50  F025         	call	_set_white_pixel	;wreg free
 10591  00470A  0012               	return		;funcret
 10592  00470C                     __end_of_set_elf_min:
 10593                           	opt stack 0
 10594                           pclatu	equ	0xFFB
 10595                           pclath	equ	0xFFA
 10596                           tblptru	equ	0xFF8
 10597                           tblptrh	equ	0xFF7
 10598                           tblptrl	equ	0xFF6
 10599                           tablat	equ	0xFF5
 10600                           prodh	equ	0xFF4
 10601                           prodl	equ	0xFF3
 10602                           postinc0	equ	0xFEE
 10603                           fsr0h	equ	0xFEA
 10604                           fsr0l	equ	0xFE9
 10605                           wreg	equ	0xFE8
 10606                           postdec1	equ	0xFE5
 10607                           fsr1h	equ	0xFE2
 10608                           fsr1l	equ	0xFE1
 10609                           bsr	equ	0xFE0
 10610                           indf2	equ	0xFDF
 10611                           postinc2	equ	0xFDE
 10612                           postdec2	equ	0xFDD
 10613                           fsr2h	equ	0xFDA
 10614                           fsr2l	equ	0xFD9
 10615                           status	equ	0xFD8
 10616                           
 10617 ;; *************** function _set_een_min *****************
 10618 ;; Defined at:
 10619 ;;		line 475 in file "led.c"
 10620 ;; Parameters:    Size  Location     Type
 10621 ;;		None
 10622 ;; Auto vars:     Size  Location     Type
 10623 ;;		None
 10624 ;; Return value:  Size  Location     Type
 10625 ;;                  1    wreg      void 
 10626 ;; Registers used:
 10627 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10628 ;; Tracked objects:
 10629 ;;		On entry : 0/0
 10630 ;;		On exit  : 0/0
 10631 ;;		Unchanged: 0/0
 10632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10637 ;;Total ram usage:        0 bytes
 10638 ;; Hardware stack levels used:    1
 10639 ;; Hardware stack levels required when called:    7
 10640 ;; This function calls:
 10641 ;;		_set_white_pixel
 10642 ;; This function is called by:
 10643 ;;		_set_time_led
 10644 ;; This function uses a non-reentrant model
 10645 ;;
 10646                           
 10647                           	psect	text55
 10648  00470C                     __ptext55:
 10649                           	opt stack 0
 10650  00470C                     _set_een_min:
 10651                           	opt stack 14
 10652                           
 10653                           ;led.c: 477: set_white_pixel(7,11);
 10654                           
 10655                           ;incstack = 0
 10656  00470C  0E00               	movlw	0
 10657  00470E  0100               	movlb	0	; () banked
 10658  004710  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10659  004712  0E07               	movlw	7
 10660  004714  6F71               	movwf	set_white_pixel@x& (0+255),b
 10661  004716  0E00               	movlw	0
 10662  004718  0100               	movlb	0	; () banked
 10663  00471A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10664  00471C  0E0B               	movlw	11
 10665  00471E  6F73               	movwf	set_white_pixel@y& (0+255),b
 10666  004720  EC50  F025         	call	_set_white_pixel	;wreg free
 10667                           
 10668                           ;led.c: 478: set_white_pixel(8,11);
 10669  004724  0E00               	movlw	0
 10670  004726  0100               	movlb	0	; () banked
 10671  004728  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10672  00472A  0E08               	movlw	8
 10673  00472C  6F71               	movwf	set_white_pixel@x& (0+255),b
 10674  00472E  0E00               	movlw	0
 10675  004730  0100               	movlb	0	; () banked
 10676  004732  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10677  004734  0E0B               	movlw	11
 10678  004736  6F73               	movwf	set_white_pixel@y& (0+255),b
 10679  004738  EC50  F025         	call	_set_white_pixel	;wreg free
 10680                           
 10681                           ;led.c: 479: set_white_pixel(9,11);
 10682  00473C  0E00               	movlw	0
 10683  00473E  0100               	movlb	0	; () banked
 10684  004740  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10685  004742  0E09               	movlw	9
 10686  004744  6F71               	movwf	set_white_pixel@x& (0+255),b
 10687  004746  0E00               	movlw	0
 10688  004748  0100               	movlb	0	; () banked
 10689  00474A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10690  00474C  0E0B               	movlw	11
 10691  00474E  6F73               	movwf	set_white_pixel@y& (0+255),b
 10692  004750  EC50  F025         	call	_set_white_pixel	;wreg free
 10693  004754  0012               	return		;funcret
 10694  004756                     __end_of_set_een_min:
 10695                           	opt stack 0
 10696                           pclatu	equ	0xFFB
 10697                           pclath	equ	0xFFA
 10698                           tblptru	equ	0xFF8
 10699                           tblptrh	equ	0xFF7
 10700                           tblptrl	equ	0xFF6
 10701                           tablat	equ	0xFF5
 10702                           prodh	equ	0xFF4
 10703                           prodl	equ	0xFF3
 10704                           postinc0	equ	0xFEE
 10705                           fsr0h	equ	0xFEA
 10706                           fsr0l	equ	0xFE9
 10707                           wreg	equ	0xFE8
 10708                           postdec1	equ	0xFE5
 10709                           fsr1h	equ	0xFE2
 10710                           fsr1l	equ	0xFE1
 10711                           bsr	equ	0xFE0
 10712                           indf2	equ	0xFDF
 10713                           postinc2	equ	0xFDE
 10714                           postdec2	equ	0xFDD
 10715                           fsr2h	equ	0xFDA
 10716                           fsr2l	equ	0xFD9
 10717                           status	equ	0xFD8
 10718                           
 10719 ;; *************** function _set_een_hour *****************
 10720 ;; Defined at:
 10721 ;;		line 628 in file "led.c"
 10722 ;; Parameters:    Size  Location     Type
 10723 ;;		None
 10724 ;; Auto vars:     Size  Location     Type
 10725 ;;		None
 10726 ;; Return value:  Size  Location     Type
 10727 ;;                  1    wreg      void 
 10728 ;; Registers used:
 10729 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10730 ;; Tracked objects:
 10731 ;;		On entry : 0/0
 10732 ;;		On exit  : 0/0
 10733 ;;		Unchanged: 0/0
 10734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10735 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10738 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10739 ;;Total ram usage:        0 bytes
 10740 ;; Hardware stack levels used:    1
 10741 ;; Hardware stack levels required when called:    7
 10742 ;; This function calls:
 10743 ;;		_set_white_pixel
 10744 ;; This function is called by:
 10745 ;;		_set_time_led
 10746 ;; This function uses a non-reentrant model
 10747 ;;
 10748                           
 10749                           	psect	text56
 10750  004756                     __ptext56:
 10751                           	opt stack 0
 10752  004756                     _set_een_hour:
 10753                           	opt stack 14
 10754                           
 10755                           ;led.c: 630: set_white_pixel(1,3);
 10756                           
 10757                           ;incstack = 0
 10758  004756  0E00               	movlw	0
 10759  004758  0100               	movlb	0	; () banked
 10760  00475A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10761  00475C  0E01               	movlw	1
 10762  00475E  6F71               	movwf	set_white_pixel@x& (0+255),b
 10763  004760  0E00               	movlw	0
 10764  004762  0100               	movlb	0	; () banked
 10765  004764  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10766  004766  0E03               	movlw	3
 10767  004768  6F73               	movwf	set_white_pixel@y& (0+255),b
 10768  00476A  EC50  F025         	call	_set_white_pixel	;wreg free
 10769                           
 10770                           ;led.c: 631: set_white_pixel(2,3);
 10771  00476E  0E00               	movlw	0
 10772  004770  0100               	movlb	0	; () banked
 10773  004772  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10774  004774  0E02               	movlw	2
 10775  004776  6F71               	movwf	set_white_pixel@x& (0+255),b
 10776  004778  0E00               	movlw	0
 10777  00477A  0100               	movlb	0	; () banked
 10778  00477C  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10779  00477E  0E03               	movlw	3
 10780  004780  6F73               	movwf	set_white_pixel@y& (0+255),b
 10781  004782  EC50  F025         	call	_set_white_pixel	;wreg free
 10782                           
 10783                           ;led.c: 632: set_white_pixel(3,3);
 10784  004786  0E00               	movlw	0
 10785  004788  0100               	movlb	0	; () banked
 10786  00478A  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10787  00478C  0E03               	movlw	3
 10788  00478E  6F71               	movwf	set_white_pixel@x& (0+255),b
 10789  004790  0E00               	movlw	0
 10790  004792  0100               	movlb	0	; () banked
 10791  004794  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10792  004796  0E03               	movlw	3
 10793  004798  6F73               	movwf	set_white_pixel@y& (0+255),b
 10794  00479A  EC50  F025         	call	_set_white_pixel	;wreg free
 10795  00479E  0012               	return		;funcret
 10796  0047A0                     __end_of_set_een_hour:
 10797                           	opt stack 0
 10798                           pclatu	equ	0xFFB
 10799                           pclath	equ	0xFFA
 10800                           tblptru	equ	0xFF8
 10801                           tblptrh	equ	0xFF7
 10802                           tblptrl	equ	0xFF6
 10803                           tablat	equ	0xFF5
 10804                           prodh	equ	0xFF4
 10805                           prodl	equ	0xFF3
 10806                           postinc0	equ	0xFEE
 10807                           fsr0h	equ	0xFEA
 10808                           fsr0l	equ	0xFE9
 10809                           wreg	equ	0xFE8
 10810                           postdec1	equ	0xFE5
 10811                           fsr1h	equ	0xFE2
 10812                           fsr1l	equ	0xFE1
 10813                           bsr	equ	0xFE0
 10814                           indf2	equ	0xFDF
 10815                           postinc2	equ	0xFDE
 10816                           postdec2	equ	0xFDD
 10817                           fsr2h	equ	0xFDA
 10818                           fsr2l	equ	0xFD9
 10819                           status	equ	0xFD8
 10820                           
 10821 ;; *************** function _set_drie_uur *****************
 10822 ;; Defined at:
 10823 ;;		line 643 in file "led.c"
 10824 ;; Parameters:    Size  Location     Type
 10825 ;;		None
 10826 ;; Auto vars:     Size  Location     Type
 10827 ;;		None
 10828 ;; Return value:  Size  Location     Type
 10829 ;;                  1    wreg      void 
 10830 ;; Registers used:
 10831 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10832 ;; Tracked objects:
 10833 ;;		On entry : 0/0
 10834 ;;		On exit  : 0/0
 10835 ;;		Unchanged: 0/0
 10836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10841 ;;Total ram usage:        0 bytes
 10842 ;; Hardware stack levels used:    1
 10843 ;; Hardware stack levels required when called:    7
 10844 ;; This function calls:
 10845 ;;		_set_white_pixel
 10846 ;; This function is called by:
 10847 ;;		_set_time_led
 10848 ;; This function uses a non-reentrant model
 10849 ;;
 10850                           
 10851                           	psect	text57
 10852  0041F2                     __ptext57:
 10853                           	opt stack 0
 10854  0041F2                     _set_drie_uur:
 10855                           	opt stack 14
 10856                           
 10857                           ;led.c: 645: set_white_pixel(13,3);
 10858                           
 10859                           ;incstack = 0
 10860  0041F2  0E00               	movlw	0
 10861  0041F4  0100               	movlb	0	; () banked
 10862  0041F6  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10863  0041F8  0E0D               	movlw	13
 10864  0041FA  6F71               	movwf	set_white_pixel@x& (0+255),b
 10865  0041FC  0E00               	movlw	0
 10866  0041FE  0100               	movlb	0	; () banked
 10867  004200  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10868  004202  0E03               	movlw	3
 10869  004204  6F73               	movwf	set_white_pixel@y& (0+255),b
 10870  004206  EC50  F025         	call	_set_white_pixel	;wreg free
 10871                           
 10872                           ;led.c: 646: set_white_pixel(14,3);
 10873  00420A  0E00               	movlw	0
 10874  00420C  0100               	movlb	0	; () banked
 10875  00420E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10876  004210  0E0E               	movlw	14
 10877  004212  6F71               	movwf	set_white_pixel@x& (0+255),b
 10878  004214  0E00               	movlw	0
 10879  004216  0100               	movlb	0	; () banked
 10880  004218  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10881  00421A  0E03               	movlw	3
 10882  00421C  6F73               	movwf	set_white_pixel@y& (0+255),b
 10883  00421E  EC50  F025         	call	_set_white_pixel	;wreg free
 10884                           
 10885                           ;led.c: 647: set_white_pixel(15,3);
 10886  004222  0E00               	movlw	0
 10887  004224  0100               	movlb	0	; () banked
 10888  004226  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10889  004228  0E0F               	movlw	15
 10890  00422A  6F71               	movwf	set_white_pixel@x& (0+255),b
 10891  00422C  0E00               	movlw	0
 10892  00422E  0100               	movlb	0	; () banked
 10893  004230  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10894  004232  0E03               	movlw	3
 10895  004234  6F73               	movwf	set_white_pixel@y& (0+255),b
 10896  004236  EC50  F025         	call	_set_white_pixel	;wreg free
 10897                           
 10898                           ;led.c: 648: set_white_pixel(16,3);
 10899  00423A  0E00               	movlw	0
 10900  00423C  0100               	movlb	0	; () banked
 10901  00423E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10902  004240  0E10               	movlw	16
 10903  004242  6F71               	movwf	set_white_pixel@x& (0+255),b
 10904  004244  0E00               	movlw	0
 10905  004246  0100               	movlb	0	; () banked
 10906  004248  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10907  00424A  0E03               	movlw	3
 10908  00424C  6F73               	movwf	set_white_pixel@y& (0+255),b
 10909  00424E  EC50  F025         	call	_set_white_pixel	;wreg free
 10910  004252  0012               	return		;funcret
 10911  004254                     __end_of_set_drie_uur:
 10912                           	opt stack 0
 10913                           pclatu	equ	0xFFB
 10914                           pclath	equ	0xFFA
 10915                           tblptru	equ	0xFF8
 10916                           tblptrh	equ	0xFF7
 10917                           tblptrl	equ	0xFF6
 10918                           tablat	equ	0xFF5
 10919                           prodh	equ	0xFF4
 10920                           prodl	equ	0xFF3
 10921                           postinc0	equ	0xFEE
 10922                           fsr0h	equ	0xFEA
 10923                           fsr0l	equ	0xFE9
 10924                           wreg	equ	0xFE8
 10925                           postdec1	equ	0xFE5
 10926                           fsr1h	equ	0xFE2
 10927                           fsr1l	equ	0xFE1
 10928                           bsr	equ	0xFE0
 10929                           indf2	equ	0xFDF
 10930                           postinc2	equ	0xFDE
 10931                           postdec2	equ	0xFDD
 10932                           fsr2h	equ	0xFDA
 10933                           fsr2l	equ	0xFD9
 10934                           status	equ	0xFD8
 10935                           
 10936 ;; *************** function _set_drie_min *****************
 10937 ;; Defined at:
 10938 ;;		line 467 in file "led.c"
 10939 ;; Parameters:    Size  Location     Type
 10940 ;;		None
 10941 ;; Auto vars:     Size  Location     Type
 10942 ;;		None
 10943 ;; Return value:  Size  Location     Type
 10944 ;;                  1    wreg      void 
 10945 ;; Registers used:
 10946 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10947 ;; Tracked objects:
 10948 ;;		On entry : 0/0
 10949 ;;		On exit  : 0/0
 10950 ;;		Unchanged: 0/0
 10951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10952 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10953 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10954 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10955 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10956 ;;Total ram usage:        0 bytes
 10957 ;; Hardware stack levels used:    1
 10958 ;; Hardware stack levels required when called:    7
 10959 ;; This function calls:
 10960 ;;		_set_white_pixel
 10961 ;; This function is called by:
 10962 ;;		_set_time_led
 10963 ;; This function uses a non-reentrant model
 10964 ;;
 10965                           
 10966                           	psect	text58
 10967  004254                     __ptext58:
 10968                           	opt stack 0
 10969  004254                     _set_drie_min:
 10970                           	opt stack 14
 10971                           
 10972                           ;led.c: 469: set_white_pixel(10,11);
 10973                           
 10974                           ;incstack = 0
 10975  004254  0E00               	movlw	0
 10976  004256  0100               	movlb	0	; () banked
 10977  004258  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10978  00425A  0E0A               	movlw	10
 10979  00425C  6F71               	movwf	set_white_pixel@x& (0+255),b
 10980  00425E  0E00               	movlw	0
 10981  004260  0100               	movlb	0	; () banked
 10982  004262  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10983  004264  0E0B               	movlw	11
 10984  004266  6F73               	movwf	set_white_pixel@y& (0+255),b
 10985  004268  EC50  F025         	call	_set_white_pixel	;wreg free
 10986                           
 10987                           ;led.c: 470: set_white_pixel(11,11);
 10988  00426C  0E00               	movlw	0
 10989  00426E  0100               	movlb	0	; () banked
 10990  004270  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 10991  004272  0E0B               	movlw	11
 10992  004274  6F71               	movwf	set_white_pixel@x& (0+255),b
 10993  004276  0E00               	movlw	0
 10994  004278  0100               	movlb	0	; () banked
 10995  00427A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 10996  00427C  0E0B               	movlw	11
 10997  00427E  6F73               	movwf	set_white_pixel@y& (0+255),b
 10998  004280  EC50  F025         	call	_set_white_pixel	;wreg free
 10999                           
 11000                           ;led.c: 471: set_white_pixel(12,11);
 11001  004284  0E00               	movlw	0
 11002  004286  0100               	movlb	0	; () banked
 11003  004288  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11004  00428A  0E0C               	movlw	12
 11005  00428C  6F71               	movwf	set_white_pixel@x& (0+255),b
 11006  00428E  0E00               	movlw	0
 11007  004290  0100               	movlb	0	; () banked
 11008  004292  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11009  004294  0E0B               	movlw	11
 11010  004296  6F73               	movwf	set_white_pixel@y& (0+255),b
 11011  004298  EC50  F025         	call	_set_white_pixel	;wreg free
 11012                           
 11013                           ;led.c: 472: set_white_pixel(13,11);
 11014  00429C  0E00               	movlw	0
 11015  00429E  0100               	movlb	0	; () banked
 11016  0042A0  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11017  0042A2  0E0D               	movlw	13
 11018  0042A4  6F71               	movwf	set_white_pixel@x& (0+255),b
 11019  0042A6  0E00               	movlw	0
 11020  0042A8  0100               	movlb	0	; () banked
 11021  0042AA  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11022  0042AC  0E0B               	movlw	11
 11023  0042AE  6F73               	movwf	set_white_pixel@y& (0+255),b
 11024  0042B0  EC50  F025         	call	_set_white_pixel	;wreg free
 11025  0042B4  0012               	return		;funcret
 11026  0042B6                     __end_of_set_drie_min:
 11027                           	opt stack 0
 11028                           pclatu	equ	0xFFB
 11029                           pclath	equ	0xFFA
 11030                           tblptru	equ	0xFF8
 11031                           tblptrh	equ	0xFF7
 11032                           tblptrl	equ	0xFF6
 11033                           tablat	equ	0xFF5
 11034                           prodh	equ	0xFF4
 11035                           prodl	equ	0xFF3
 11036                           postinc0	equ	0xFEE
 11037                           fsr0h	equ	0xFEA
 11038                           fsr0l	equ	0xFE9
 11039                           wreg	equ	0xFE8
 11040                           postdec1	equ	0xFE5
 11041                           fsr1h	equ	0xFE2
 11042                           fsr1l	equ	0xFE1
 11043                           bsr	equ	0xFE0
 11044                           indf2	equ	0xFDF
 11045                           postinc2	equ	0xFDE
 11046                           postdec2	equ	0xFDD
 11047                           fsr2h	equ	0xFDA
 11048                           fsr2l	equ	0xFD9
 11049                           status	equ	0xFD8
 11050                           
 11051 ;; *************** function _set_die_tyd_is *****************
 11052 ;; Defined at:
 11053 ;;		line 427 in file "led.c"
 11054 ;; Parameters:    Size  Location     Type
 11055 ;;		None
 11056 ;; Auto vars:     Size  Location     Type
 11057 ;;		None
 11058 ;; Return value:  Size  Location     Type
 11059 ;;                  1    wreg      void 
 11060 ;; Registers used:
 11061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11062 ;; Tracked objects:
 11063 ;;		On entry : 0/0
 11064 ;;		On exit  : 0/0
 11065 ;;		Unchanged: 0/0
 11066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11071 ;;Total ram usage:        0 bytes
 11072 ;; Hardware stack levels used:    1
 11073 ;; Hardware stack levels required when called:    7
 11074 ;; This function calls:
 11075 ;;		_set_white_pixel
 11076 ;; This function is called by:
 11077 ;;		_set_time_led
 11078 ;; This function uses a non-reentrant model
 11079 ;;
 11080                           
 11081                           	psect	text59
 11082  003204                     __ptext59:
 11083                           	opt stack 0
 11084  003204                     _set_die_tyd_is:
 11085                           	opt stack 14
 11086                           
 11087                           ;led.c: 429: set_white_pixel(1,12);
 11088                           
 11089                           ;incstack = 0
 11090  003204  0E00               	movlw	0
 11091  003206  0100               	movlb	0	; () banked
 11092  003208  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11093  00320A  0E01               	movlw	1
 11094  00320C  6F71               	movwf	set_white_pixel@x& (0+255),b
 11095  00320E  0E00               	movlw	0
 11096  003210  0100               	movlb	0	; () banked
 11097  003212  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11098  003214  0E0C               	movlw	12
 11099  003216  6F73               	movwf	set_white_pixel@y& (0+255),b
 11100  003218  EC50  F025         	call	_set_white_pixel	;wreg free
 11101                           
 11102                           ;led.c: 430: set_white_pixel(2,12);
 11103  00321C  0E00               	movlw	0
 11104  00321E  0100               	movlb	0	; () banked
 11105  003220  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11106  003222  0E02               	movlw	2
 11107  003224  6F71               	movwf	set_white_pixel@x& (0+255),b
 11108  003226  0E00               	movlw	0
 11109  003228  0100               	movlb	0	; () banked
 11110  00322A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11111  00322C  0E0C               	movlw	12
 11112  00322E  6F73               	movwf	set_white_pixel@y& (0+255),b
 11113  003230  EC50  F025         	call	_set_white_pixel	;wreg free
 11114                           
 11115                           ;led.c: 431: set_white_pixel(3,12);
 11116  003234  0E00               	movlw	0
 11117  003236  0100               	movlb	0	; () banked
 11118  003238  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11119  00323A  0E03               	movlw	3
 11120  00323C  6F71               	movwf	set_white_pixel@x& (0+255),b
 11121  00323E  0E00               	movlw	0
 11122  003240  0100               	movlb	0	; () banked
 11123  003242  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11124  003244  0E0C               	movlw	12
 11125  003246  6F73               	movwf	set_white_pixel@y& (0+255),b
 11126  003248  EC50  F025         	call	_set_white_pixel	;wreg free
 11127                           
 11128                           ;led.c: 433: set_white_pixel(5,12);
 11129  00324C  0E00               	movlw	0
 11130  00324E  0100               	movlb	0	; () banked
 11131  003250  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11132  003252  0E05               	movlw	5
 11133  003254  6F71               	movwf	set_white_pixel@x& (0+255),b
 11134  003256  0E00               	movlw	0
 11135  003258  0100               	movlb	0	; () banked
 11136  00325A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11137  00325C  0E0C               	movlw	12
 11138  00325E  6F73               	movwf	set_white_pixel@y& (0+255),b
 11139  003260  EC50  F025         	call	_set_white_pixel	;wreg free
 11140                           
 11141                           ;led.c: 434: set_white_pixel(6,12);
 11142  003264  0E00               	movlw	0
 11143  003266  0100               	movlb	0	; () banked
 11144  003268  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11145  00326A  0E06               	movlw	6
 11146  00326C  6F71               	movwf	set_white_pixel@x& (0+255),b
 11147  00326E  0E00               	movlw	0
 11148  003270  0100               	movlb	0	; () banked
 11149  003272  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11150  003274  0E0C               	movlw	12
 11151  003276  6F73               	movwf	set_white_pixel@y& (0+255),b
 11152  003278  EC50  F025         	call	_set_white_pixel	;wreg free
 11153                           
 11154                           ;led.c: 435: set_white_pixel(7,12);
 11155  00327C  0E00               	movlw	0
 11156  00327E  0100               	movlb	0	; () banked
 11157  003280  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11158  003282  0E07               	movlw	7
 11159  003284  6F71               	movwf	set_white_pixel@x& (0+255),b
 11160  003286  0E00               	movlw	0
 11161  003288  0100               	movlb	0	; () banked
 11162  00328A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11163  00328C  0E0C               	movlw	12
 11164  00328E  6F73               	movwf	set_white_pixel@y& (0+255),b
 11165  003290  EC50  F025         	call	_set_white_pixel	;wreg free
 11166                           
 11167                           ;led.c: 437: set_white_pixel(9,12);
 11168  003294  0E00               	movlw	0
 11169  003296  0100               	movlb	0	; () banked
 11170  003298  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11171  00329A  0E09               	movlw	9
 11172  00329C  6F71               	movwf	set_white_pixel@x& (0+255),b
 11173  00329E  0E00               	movlw	0
 11174  0032A0  0100               	movlb	0	; () banked
 11175  0032A2  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11176  0032A4  0E0C               	movlw	12
 11177  0032A6  6F73               	movwf	set_white_pixel@y& (0+255),b
 11178  0032A8  EC50  F025         	call	_set_white_pixel	;wreg free
 11179                           
 11180                           ;led.c: 438: set_white_pixel(10,12);
 11181  0032AC  0E00               	movlw	0
 11182  0032AE  0100               	movlb	0	; () banked
 11183  0032B0  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11184  0032B2  0E0A               	movlw	10
 11185  0032B4  6F71               	movwf	set_white_pixel@x& (0+255),b
 11186  0032B6  0E00               	movlw	0
 11187  0032B8  0100               	movlb	0	; () banked
 11188  0032BA  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11189  0032BC  0E0C               	movlw	12
 11190  0032BE  6F73               	movwf	set_white_pixel@y& (0+255),b
 11191  0032C0  EC50  F025         	call	_set_white_pixel	;wreg free
 11192  0032C4  0012               	return		;funcret
 11193  0032C6                     __end_of_set_die_tyd_is:
 11194                           	opt stack 0
 11195                           pclatu	equ	0xFFB
 11196                           pclath	equ	0xFFA
 11197                           tblptru	equ	0xFF8
 11198                           tblptrh	equ	0xFF7
 11199                           tblptrl	equ	0xFF6
 11200                           tablat	equ	0xFF5
 11201                           prodh	equ	0xFF4
 11202                           prodl	equ	0xFF3
 11203                           postinc0	equ	0xFEE
 11204                           fsr0h	equ	0xFEA
 11205                           fsr0l	equ	0xFE9
 11206                           wreg	equ	0xFE8
 11207                           postdec1	equ	0xFE5
 11208                           fsr1h	equ	0xFE2
 11209                           fsr1l	equ	0xFE1
 11210                           bsr	equ	0xFE0
 11211                           indf2	equ	0xFDF
 11212                           postinc2	equ	0xFDE
 11213                           postdec2	equ	0xFDD
 11214                           fsr2h	equ	0xFDA
 11215                           fsr2l	equ	0xFD9
 11216                           status	equ	0xFD8
 11217                           
 11218 ;; *************** function _set_der *****************
 11219 ;; Defined at:
 11220 ;;		line 561 in file "led.c"
 11221 ;; Parameters:    Size  Location     Type
 11222 ;;		None
 11223 ;; Auto vars:     Size  Location     Type
 11224 ;;		None
 11225 ;; Return value:  Size  Location     Type
 11226 ;;                  1    wreg      void 
 11227 ;; Registers used:
 11228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11229 ;; Tracked objects:
 11230 ;;		On entry : 0/0
 11231 ;;		On exit  : 0/0
 11232 ;;		Unchanged: 0/0
 11233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11234 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11235 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11236 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11237 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11238 ;;Total ram usage:        0 bytes
 11239 ;; Hardware stack levels used:    1
 11240 ;; Hardware stack levels required when called:    7
 11241 ;; This function calls:
 11242 ;;		_set_white_pixel
 11243 ;; This function is called by:
 11244 ;;		_set_time_led
 11245 ;; This function uses a non-reentrant model
 11246 ;;
 11247                           
 11248                           	psect	text60
 11249  0047A0                     __ptext60:
 11250                           	opt stack 0
 11251  0047A0                     _set_der:
 11252                           	opt stack 14
 11253                           
 11254                           ;led.c: 563: set_white_pixel(11,9);
 11255                           
 11256                           ;incstack = 0
 11257  0047A0  0E00               	movlw	0
 11258  0047A2  0100               	movlb	0	; () banked
 11259  0047A4  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11260  0047A6  0E0B               	movlw	11
 11261  0047A8  6F71               	movwf	set_white_pixel@x& (0+255),b
 11262  0047AA  0E00               	movlw	0
 11263  0047AC  0100               	movlb	0	; () banked
 11264  0047AE  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11265  0047B0  0E09               	movlw	9
 11266  0047B2  6F73               	movwf	set_white_pixel@y& (0+255),b
 11267  0047B4  EC50  F025         	call	_set_white_pixel	;wreg free
 11268                           
 11269                           ;led.c: 564: set_white_pixel(12,9);
 11270  0047B8  0E00               	movlw	0
 11271  0047BA  0100               	movlb	0	; () banked
 11272  0047BC  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11273  0047BE  0E0C               	movlw	12
 11274  0047C0  6F71               	movwf	set_white_pixel@x& (0+255),b
 11275  0047C2  0E00               	movlw	0
 11276  0047C4  0100               	movlb	0	; () banked
 11277  0047C6  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11278  0047C8  0E09               	movlw	9
 11279  0047CA  6F73               	movwf	set_white_pixel@y& (0+255),b
 11280  0047CC  EC50  F025         	call	_set_white_pixel	;wreg free
 11281                           
 11282                           ;led.c: 565: set_white_pixel(13,9);
 11283  0047D0  0E00               	movlw	0
 11284  0047D2  0100               	movlb	0	; () banked
 11285  0047D4  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11286  0047D6  0E0D               	movlw	13
 11287  0047D8  6F71               	movwf	set_white_pixel@x& (0+255),b
 11288  0047DA  0E00               	movlw	0
 11289  0047DC  0100               	movlb	0	; () banked
 11290  0047DE  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11291  0047E0  0E09               	movlw	9
 11292  0047E2  6F73               	movwf	set_white_pixel@y& (0+255),b
 11293  0047E4  EC50  F025         	call	_set_white_pixel	;wreg free
 11294  0047E8  0012               	return		;funcret
 11295  0047EA                     __end_of_set_der:
 11296                           	opt stack 0
 11297                           pclatu	equ	0xFFB
 11298                           pclath	equ	0xFFA
 11299                           tblptru	equ	0xFF8
 11300                           tblptrh	equ	0xFF7
 11301                           tblptrl	equ	0xFF6
 11302                           tablat	equ	0xFF5
 11303                           prodh	equ	0xFF4
 11304                           prodl	equ	0xFF3
 11305                           postinc0	equ	0xFEE
 11306                           fsr0h	equ	0xFEA
 11307                           fsr0l	equ	0xFE9
 11308                           wreg	equ	0xFE8
 11309                           postdec1	equ	0xFE5
 11310                           fsr1h	equ	0xFE2
 11311                           fsr1l	equ	0xFE1
 11312                           bsr	equ	0xFE0
 11313                           indf2	equ	0xFDF
 11314                           postinc2	equ	0xFDE
 11315                           postdec2	equ	0xFDD
 11316                           fsr2h	equ	0xFDA
 11317                           fsr2l	equ	0xFD9
 11318                           status	equ	0xFD8
 11319                           
 11320 ;; *************** function _set_dag *****************
 11321 ;; Defined at:
 11322 ;;		line 770 in file "led.c"
 11323 ;; Parameters:    Size  Location     Type
 11324 ;;		None
 11325 ;; Auto vars:     Size  Location     Type
 11326 ;;  clr             3   17[BANK0 ] struct .
 11327 ;; Return value:  Size  Location     Type
 11328 ;;                  1    wreg      void 
 11329 ;; Registers used:
 11330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11331 ;; Tracked objects:
 11332 ;;		On entry : 0/0
 11333 ;;		On exit  : 0/0
 11334 ;;		Unchanged: 0/0
 11335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11337 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11339 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11340 ;;Total ram usage:        3 bytes
 11341 ;; Hardware stack levels used:    1
 11342 ;; Hardware stack levels required when called:    6
 11343 ;; This function calls:
 11344 ;;		_get_random_color
 11345 ;;		_set_pixel
 11346 ;; This function is called by:
 11347 ;;		_set_time_led
 11348 ;; This function uses a non-reentrant model
 11349 ;;
 11350                           
 11351                           	psect	text61
 11352  003B14                     __ptext61:
 11353                           	opt stack 0
 11354  003B14                     _set_dag:
 11355                           	opt stack 15
 11356                           
 11357                           ;led.c: 772: RGBLED clr;
 11358                           ;led.c: 773: get_random_color(&clr);
 11359                           
 11360                           ;incstack = 0
 11361  003B14  0E71               	movlw	low set_dag@clr
 11362  003B16  0100               	movlb	0	; () banked
 11363  003B18  6F6A               	movwf	get_random_color@clr& (0+255),b
 11364  003B1A  0E00               	movlw	high set_dag@clr
 11365  003B1C  0100               	movlb	0	; () banked
 11366  003B1E  6F6B               	movwf	(get_random_color@clr+1)& (0+255),b
 11367  003B20  EC0B  F01D         	call	_get_random_color	;wreg free
 11368                           
 11369                           ;led.c: 775: set_pixel(2, 6, &clr);
 11370  003B24  0E00               	movlw	0
 11371  003B26  0100               	movlb	0	; () banked
 11372  003B28  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 11373  003B2A  0E02               	movlw	2
 11374  003B2C  6F6B               	movwf	set_pixel@x& (0+255),b
 11375  003B2E  0E00               	movlw	0
 11376  003B30  0100               	movlb	0	; () banked
 11377  003B32  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 11378  003B34  0E06               	movlw	6
 11379  003B36  6F6D               	movwf	set_pixel@y& (0+255),b
 11380  003B38  0E71               	movlw	low set_dag@clr
 11381  003B3A  0100               	movlb	0	; () banked
 11382  003B3C  6F6F               	movwf	set_pixel@clr& (0+255),b
 11383  003B3E  0E00               	movlw	high set_dag@clr
 11384  003B40  0100               	movlb	0	; () banked
 11385  003B42  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 11386  003B44  EC7B  F01C         	call	_set_pixel	;wreg free
 11387                           
 11388                           ;led.c: 776: set_pixel(3, 6, &clr);
 11389  003B48  0E00               	movlw	0
 11390  003B4A  0100               	movlb	0	; () banked
 11391  003B4C  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 11392  003B4E  0E03               	movlw	3
 11393  003B50  6F6B               	movwf	set_pixel@x& (0+255),b
 11394  003B52  0E00               	movlw	0
 11395  003B54  0100               	movlb	0	; () banked
 11396  003B56  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 11397  003B58  0E06               	movlw	6
 11398  003B5A  6F6D               	movwf	set_pixel@y& (0+255),b
 11399  003B5C  0E71               	movlw	low set_dag@clr
 11400  003B5E  0100               	movlb	0	; () banked
 11401  003B60  6F6F               	movwf	set_pixel@clr& (0+255),b
 11402  003B62  0E00               	movlw	high set_dag@clr
 11403  003B64  0100               	movlb	0	; () banked
 11404  003B66  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 11405  003B68  EC7B  F01C         	call	_set_pixel	;wreg free
 11406                           
 11407                           ;led.c: 777: set_pixel(4, 6, &clr);
 11408  003B6C  0E00               	movlw	0
 11409  003B6E  0100               	movlb	0	; () banked
 11410  003B70  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 11411  003B72  0E04               	movlw	4
 11412  003B74  6F6B               	movwf	set_pixel@x& (0+255),b
 11413  003B76  0E00               	movlw	0
 11414  003B78  0100               	movlb	0	; () banked
 11415  003B7A  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 11416  003B7C  0E06               	movlw	6
 11417  003B7E  6F6D               	movwf	set_pixel@y& (0+255),b
 11418  003B80  0E71               	movlw	low set_dag@clr
 11419  003B82  0100               	movlb	0	; () banked
 11420  003B84  6F6F               	movwf	set_pixel@clr& (0+255),b
 11421  003B86  0E00               	movlw	high set_dag@clr
 11422  003B88  0100               	movlb	0	; () banked
 11423  003B8A  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 11424  003B8C  EC7B  F01C         	call	_set_pixel	;wreg free
 11425  003B90  0012               	return		;funcret
 11426  003B92                     __end_of_set_dag:
 11427                           	opt stack 0
 11428                           pclatu	equ	0xFFB
 11429                           pclath	equ	0xFFA
 11430                           tblptru	equ	0xFF8
 11431                           tblptrh	equ	0xFF7
 11432                           tblptrl	equ	0xFF6
 11433                           tablat	equ	0xFF5
 11434                           prodh	equ	0xFF4
 11435                           prodl	equ	0xFF3
 11436                           postinc0	equ	0xFEE
 11437                           fsr0h	equ	0xFEA
 11438                           fsr0l	equ	0xFE9
 11439                           wreg	equ	0xFE8
 11440                           postdec1	equ	0xFE5
 11441                           fsr1h	equ	0xFE2
 11442                           fsr1l	equ	0xFE1
 11443                           bsr	equ	0xFE0
 11444                           indf2	equ	0xFDF
 11445                           postinc2	equ	0xFDE
 11446                           postdec2	equ	0xFDD
 11447                           fsr2h	equ	0xFDA
 11448                           fsr2l	equ	0xFD9
 11449                           status	equ	0xFD8
 11450                           
 11451 ;; *************** function _set_agt_uur *****************
 11452 ;; Defined at:
 11453 ;;		line 681 in file "led.c"
 11454 ;; Parameters:    Size  Location     Type
 11455 ;;		None
 11456 ;; Auto vars:     Size  Location     Type
 11457 ;;		None
 11458 ;; Return value:  Size  Location     Type
 11459 ;;                  1    wreg      void 
 11460 ;; Registers used:
 11461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11462 ;; Tracked objects:
 11463 ;;		On entry : 0/0
 11464 ;;		On exit  : 0/0
 11465 ;;		Unchanged: 0/0
 11466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11471 ;;Total ram usage:        0 bytes
 11472 ;; Hardware stack levels used:    1
 11473 ;; Hardware stack levels required when called:    7
 11474 ;; This function calls:
 11475 ;;		_set_white_pixel
 11476 ;; This function is called by:
 11477 ;;		_set_time_led
 11478 ;; This function uses a non-reentrant model
 11479 ;;
 11480                           
 11481                           	psect	text62
 11482  0047EA                     __ptext62:
 11483                           	opt stack 0
 11484  0047EA                     _set_agt_uur:
 11485                           	opt stack 14
 11486                           
 11487                           ;led.c: 683: set_white_pixel(2,2);
 11488                           
 11489                           ;incstack = 0
 11490  0047EA  0E00               	movlw	0
 11491  0047EC  0100               	movlb	0	; () banked
 11492  0047EE  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11493  0047F0  0E02               	movlw	2
 11494  0047F2  6F71               	movwf	set_white_pixel@x& (0+255),b
 11495  0047F4  0E00               	movlw	0
 11496  0047F6  0100               	movlb	0	; () banked
 11497  0047F8  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11498  0047FA  0E02               	movlw	2
 11499  0047FC  6F73               	movwf	set_white_pixel@y& (0+255),b
 11500  0047FE  EC50  F025         	call	_set_white_pixel	;wreg free
 11501                           
 11502                           ;led.c: 684: set_white_pixel(3,2);
 11503  004802  0E00               	movlw	0
 11504  004804  0100               	movlb	0	; () banked
 11505  004806  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11506  004808  0E03               	movlw	3
 11507  00480A  6F71               	movwf	set_white_pixel@x& (0+255),b
 11508  00480C  0E00               	movlw	0
 11509  00480E  0100               	movlb	0	; () banked
 11510  004810  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11511  004812  0E02               	movlw	2
 11512  004814  6F73               	movwf	set_white_pixel@y& (0+255),b
 11513  004816  EC50  F025         	call	_set_white_pixel	;wreg free
 11514                           
 11515                           ;led.c: 685: set_white_pixel(4,2);
 11516  00481A  0E00               	movlw	0
 11517  00481C  0100               	movlb	0	; () banked
 11518  00481E  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11519  004820  0E04               	movlw	4
 11520  004822  6F71               	movwf	set_white_pixel@x& (0+255),b
 11521  004824  0E00               	movlw	0
 11522  004826  0100               	movlb	0	; () banked
 11523  004828  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11524  00482A  0E02               	movlw	2
 11525  00482C  6F73               	movwf	set_white_pixel@y& (0+255),b
 11526  00482E  EC50  F025         	call	_set_white_pixel	;wreg free
 11527  004832  0012               	return		;funcret
 11528  004834                     __end_of_set_agt_uur:
 11529                           	opt stack 0
 11530                           pclatu	equ	0xFFB
 11531                           pclath	equ	0xFFA
 11532                           tblptru	equ	0xFF8
 11533                           tblptrh	equ	0xFF7
 11534                           tblptrl	equ	0xFF6
 11535                           tablat	equ	0xFF5
 11536                           prodh	equ	0xFF4
 11537                           prodl	equ	0xFF3
 11538                           postinc0	equ	0xFEE
 11539                           fsr0h	equ	0xFEA
 11540                           fsr0l	equ	0xFE9
 11541                           wreg	equ	0xFE8
 11542                           postdec1	equ	0xFE5
 11543                           fsr1h	equ	0xFE2
 11544                           fsr1l	equ	0xFE1
 11545                           bsr	equ	0xFE0
 11546                           indf2	equ	0xFDF
 11547                           postinc2	equ	0xFDE
 11548                           postdec2	equ	0xFDD
 11549                           fsr2h	equ	0xFDA
 11550                           fsr2l	equ	0xFD9
 11551                           status	equ	0xFD8
 11552                           
 11553 ;; *************** function _set_agt_min *****************
 11554 ;; Defined at:
 11555 ;;		line 512 in file "led.c"
 11556 ;; Parameters:    Size  Location     Type
 11557 ;;		None
 11558 ;; Auto vars:     Size  Location     Type
 11559 ;;		None
 11560 ;; Return value:  Size  Location     Type
 11561 ;;                  1    wreg      void 
 11562 ;; Registers used:
 11563 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11564 ;; Tracked objects:
 11565 ;;		On entry : 0/0
 11566 ;;		On exit  : 0/0
 11567 ;;		Unchanged: 0/0
 11568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11570 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11572 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11573 ;;Total ram usage:        0 bytes
 11574 ;; Hardware stack levels used:    1
 11575 ;; Hardware stack levels required when called:    7
 11576 ;; This function calls:
 11577 ;;		_set_white_pixel
 11578 ;; This function is called by:
 11579 ;;		_set_time_led
 11580 ;; This function uses a non-reentrant model
 11581 ;;
 11582                           
 11583                           	psect	text63
 11584  004834                     __ptext63:
 11585                           	opt stack 0
 11586  004834                     _set_agt_min:
 11587                           	opt stack 14
 11588                           
 11589                           ;led.c: 514: set_white_pixel(14,9);
 11590                           
 11591                           ;incstack = 0
 11592  004834  0E00               	movlw	0
 11593  004836  0100               	movlb	0	; () banked
 11594  004838  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11595  00483A  0E0E               	movlw	14
 11596  00483C  6F71               	movwf	set_white_pixel@x& (0+255),b
 11597  00483E  0E00               	movlw	0
 11598  004840  0100               	movlb	0	; () banked
 11599  004842  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11600  004844  0E09               	movlw	9
 11601  004846  6F73               	movwf	set_white_pixel@y& (0+255),b
 11602  004848  EC50  F025         	call	_set_white_pixel	;wreg free
 11603                           
 11604                           ;led.c: 515: set_white_pixel(15,9);
 11605  00484C  0E00               	movlw	0
 11606  00484E  0100               	movlb	0	; () banked
 11607  004850  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11608  004852  0E0F               	movlw	15
 11609  004854  6F71               	movwf	set_white_pixel@x& (0+255),b
 11610  004856  0E00               	movlw	0
 11611  004858  0100               	movlb	0	; () banked
 11612  00485A  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11613  00485C  0E09               	movlw	9
 11614  00485E  6F73               	movwf	set_white_pixel@y& (0+255),b
 11615  004860  EC50  F025         	call	_set_white_pixel	;wreg free
 11616                           
 11617                           ;led.c: 516: set_white_pixel(16,9);
 11618  004864  0E00               	movlw	0
 11619  004866  0100               	movlb	0	; () banked
 11620  004868  6F72               	movwf	(set_white_pixel@x+1)& (0+255),b
 11621  00486A  0E10               	movlw	16
 11622  00486C  6F71               	movwf	set_white_pixel@x& (0+255),b
 11623  00486E  0E00               	movlw	0
 11624  004870  0100               	movlb	0	; () banked
 11625  004872  6F74               	movwf	(set_white_pixel@y+1)& (0+255),b
 11626  004874  0E09               	movlw	9
 11627  004876  6F73               	movwf	set_white_pixel@y& (0+255),b
 11628  004878  EC50  F025         	call	_set_white_pixel	;wreg free
 11629  00487C  0012               	return		;funcret
 11630  00487E                     __end_of_set_agt_min:
 11631                           	opt stack 0
 11632                           pclatu	equ	0xFFB
 11633                           pclath	equ	0xFFA
 11634                           tblptru	equ	0xFF8
 11635                           tblptrh	equ	0xFF7
 11636                           tblptrl	equ	0xFF6
 11637                           tablat	equ	0xFF5
 11638                           prodh	equ	0xFF4
 11639                           prodl	equ	0xFF3
 11640                           postinc0	equ	0xFEE
 11641                           fsr0h	equ	0xFEA
 11642                           fsr0l	equ	0xFE9
 11643                           wreg	equ	0xFE8
 11644                           postdec1	equ	0xFE5
 11645                           fsr1h	equ	0xFE2
 11646                           fsr1l	equ	0xFE1
 11647                           bsr	equ	0xFE0
 11648                           indf2	equ	0xFDF
 11649                           postinc2	equ	0xFDE
 11650                           postdec2	equ	0xFDD
 11651                           fsr2h	equ	0xFDA
 11652                           fsr2l	equ	0xFD9
 11653                           status	equ	0xFD8
 11654                           
 11655 ;; *************** function _set_white_pixel *****************
 11656 ;; Defined at:
 11657 ;;		line 141 in file "led.c"
 11658 ;; Parameters:    Size  Location     Type
 11659 ;;  x               2   17[BANK0 ] unsigned int 
 11660 ;;  y               2   19[BANK0 ] unsigned int 
 11661 ;; Auto vars:     Size  Location     Type
 11662 ;;  white           3   21[BANK0 ] struct .
 11663 ;; Return value:  Size  Location     Type
 11664 ;;                  1    wreg      void 
 11665 ;; Registers used:
 11666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11667 ;; Tracked objects:
 11668 ;;		On entry : 0/0
 11669 ;;		On exit  : 0/0
 11670 ;;		Unchanged: 0/0
 11671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11672 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11673 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11675 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11676 ;;Total ram usage:        7 bytes
 11677 ;; Hardware stack levels used:    1
 11678 ;; Hardware stack levels required when called:    6
 11679 ;; This function calls:
 11680 ;;		_set_pixel
 11681 ;; This function is called by:
 11682 ;;		_set_die_tyd_is
 11683 ;;		_set_kwart
 11684 ;;		_set_half
 11685 ;;		_set_twee_min
 11686 ;;		_set_drie_min
 11687 ;;		_set_een_min
 11688 ;;		_set_vier_min
 11689 ;;		_set_vyf_min
 11690 ;;		_set_ses_min
 11691 ;;		_set_sewe_min
 11692 ;;		_set_agt_min
 11693 ;;		_set_nege_min
 11694 ;;		_set_tien_min
 11695 ;;		_set_ntien_min
 11696 ;;		_set_elf_min
 11697 ;;		_set_twaalf_min
 11698 ;;		_set_der
 11699 ;;		_set_veer
 11700 ;;		_set_twintig
 11701 ;;		_set_en
 11702 ;;		_set_minuut
 11703 ;;		_set_minute
 11704 ;;		_set_voor
 11705 ;;		_set_oor
 11706 ;;		_set_een_hour
 11707 ;;		_set_twee_hour
 11708 ;;		_set_drie_uur
 11709 ;;		_set_vier_uur
 11710 ;;		_set_vyf_uur
 11711 ;;		_set_ses_uur
 11712 ;;		_set_sewe_uur
 11713 ;;		_set_agt_uur
 11714 ;;		_set_nege_uur
 11715 ;;		_set_tien_uur
 11716 ;;		_set_elf_uur
 11717 ;;		_set_twaalf_uur
 11718 ;;		_set_uur
 11719 ;; This function uses a non-reentrant model
 11720 ;;
 11721                           
 11722                           	psect	text64
 11723  004AA0                     __ptext64:
 11724                           	opt stack 0
 11725  004AA0                     _set_white_pixel:
 11726                           	opt stack 14
 11727                           
 11728                           ;led.c: 143: RGBLED white;
 11729                           ;led.c: 144: white.R = 255;
 11730                           
 11731                           ;incstack = 0
 11732  004AA0  0100               	movlb	0	; () banked
 11733  004AA2  6975               	setf	set_white_pixel@white& (0+255),b
 11734                           
 11735                           ;led.c: 145: white.G = 255;
 11736  004AA4  0100               	movlb	0	; () banked
 11737  004AA6  6976               	setf	(set_white_pixel@white+1)& (0+255),b
 11738                           
 11739                           ;led.c: 146: white.B = 255;
 11740  004AA8  0100               	movlb	0	; () banked
 11741  004AAA  6977               	setf	(set_white_pixel@white+2)& (0+255),b
 11742                           
 11743                           ; BSR set to: 0
 11744                           ;led.c: 148: set_pixel(x, y, &white);
 11745  004AAC  C071  F06B         	movff	set_white_pixel@x,set_pixel@x
 11746  004AB0  C072  F06C         	movff	set_white_pixel@x+1,set_pixel@x+1
 11747  004AB4  C073  F06D         	movff	set_white_pixel@y,set_pixel@y
 11748  004AB8  C074  F06E         	movff	set_white_pixel@y+1,set_pixel@y+1
 11749  004ABC  0E75               	movlw	low set_white_pixel@white
 11750  004ABE  0100               	movlb	0	; () banked
 11751  004AC0  6F6F               	movwf	set_pixel@clr& (0+255),b
 11752  004AC2  0E00               	movlw	high set_white_pixel@white
 11753  004AC4  0100               	movlb	0	; () banked
 11754  004AC6  6F70               	movwf	(set_pixel@clr+1)& (0+255),b
 11755  004AC8  EC7B  F01C         	call	_set_pixel	;wreg free
 11756  004ACC  0012               	return		;funcret
 11757  004ACE                     __end_of_set_white_pixel:
 11758                           	opt stack 0
 11759                           pclatu	equ	0xFFB
 11760                           pclath	equ	0xFFA
 11761                           tblptru	equ	0xFF8
 11762                           tblptrh	equ	0xFF7
 11763                           tblptrl	equ	0xFF6
 11764                           tablat	equ	0xFF5
 11765                           prodh	equ	0xFF4
 11766                           prodl	equ	0xFF3
 11767                           postinc0	equ	0xFEE
 11768                           fsr0h	equ	0xFEA
 11769                           fsr0l	equ	0xFE9
 11770                           wreg	equ	0xFE8
 11771                           postdec1	equ	0xFE5
 11772                           fsr1h	equ	0xFE2
 11773                           fsr1l	equ	0xFE1
 11774                           bsr	equ	0xFE0
 11775                           indf2	equ	0xFDF
 11776                           postinc2	equ	0xFDE
 11777                           postdec2	equ	0xFDD
 11778                           fsr2h	equ	0xFDA
 11779                           fsr2l	equ	0xFD9
 11780                           status	equ	0xFD8
 11781                           
 11782 ;; *************** function _set_load_led *****************
 11783 ;; Defined at:
 11784 ;;		line 409 in file "led.c"
 11785 ;; Parameters:    Size  Location     Type
 11786 ;;		None
 11787 ;; Auto vars:     Size  Location     Type
 11788 ;;  color           3   47[BANK0 ] struct .
 11789 ;;  radius          2   45[BANK0 ] unsigned int 
 11790 ;;  y               2   43[BANK0 ] unsigned int 
 11791 ;;  x               2   41[BANK0 ] unsigned int 
 11792 ;; Return value:  Size  Location     Type
 11793 ;;                  1    wreg      void 
 11794 ;; Registers used:
 11795 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11796 ;; Tracked objects:
 11797 ;;		On entry : 0/0
 11798 ;;		On exit  : 0/0
 11799 ;;		Unchanged: 0/0
 11800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11802 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11803 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11804 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11805 ;;Total ram usage:       11 bytes
 11806 ;; Hardware stack levels used:    1
 11807 ;; Hardware stack levels required when called:   10
 11808 ;; This function calls:
 11809 ;;		___awmod
 11810 ;;		_clear_led
 11811 ;;		_draw_circle
 11812 ;;		_get_random_color
 11813 ;;		_rand
 11814 ;; This function is called by:
 11815 ;;		_screen_update
 11816 ;; This function uses a non-reentrant model
 11817 ;;
 11818                           
 11819                           	psect	text65
 11820  003062                     __ptext65:
 11821                           	opt stack 0
 11822  003062                     _set_load_led:
 11823                           	opt stack 12
 11824                           
 11825                           ;led.c: 411: if(counter++ > 5)
 11826                           
 11827                           ;incstack = 0
 11828  003062  0100               	movlb	0	; () banked
 11829  003064  51AF               	movf	_counter& (0+255),w,b
 11830  003066  0100               	movlb	0	; () banked
 11831  003068  6F87               	movwf	??_set_load_led& (0+255),b
 11832  00306A  0100               	movlb	0	; () banked
 11833  00306C  51B0               	movf	(_counter+1)& (0+255),w,b
 11834  00306E  0100               	movlb	0	; () banked
 11835  003070  6F88               	movwf	(??_set_load_led+1)& (0+255),b
 11836  003072  0100               	movlb	0	; () banked
 11837  003074  4BAF               	infsnz	_counter& (0+255),f,b
 11838  003076  2BB0               	incf	(_counter+1)& (0+255),f,b
 11839  003078  0100               	movlb	0	; () banked
 11840  00307A  BF88               	btfsc	(??_set_load_led+1)& (0+255),7,b
 11841  00307C  0012               	return	
 11842  00307E  0100               	movlb	0	; () banked
 11843  003080  5188               	movf	(??_set_load_led+1)& (0+255),w,b
 11844  003082  E105               	bnz	i1u811_20
 11845  003084  0E06               	movlw	6
 11846  003086  0100               	movlb	0	; () banked
 11847  003088  5D87               	subwf	??_set_load_led& (0+255),w,b
 11848  00308A  A0D8               	btfss	status,0,c
 11849  00308C  0012               	return	
 11850  00308E                     i1u811_20:
 11851                           
 11852                           ; BSR set to: 0
 11853                           ;led.c: 412: {
 11854                           ;led.c: 413: clear_led();
 11855  00308E  ECC4  F01C         	call	_clear_led	;wreg free
 11856                           
 11857                           ;led.c: 414: unsigned int x = (unsigned int)(rand() % 15 + 0);
 11858  003092  ECB8  F021         	call	_rand	;wreg free
 11859  003096  C025  F064         	movff	?_rand,___awmod@dividend
 11860  00309A  C026  F065         	movff	?_rand+1,___awmod@dividend+1
 11861  00309E  0E00               	movlw	0
 11862  0030A0  0100               	movlb	0	; () banked
 11863  0030A2  6F67               	movwf	(___awmod@divisor+1)& (0+255),b
 11864  0030A4  0E0F               	movlw	15
 11865  0030A6  6F66               	movwf	___awmod@divisor& (0+255),b
 11866  0030A8  ECBC  F01A         	call	___awmod	;wreg free
 11867  0030AC  C064  F089         	movff	?___awmod,set_load_led@x
 11868  0030B0  C065  F08A         	movff	?___awmod+1,set_load_led@x+1
 11869                           
 11870                           ;led.c: 415: unsigned int y = (unsigned int)(rand() % 11 + 0);
 11871  0030B4  ECB8  F021         	call	_rand	;wreg free
 11872  0030B8  C025  F064         	movff	?_rand,___awmod@dividend
 11873  0030BC  C026  F065         	movff	?_rand+1,___awmod@dividend+1
 11874  0030C0  0E00               	movlw	0
 11875  0030C2  0100               	movlb	0	; () banked
 11876  0030C4  6F67               	movwf	(___awmod@divisor+1)& (0+255),b
 11877  0030C6  0E0B               	movlw	11
 11878  0030C8  6F66               	movwf	___awmod@divisor& (0+255),b
 11879  0030CA  ECBC  F01A         	call	___awmod	;wreg free
 11880  0030CE  C064  F08B         	movff	?___awmod,set_load_led@y
 11881  0030D2  C065  F08C         	movff	?___awmod+1,set_load_led@y+1
 11882                           
 11883                           ;led.c: 416: unsigned int radius = (unsigned int)(rand() % 5 + 1);
 11884  0030D6  ECB8  F021         	call	_rand	;wreg free
 11885  0030DA  C025  F064         	movff	?_rand,___awmod@dividend
 11886  0030DE  C026  F065         	movff	?_rand+1,___awmod@dividend+1
 11887  0030E2  0E00               	movlw	0
 11888  0030E4  0100               	movlb	0	; () banked
 11889  0030E6  6F67               	movwf	(___awmod@divisor+1)& (0+255),b
 11890  0030E8  0E05               	movlw	5
 11891  0030EA  6F66               	movwf	___awmod@divisor& (0+255),b
 11892  0030EC  ECBC  F01A         	call	___awmod	;wreg free
 11893  0030F0  0E01               	movlw	1
 11894  0030F2  0100               	movlb	0	; () banked
 11895  0030F4  2564               	addwf	?___awmod& (0+255),w,b
 11896  0030F6  0100               	movlb	0	; () banked
 11897  0030F8  6F8D               	movwf	set_load_led@radius& (0+255),b
 11898  0030FA  0E00               	movlw	0
 11899  0030FC  0100               	movlb	0	; () banked
 11900  0030FE  2165               	addwfc	(?___awmod+1)& (0+255),w,b
 11901  003100  0100               	movlb	0	; () banked
 11902  003102  6F8E               	movwf	(set_load_led@radius+1)& (0+255),b
 11903                           
 11904                           ; BSR set to: 0
 11905                           ;led.c: 417: RGBLED color;
 11906                           ;led.c: 418: get_random_color(&color);
 11907  003104  0E8F               	movlw	low set_load_led@color
 11908  003106  0100               	movlb	0	; () banked
 11909  003108  6F6A               	movwf	get_random_color@clr& (0+255),b
 11910  00310A  0E00               	movlw	high set_load_led@color
 11911  00310C  0100               	movlb	0	; () banked
 11912  00310E  6F6B               	movwf	(get_random_color@clr+1)& (0+255),b
 11913  003110  EC0B  F01D         	call	_get_random_color	;wreg free
 11914                           
 11915                           ;led.c: 419: draw_circle(x, y, radius, &color);
 11916  003114  C089  F071         	movff	set_load_led@x,draw_circle@x0
 11917  003118  C08A  F072         	movff	set_load_led@x+1,draw_circle@x0+1
 11918  00311C  C08B  F073         	movff	set_load_led@y,draw_circle@y0
 11919  003120  C08C  F074         	movff	set_load_led@y+1,draw_circle@y0+1
 11920  003124  C08D  F075         	movff	set_load_led@radius,draw_circle@radius
 11921  003128  C08E  F076         	movff	set_load_led@radius+1,draw_circle@radius+1
 11922  00312C  0E8F               	movlw	low set_load_led@color
 11923  00312E  0100               	movlb	0	; () banked
 11924  003130  6F77               	movwf	draw_circle@clr& (0+255),b
 11925  003132  0E00               	movlw	high set_load_led@color
 11926  003134  0100               	movlb	0	; () banked
 11927  003136  6F78               	movwf	(draw_circle@clr+1)& (0+255),b
 11928  003138  EC9C  F00D         	call	_draw_circle	;wreg free
 11929  00313C  0012               	return	
 11930  00313E                     __end_of_set_load_led:
 11931                           	opt stack 0
 11932                           pclatu	equ	0xFFB
 11933                           pclath	equ	0xFFA
 11934                           tblptru	equ	0xFF8
 11935                           tblptrh	equ	0xFF7
 11936                           tblptrl	equ	0xFF6
 11937                           tablat	equ	0xFF5
 11938                           prodh	equ	0xFF4
 11939                           prodl	equ	0xFF3
 11940                           postinc0	equ	0xFEE
 11941                           fsr0h	equ	0xFEA
 11942                           fsr0l	equ	0xFE9
 11943                           wreg	equ	0xFE8
 11944                           postdec1	equ	0xFE5
 11945                           fsr1h	equ	0xFE2
 11946                           fsr1l	equ	0xFE1
 11947                           bsr	equ	0xFE0
 11948                           indf2	equ	0xFDF
 11949                           postinc2	equ	0xFDE
 11950                           postdec2	equ	0xFDD
 11951                           fsr2h	equ	0xFDA
 11952                           fsr2l	equ	0xFD9
 11953                           status	equ	0xFD8
 11954                           
 11955 ;; *************** function _get_random_color *****************
 11956 ;; Defined at:
 11957 ;;		line 162 in file "led.c"
 11958 ;; Parameters:    Size  Location     Type
 11959 ;;  clr             2   10[BANK0 ] PTR struct .
 11960 ;;		 -> set_jason@clr(3), set_en_mj@clr(3), set_minell@clr(3), set_dag@clr(3), 
 11961 ;;		 -> set_trou@clr(3), set_verjaars@clr(3), set_gelukkige@clr(3), set_load_led@color(3), 
 11962 ;; Auto vars:     Size  Location     Type
 11963 ;;		None
 11964 ;; Return value:  Size  Location     Type
 11965 ;;                  1    wreg      void 
 11966 ;; Registers used:
 11967 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11968 ;; Tracked objects:
 11969 ;;		On entry : 0/0
 11970 ;;		On exit  : 0/0
 11971 ;;		Unchanged: 0/0
 11972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11973 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11976 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11977 ;;Total ram usage:        2 bytes
 11978 ;; Hardware stack levels used:    1
 11979 ;; Hardware stack levels required when called:    5
 11980 ;; This function calls:
 11981 ;;		___awmod
 11982 ;;		_rand
 11983 ;; This function is called by:
 11984 ;;		_set_load_led
 11985 ;;		_set_gelukkige
 11986 ;;		_set_verjaars
 11987 ;;		_set_trou
 11988 ;;		_set_dag
 11989 ;;		_set_minell
 11990 ;;		_set_en_mj
 11991 ;;		_set_jason
 11992 ;; This function uses a non-reentrant model
 11993 ;;
 11994                           
 11995                           	psect	text66
 11996  003A16                     __ptext66:
 11997                           	opt stack 0
 11998  003A16                     _get_random_color:
 11999                           	opt stack 15
 12000                           
 12001                           ;led.c: 164: clr->R = (char) (rand() % 255);
 12002                           
 12003                           ;incstack = 0
 12004  003A16  ECB8  F021         	call	_rand	;wreg free
 12005  003A1A  C025  F064         	movff	?_rand,___awmod@dividend
 12006  003A1E  C026  F065         	movff	?_rand+1,___awmod@dividend+1
 12007  003A22  0E00               	movlw	0
 12008  003A24  0100               	movlb	0	; () banked
 12009  003A26  6F67               	movwf	(___awmod@divisor+1)& (0+255),b
 12010  003A28  6966               	setf	___awmod@divisor& (0+255),b
 12011  003A2A  ECBC  F01A         	call	___awmod	;wreg free
 12012  003A2E  0100               	movlb	0	; () banked
 12013  003A30  5164               	movf	?___awmod& (0+255),w,b
 12014  003A32  C06A  FFD9         	movff	get_random_color@clr,fsr2l
 12015  003A36  C06B  FFDA         	movff	get_random_color@clr+1,fsr2h
 12016  003A3A  6EDF               	movwf	indf2,c
 12017                           
 12018                           ;led.c: 165: clr->G = (char) (rand() % 255);
 12019  003A3C  0100               	movlb	0	; () banked
 12020  003A3E  EE20 F001          	lfsr	2,1
 12021  003A42  516A               	movf	get_random_color@clr& (0+255),w,b
 12022  003A44  26D9               	addwf	fsr2l,f,c
 12023  003A46  516B               	movf	(get_random_color@clr+1)& (0+255),w,b
 12024  003A48  22DA               	addwfc	fsr2h,f,c
 12025  003A4A  ECB8  F021         	call	_rand	;wreg free
 12026  003A4E  C025  F064         	movff	?_rand,___awmod@dividend
 12027  003A52  C026  F065         	movff	?_rand+1,___awmod@dividend+1
 12028  003A56  0E00               	movlw	0
 12029  003A58  0100               	movlb	0	; () banked
 12030  003A5A  6F67               	movwf	(___awmod@divisor+1)& (0+255),b
 12031  003A5C  6966               	setf	___awmod@divisor& (0+255),b
 12032  003A5E  ECBC  F01A         	call	___awmod	;wreg free
 12033  003A62  0100               	movlb	0	; () banked
 12034  003A64  5164               	movf	?___awmod& (0+255),w,b
 12035  003A66  6EDF               	movwf	indf2,c
 12036                           
 12037                           ;led.c: 166: clr->B = (char) (rand() % 255);
 12038  003A68  0100               	movlb	0	; () banked
 12039  003A6A  EE20 F002          	lfsr	2,2
 12040  003A6E  516A               	movf	get_random_color@clr& (0+255),w,b
 12041  003A70  26D9               	addwf	fsr2l,f,c
 12042  003A72  516B               	movf	(get_random_color@clr+1)& (0+255),w,b
 12043  003A74  22DA               	addwfc	fsr2h,f,c
 12044  003A76  ECB8  F021         	call	_rand	;wreg free
 12045  003A7A  C025  F064         	movff	?_rand,___awmod@dividend
 12046  003A7E  C026  F065         	movff	?_rand+1,___awmod@dividend+1
 12047  003A82  0E00               	movlw	0
 12048  003A84  0100               	movlb	0	; () banked
 12049  003A86  6F67               	movwf	(___awmod@divisor+1)& (0+255),b
 12050  003A88  6966               	setf	___awmod@divisor& (0+255),b
 12051  003A8A  ECBC  F01A         	call	___awmod	;wreg free
 12052  003A8E  0100               	movlb	0	; () banked
 12053  003A90  5164               	movf	?___awmod& (0+255),w,b
 12054  003A92  6EDF               	movwf	indf2,c
 12055                           
 12056                           ; BSR set to: 0
 12057  003A94  0012               	return		;funcret
 12058  003A96                     __end_of_get_random_color:
 12059                           	opt stack 0
 12060                           pclatu	equ	0xFFB
 12061                           pclath	equ	0xFFA
 12062                           tblptru	equ	0xFF8
 12063                           tblptrh	equ	0xFF7
 12064                           tblptrl	equ	0xFF6
 12065                           tablat	equ	0xFF5
 12066                           prodh	equ	0xFF4
 12067                           prodl	equ	0xFF3
 12068                           postinc0	equ	0xFEE
 12069                           fsr0h	equ	0xFEA
 12070                           fsr0l	equ	0xFE9
 12071                           wreg	equ	0xFE8
 12072                           postdec1	equ	0xFE5
 12073                           fsr1h	equ	0xFE2
 12074                           fsr1l	equ	0xFE1
 12075                           bsr	equ	0xFE0
 12076                           indf2	equ	0xFDF
 12077                           postinc2	equ	0xFDE
 12078                           postdec2	equ	0xFDD
 12079                           fsr2h	equ	0xFDA
 12080                           fsr2l	equ	0xFD9
 12081                           status	equ	0xFD8
 12082                           
 12083 ;; *************** function _rand *****************
 12084 ;; Defined at:
 12085 ;;		line 12 in file "/Applications/microchip/xc8/v1.43/sources/common/rand.c"
 12086 ;; Parameters:    Size  Location     Type
 12087 ;;		None
 12088 ;; Auto vars:     Size  Location     Type
 12089 ;;		None
 12090 ;; Return value:  Size  Location     Type
 12091 ;;                  2   36[COMRAM] int 
 12092 ;; Registers used:
 12093 ;;		wreg, status,2, status,0, cstack
 12094 ;; Tracked objects:
 12095 ;;		On entry : 0/0
 12096 ;;		On exit  : 0/0
 12097 ;;		Unchanged: 0/0
 12098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12099 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12100 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12102 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12103 ;;Total ram usage:        2 bytes
 12104 ;; Hardware stack levels used:    1
 12105 ;; Hardware stack levels required when called:    4
 12106 ;; This function calls:
 12107 ;;		___lmul
 12108 ;; This function is called by:
 12109 ;;		_get_random_color
 12110 ;;		_set_load_led
 12111 ;; This function uses a non-reentrant model
 12112 ;;
 12113                           
 12114                           	psect	text67
 12115  004370                     __ptext67:
 12116                           	opt stack 0
 12117  004370                     _rand:
 12118                           	opt stack 15
 12119                           
 12120                           ; BSR set to: 0
 12121                           ;incstack = 0
 12122  004370  C0D8  F01D         	movff	_randx,___lmul@multiplier
 12123  004374  C0D9  F01E         	movff	_randx+1,___lmul@multiplier+1
 12124  004378  C0DA  F01F         	movff	_randx+2,___lmul@multiplier+2
 12125  00437C  C0DB  F020         	movff	_randx+3,___lmul@multiplier+3
 12126  004380  0E6D               	movlw	109
 12127  004382  6E21               	movwf	___lmul@multiplicand,c
 12128  004384  0E4E               	movlw	78
 12129  004386  6E22               	movwf	___lmul@multiplicand+1,c
 12130  004388  0EC6               	movlw	198
 12131  00438A  6E23               	movwf	___lmul@multiplicand+2,c
 12132  00438C  0E41               	movlw	65
 12133  00438E  6E24               	movwf	___lmul@multiplicand+3,c
 12134  004390  EC5B  F021         	call	___lmul	;wreg free
 12135  004394  C01D  F0D8         	movff	?___lmul,_randx
 12136  004398  C01E  F0D9         	movff	?___lmul+1,_randx+1
 12137  00439C  C01F  F0DA         	movff	?___lmul+2,_randx+2
 12138  0043A0  C020  F0DB         	movff	?___lmul+3,_randx+3
 12139  0043A4  0E39               	movlw	57
 12140  0043A6  0100               	movlb	0	; () banked
 12141  0043A8  27D8               	addwf	_randx& (0+255),f,b
 12142  0043AA  0E30               	movlw	48
 12143  0043AC  23D9               	addwfc	(_randx+1)& (0+255),f,b
 12144  0043AE  0E00               	movlw	0
 12145  0043B0  23DA               	addwfc	(_randx+2)& (0+255),f,b
 12146  0043B2  0E00               	movlw	0
 12147  0043B4  23DB               	addwfc	(_randx+3)& (0+255),f,b
 12148                           
 12149                           ; BSR set to: 0
 12150  0043B6  0EFF               	movlw	255
 12151  0043B8  0100               	movlb	0	; () banked
 12152  0043BA  15DA               	andwf	(_randx+2)& (0+255),w,b
 12153  0043BC  6E25               	movwf	?_rand,c
 12154  0043BE  0E7F               	movlw	127
 12155  0043C0  0100               	movlb	0	; () banked
 12156  0043C2  15DB               	andwf	(_randx+3)& (0+255),w,b
 12157  0043C4  6E26               	movwf	?_rand+1,c
 12158  0043C6  0012               	return	
 12159  0043C8                     __end_of_rand:
 12160                           	opt stack 0
 12161                           pclatu	equ	0xFFB
 12162                           pclath	equ	0xFFA
 12163                           tblptru	equ	0xFF8
 12164                           tblptrh	equ	0xFF7
 12165                           tblptrl	equ	0xFF6
 12166                           tablat	equ	0xFF5
 12167                           prodh	equ	0xFF4
 12168                           prodl	equ	0xFF3
 12169                           postinc0	equ	0xFEE
 12170                           fsr0h	equ	0xFEA
 12171                           fsr0l	equ	0xFE9
 12172                           wreg	equ	0xFE8
 12173                           postdec1	equ	0xFE5
 12174                           fsr1h	equ	0xFE2
 12175                           fsr1l	equ	0xFE1
 12176                           bsr	equ	0xFE0
 12177                           indf2	equ	0xFDF
 12178                           postinc2	equ	0xFDE
 12179                           postdec2	equ	0xFDD
 12180                           fsr2h	equ	0xFDA
 12181                           fsr2l	equ	0xFD9
 12182                           status	equ	0xFD8
 12183                           
 12184 ;; *************** function ___lmul *****************
 12185 ;; Defined at:
 12186 ;;		line 15 in file "/Applications/microchip/xc8/v1.43/sources/common/Umul32.c"
 12187 ;; Parameters:    Size  Location     Type
 12188 ;;  multiplier      4   28[COMRAM] unsigned long 
 12189 ;;  multiplicand    4   32[COMRAM] unsigned long 
 12190 ;; Auto vars:     Size  Location     Type
 12191 ;;  product         4    0[BANK0 ] unsigned long 
 12192 ;; Return value:  Size  Location     Type
 12193 ;;                  4   28[COMRAM] unsigned long 
 12194 ;; Registers used:
 12195 ;;		wreg, status,2, status,0
 12196 ;; Tracked objects:
 12197 ;;		On entry : 0/0
 12198 ;;		On exit  : 0/0
 12199 ;;		Unchanged: 0/0
 12200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12201 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12202 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12203 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12204 ;;      Totals:         8       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12205 ;;Total ram usage:       12 bytes
 12206 ;; Hardware stack levels used:    1
 12207 ;; Hardware stack levels required when called:    3
 12208 ;; This function calls:
 12209 ;;		Nothing
 12210 ;; This function is called by:
 12211 ;;		_rand
 12212 ;; This function uses a non-reentrant model
 12213 ;;
 12214                           
 12215                           	psect	text68
 12216  0042B6                     __ptext68:
 12217                           	opt stack 0
 12218  0042B6                     ___lmul:
 12219                           	opt stack 15
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;incstack = 0
 12223  0042B6  0E00               	movlw	0
 12224  0042B8  0100               	movlb	0	; () banked
 12225  0042BA  6F60               	movwf	___lmul@product& (0+255),b
 12226  0042BC  0E00               	movlw	0
 12227  0042BE  6F61               	movwf	(___lmul@product+1)& (0+255),b
 12228  0042C0  0E00               	movlw	0
 12229  0042C2  6F62               	movwf	(___lmul@product+2)& (0+255),b
 12230  0042C4  0E00               	movlw	0
 12231  0042C6  6F63               	movwf	(___lmul@product+3)& (0+255),b
 12232  0042C8                     
 12233                           ; BSR set to: 0
 12234  0042C8  A01D               	btfss	___lmul@multiplier,0,c
 12235  0042CA  D00C               	goto	i1l1107
 12236  0042CC  5021               	movf	___lmul@multiplicand,w,c
 12237  0042CE  0100               	movlb	0	; () banked
 12238  0042D0  2760               	addwf	___lmul@product& (0+255),f,b
 12239  0042D2  5022               	movf	___lmul@multiplicand+1,w,c
 12240  0042D4  0100               	movlb	0	; () banked
 12241  0042D6  2361               	addwfc	(___lmul@product+1)& (0+255),f,b
 12242  0042D8  5023               	movf	___lmul@multiplicand+2,w,c
 12243  0042DA  0100               	movlb	0	; () banked
 12244  0042DC  2362               	addwfc	(___lmul@product+2)& (0+255),f,b
 12245  0042DE  5024               	movf	___lmul@multiplicand+3,w,c
 12246  0042E0  0100               	movlb	0	; () banked
 12247  0042E2  2363               	addwfc	(___lmul@product+3)& (0+255),f,b
 12248  0042E4                     i1l1107:
 12249                           
 12250                           ; BSR set to: 0
 12251  0042E4  90D8               	bcf	status,0,c
 12252  0042E6  3621               	rlcf	___lmul@multiplicand,f,c
 12253  0042E8  3622               	rlcf	___lmul@multiplicand+1,f,c
 12254  0042EA  3623               	rlcf	___lmul@multiplicand+2,f,c
 12255  0042EC  3624               	rlcf	___lmul@multiplicand+3,f,c
 12256  0042EE  90D8               	bcf	status,0,c
 12257  0042F0  3220               	rrcf	___lmul@multiplier+3,f,c
 12258  0042F2  321F               	rrcf	___lmul@multiplier+2,f,c
 12259  0042F4  321E               	rrcf	___lmul@multiplier+1,f,c
 12260  0042F6  321D               	rrcf	___lmul@multiplier,f,c
 12261  0042F8  501D               	movf	___lmul@multiplier,w,c
 12262  0042FA  101E               	iorwf	___lmul@multiplier+1,w,c
 12263  0042FC  101F               	iorwf	___lmul@multiplier+2,w,c
 12264  0042FE  1020               	iorwf	___lmul@multiplier+3,w,c
 12265  004300  A4D8               	btfss	status,2,c
 12266  004302  D7E2               	goto	i1l1106
 12267  004304  C060  F01D         	movff	___lmul@product,?___lmul
 12268  004308  C061  F01E         	movff	___lmul@product+1,?___lmul+1
 12269  00430C  C062  F01F         	movff	___lmul@product+2,?___lmul+2
 12270  004310  C063  F020         	movff	___lmul@product+3,?___lmul+3
 12271  004314  0012               	return		;funcret
 12272  004316                     __end_of___lmul:
 12273                           	opt stack 0
 12274                           pclatu	equ	0xFFB
 12275                           pclath	equ	0xFFA
 12276                           tblptru	equ	0xFF8
 12277                           tblptrh	equ	0xFF7
 12278                           tblptrl	equ	0xFF6
 12279                           tablat	equ	0xFF5
 12280                           prodh	equ	0xFF4
 12281                           prodl	equ	0xFF3
 12282                           postinc0	equ	0xFEE
 12283                           fsr0h	equ	0xFEA
 12284                           fsr0l	equ	0xFE9
 12285                           wreg	equ	0xFE8
 12286                           postdec1	equ	0xFE5
 12287                           fsr1h	equ	0xFE2
 12288                           fsr1l	equ	0xFE1
 12289                           bsr	equ	0xFE0
 12290                           indf2	equ	0xFDF
 12291                           postinc2	equ	0xFDE
 12292                           postdec2	equ	0xFDD
 12293                           fsr2h	equ	0xFDA
 12294                           fsr2l	equ	0xFD9
 12295                           status	equ	0xFD8
 12296                           
 12297 ;; *************** function ___awmod *****************
 12298 ;; Defined at:
 12299 ;;		line 8 in file "/Applications/microchip/xc8/v1.43/sources/common/awmod.c"
 12300 ;; Parameters:    Size  Location     Type
 12301 ;;  dividend        2    4[BANK0 ] int 
 12302 ;;  divisor         2    6[BANK0 ] int 
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;  sign            1    9[BANK0 ] unsigned char 
 12305 ;;  counter         1    8[BANK0 ] unsigned char 
 12306 ;; Return value:  Size  Location     Type
 12307 ;;                  2    4[BANK0 ] int 
 12308 ;; Registers used:
 12309 ;;		wreg, status,2, status,0
 12310 ;; Tracked objects:
 12311 ;;		On entry : 0/0
 12312 ;;		On exit  : 0/0
 12313 ;;		Unchanged: 0/0
 12314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12315 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12316 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12318 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12319 ;;Total ram usage:        6 bytes
 12320 ;; Hardware stack levels used:    1
 12321 ;; Hardware stack levels required when called:    3
 12322 ;; This function calls:
 12323 ;;		Nothing
 12324 ;; This function is called by:
 12325 ;;		_get_random_color
 12326 ;;		_set_load_led
 12327 ;; This function uses a non-reentrant model
 12328 ;;
 12329                           
 12330                           	psect	text69
 12331  003578                     __ptext69:
 12332                           	opt stack 0
 12333  003578                     ___awmod:
 12334                           	opt stack 16
 12335                           
 12336                           ;incstack = 0
 12337  003578  0E00               	movlw	0
 12338  00357A  0100               	movlb	0	; () banked
 12339  00357C  6F69               	movwf	___awmod@sign& (0+255),b
 12340                           
 12341                           ; BSR set to: 0
 12342  00357E  0100               	movlb	0	; () banked
 12343  003580  AF65               	btfss	(___awmod@dividend+1)& (0+255),7,b
 12344  003582  D008               	goto	i1l1275
 12345                           
 12346                           ; BSR set to: 0
 12347  003584  0100               	movlb	0	; () banked
 12348  003586  6D64               	negf	___awmod@dividend& (0+255),b
 12349  003588  1F65               	comf	(___awmod@dividend+1)& (0+255),f,b
 12350  00358A  B0D8               	btfsc	status,0,c
 12351  00358C  2B65               	incf	(___awmod@dividend+1)& (0+255),f,b
 12352                           
 12353                           ; BSR set to: 0
 12354  00358E  0E01               	movlw	1
 12355  003590  0100               	movlb	0	; () banked
 12356  003592  6F69               	movwf	___awmod@sign& (0+255),b
 12357  003594                     i1l1275:
 12358                           
 12359                           ; BSR set to: 0
 12360                           
 12361                           ; BSR set to: 0
 12362  003594  0100               	movlb	0	; () banked
 12363  003596  AF67               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12364  003598  D005               	goto	i1l1276
 12365                           
 12366                           ; BSR set to: 0
 12367  00359A  0100               	movlb	0	; () banked
 12368  00359C  6D66               	negf	___awmod@divisor& (0+255),b
 12369  00359E  1F67               	comf	(___awmod@divisor+1)& (0+255),f,b
 12370  0035A0  B0D8               	btfsc	status,0,c
 12371  0035A2  2B67               	incf	(___awmod@divisor+1)& (0+255),f,b
 12372  0035A4                     i1l1276:
 12373                           
 12374                           ; BSR set to: 0
 12375                           
 12376                           ; BSR set to: 0
 12377  0035A4  0100               	movlb	0	; () banked
 12378  0035A6  5166               	movf	___awmod@divisor& (0+255),w,b
 12379  0035A8  0100               	movlb	0	; () banked
 12380  0035AA  1167               	iorwf	(___awmod@divisor+1)& (0+255),w,b
 12381  0035AC  B4D8               	btfsc	status,2,c
 12382  0035AE  D026               	goto	i1l1283
 12383                           
 12384                           ; BSR set to: 0
 12385  0035B0  0E01               	movlw	1
 12386  0035B2  0100               	movlb	0	; () banked
 12387  0035B4  6F68               	movwf	___awmod@counter& (0+255),b
 12388  0035B6  D006               	goto	i1l1278
 12389  0035B8                     
 12390                           ; BSR set to: 0
 12391                           
 12392                           ; BSR set to: 0
 12393  0035B8  0100               	movlb	0	; () banked
 12394  0035BA  90D8               	bcf	status,0,c
 12395  0035BC  3766               	rlcf	___awmod@divisor& (0+255),f,b
 12396  0035BE  3767               	rlcf	(___awmod@divisor+1)& (0+255),f,b
 12397  0035C0  0100               	movlb	0	; () banked
 12398  0035C2  2B68               	incf	___awmod@counter& (0+255),f,b
 12399  0035C4                     i1l1278:
 12400                           
 12401                           ; BSR set to: 0
 12402                           
 12403                           ; BSR set to: 0
 12404  0035C4  0100               	movlb	0	; () banked
 12405  0035C6  AF67               	btfss	(___awmod@divisor+1)& (0+255),7,b
 12406  0035C8  D7F7               	goto	i1l1279
 12407  0035CA                     i1u777_20:
 12408                           
 12409                           ; BSR set to: 0
 12410                           
 12411                           ; BSR set to: 0
 12412                           
 12413                           ; BSR set to: 0
 12414  0035CA  0100               	movlb	0	; () banked
 12415  0035CC  5166               	movf	___awmod@divisor& (0+255),w,b
 12416  0035CE  0100               	movlb	0	; () banked
 12417  0035D0  5D64               	subwf	___awmod@dividend& (0+255),w,b
 12418  0035D2  0100               	movlb	0	; () banked
 12419  0035D4  5167               	movf	(___awmod@divisor+1)& (0+255),w,b
 12420  0035D6  0100               	movlb	0	; () banked
 12421  0035D8  5965               	subwfb	(___awmod@dividend+1)& (0+255),w,b
 12422  0035DA  A0D8               	btfss	status,0,c
 12423  0035DC  D008               	goto	i1l1282
 12424                           
 12425                           ; BSR set to: 0
 12426  0035DE  0100               	movlb	0	; () banked
 12427  0035E0  5166               	movf	___awmod@divisor& (0+255),w,b
 12428  0035E2  0100               	movlb	0	; () banked
 12429  0035E4  5F64               	subwf	___awmod@dividend& (0+255),f,b
 12430  0035E6  0100               	movlb	0	; () banked
 12431  0035E8  5167               	movf	(___awmod@divisor+1)& (0+255),w,b
 12432  0035EA  0100               	movlb	0	; () banked
 12433  0035EC  5B65               	subwfb	(___awmod@dividend+1)& (0+255),f,b
 12434  0035EE                     i1l1282:
 12435                           
 12436                           ; BSR set to: 0
 12437                           
 12438                           ; BSR set to: 0
 12439  0035EE  0100               	movlb	0	; () banked
 12440  0035F0  90D8               	bcf	status,0,c
 12441  0035F2  3367               	rrcf	(___awmod@divisor+1)& (0+255),f,b
 12442  0035F4  3366               	rrcf	___awmod@divisor& (0+255),f,b
 12443                           
 12444                           ; BSR set to: 0
 12445  0035F6  0100               	movlb	0	; () banked
 12446  0035F8  2F68               	decfsz	___awmod@counter& (0+255),f,b
 12447  0035FA  D7E7               	goto	i1u777_20
 12448  0035FC                     i1l1283:
 12449                           
 12450                           ; BSR set to: 0
 12451                           
 12452                           ; BSR set to: 0
 12453                           
 12454                           ; BSR set to: 0
 12455  0035FC  0100               	movlb	0	; () banked
 12456  0035FE  5169               	movf	___awmod@sign& (0+255),w,b
 12457  003600  0100               	movlb	0	; () banked
 12458  003602  B4D8               	btfsc	status,2,c
 12459  003604  D005               	goto	i1l1284
 12460                           
 12461                           ; BSR set to: 0
 12462  003606  0100               	movlb	0	; () banked
 12463  003608  6D64               	negf	___awmod@dividend& (0+255),b
 12464  00360A  1F65               	comf	(___awmod@dividend+1)& (0+255),f,b
 12465  00360C  B0D8               	btfsc	status,0,c
 12466  00360E  2B65               	incf	(___awmod@dividend+1)& (0+255),f,b
 12467  003610                     i1l1284:
 12468                           
 12469                           ; BSR set to: 0
 12470                           
 12471                           ; BSR set to: 0
 12472  003610  C064  F064         	movff	___awmod@dividend,?___awmod
 12473  003614  C065  F065         	movff	___awmod@dividend+1,?___awmod+1
 12474  003618  0012               	return	
 12475  00361A                     __end_of___awmod:
 12476                           	opt stack 0
 12477                           pclatu	equ	0xFFB
 12478                           pclath	equ	0xFFA
 12479                           tblptru	equ	0xFF8
 12480                           tblptrh	equ	0xFF7
 12481                           tblptrl	equ	0xFF6
 12482                           tablat	equ	0xFF5
 12483                           prodh	equ	0xFF4
 12484                           prodl	equ	0xFF3
 12485                           postinc0	equ	0xFEE
 12486                           fsr0h	equ	0xFEA
 12487                           fsr0l	equ	0xFE9
 12488                           wreg	equ	0xFE8
 12489                           postdec1	equ	0xFE5
 12490                           fsr1h	equ	0xFE2
 12491                           fsr1l	equ	0xFE1
 12492                           bsr	equ	0xFE0
 12493                           indf2	equ	0xFDF
 12494                           postinc2	equ	0xFDE
 12495                           postdec2	equ	0xFDD
 12496                           fsr2h	equ	0xFDA
 12497                           fsr2l	equ	0xFD9
 12498                           status	equ	0xFD8
 12499                           
 12500 ;; *************** function _draw_circle *****************
 12501 ;; Defined at:
 12502 ;;		line 171 in file "led.c"
 12503 ;; Parameters:    Size  Location     Type
 12504 ;;  x0              2   17[BANK0 ] unsigned int 
 12505 ;;  y0              2   19[BANK0 ] unsigned int 
 12506 ;;  radius          2   21[BANK0 ] unsigned int 
 12507 ;;  clr             2   23[BANK0 ] PTR struct .
 12508 ;;		 -> set_load_led@color(3), 
 12509 ;; Auto vars:     Size  Location     Type
 12510 ;;  y               2   37[BANK0 ] unsigned int 
 12511 ;;  x               2   35[BANK0 ] unsigned int 
 12512 ;;  err             2   33[BANK0 ] unsigned int 
 12513 ;;  dx              2   31[BANK0 ] unsigned int 
 12514 ;;  dy              2   29[BANK0 ] unsigned int 
 12515 ;; Return value:  Size  Location     Type
 12516 ;;                  1    wreg      void 
 12517 ;; Registers used:
 12518 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12519 ;; Tracked objects:
 12520 ;;		On entry : 0/0
 12521 ;;		On exit  : 0/0
 12522 ;;		Unchanged: 0/0
 12523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12524 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12525 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12526 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12527 ;;      Totals:         0      22       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12528 ;;Total ram usage:       22 bytes
 12529 ;; Hardware stack levels used:    1
 12530 ;; Hardware stack levels required when called:    6
 12531 ;; This function calls:
 12532 ;;		_set_pixel
 12533 ;; This function is called by:
 12534 ;;		_set_load_led
 12535 ;; This function uses a non-reentrant model
 12536 ;;
 12537                           
 12538                           	psect	text70
 12539  001B38                     __ptext70:
 12540                           	opt stack 0
 12541  001B38                     _draw_circle:
 12542                           	opt stack 15
 12543                           
 12544                           ;led.c: 173: unsigned int x = radius-1;
 12545                           
 12546                           ; BSR set to: 0
 12547                           ;incstack = 0
 12548  001B38  0EFF               	movlw	255
 12549  001B3A  0100               	movlb	0	; () banked
 12550  001B3C  2575               	addwf	draw_circle@radius& (0+255),w,b
 12551  001B3E  0100               	movlb	0	; () banked
 12552  001B40  6F83               	movwf	draw_circle@x& (0+255),b
 12553  001B42  0EFF               	movlw	255
 12554  001B44  0100               	movlb	0	; () banked
 12555  001B46  2176               	addwfc	(draw_circle@radius+1)& (0+255),w,b
 12556  001B48  0100               	movlb	0	; () banked
 12557  001B4A  6F84               	movwf	(draw_circle@x+1)& (0+255),b
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;led.c: 174: unsigned int y = 0;
 12561  001B4C  0E00               	movlw	0
 12562  001B4E  0100               	movlb	0	; () banked
 12563  001B50  6F86               	movwf	(draw_circle@y+1)& (0+255),b
 12564  001B52  0E00               	movlw	0
 12565  001B54  6F85               	movwf	draw_circle@y& (0+255),b
 12566                           
 12567                           ; BSR set to: 0
 12568                           ;led.c: 175: unsigned int dx = 1;
 12569  001B56  0E00               	movlw	0
 12570  001B58  0100               	movlb	0	; () banked
 12571  001B5A  6F80               	movwf	(draw_circle@dx+1)& (0+255),b
 12572  001B5C  0E01               	movlw	1
 12573  001B5E  6F7F               	movwf	draw_circle@dx& (0+255),b
 12574                           
 12575                           ; BSR set to: 0
 12576                           ;led.c: 176: unsigned int dy = 1;
 12577  001B60  0E00               	movlw	0
 12578  001B62  0100               	movlb	0	; () banked
 12579  001B64  6F7E               	movwf	(draw_circle@dy+1)& (0+255),b
 12580  001B66  0E01               	movlw	1
 12581  001B68  6F7D               	movwf	draw_circle@dy& (0+255),b
 12582                           
 12583                           ; BSR set to: 0
 12584                           ;led.c: 177: unsigned int err = dx - (radius << 1);
 12585  001B6A  C075  F079         	movff	draw_circle@radius,??_draw_circle
 12586  001B6E  C076  F07A         	movff	draw_circle@radius+1,??_draw_circle+1
 12587  001B72  90D8               	bcf	status,0,c
 12588  001B74  0100               	movlb	0	; () banked
 12589  001B76  3779               	rlcf	??_draw_circle& (0+255),f,b
 12590  001B78  377A               	rlcf	(??_draw_circle+1)& (0+255),f,b
 12591  001B7A  0100               	movlb	0	; () banked
 12592  001B7C  1F79               	comf	??_draw_circle& (0+255),f,b
 12593  001B7E  1F7A               	comf	(??_draw_circle+1)& (0+255),f,b
 12594  001B80  4B79               	infsnz	??_draw_circle& (0+255),f,b
 12595  001B82  2B7A               	incf	(??_draw_circle+1)& (0+255),f,b
 12596  001B84  0100               	movlb	0	; () banked
 12597  001B86  517F               	movf	draw_circle@dx& (0+255),w,b
 12598  001B88  0100               	movlb	0	; () banked
 12599  001B8A  2579               	addwf	??_draw_circle& (0+255),w,b
 12600  001B8C  0100               	movlb	0	; () banked
 12601  001B8E  6F81               	movwf	draw_circle@err& (0+255),b
 12602  001B90  0100               	movlb	0	; () banked
 12603  001B92  5180               	movf	(draw_circle@dx+1)& (0+255),w,b
 12604  001B94  0100               	movlb	0	; () banked
 12605  001B96  217A               	addwfc	(??_draw_circle+1)& (0+255),w,b
 12606  001B98  0100               	movlb	0	; () banked
 12607  001B9A  6F82               	movwf	(draw_circle@err+1)& (0+255),b
 12608                           
 12609                           ;led.c: 179: while (x >= y)
 12610  001B9C  D17A               	goto	i1l686
 12611  001B9E                     
 12612                           ; BSR set to: 0
 12613                           ;led.c: 180: {
 12614                           ;led.c: 181: set_pixel(x0 + x, y0 + y, clr);
 12615                           
 12616                           ; BSR set to: 0
 12617  001B9E  0100               	movlb	0	; () banked
 12618  001BA0  5183               	movf	draw_circle@x& (0+255),w,b
 12619  001BA2  0100               	movlb	0	; () banked
 12620  001BA4  2571               	addwf	draw_circle@x0& (0+255),w,b
 12621  001BA6  0100               	movlb	0	; () banked
 12622  001BA8  6F6B               	movwf	set_pixel@x& (0+255),b
 12623  001BAA  0100               	movlb	0	; () banked
 12624  001BAC  5184               	movf	(draw_circle@x+1)& (0+255),w,b
 12625  001BAE  0100               	movlb	0	; () banked
 12626  001BB0  2172               	addwfc	(draw_circle@x0+1)& (0+255),w,b
 12627  001BB2  0100               	movlb	0	; () banked
 12628  001BB4  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 12629  001BB6  0100               	movlb	0	; () banked
 12630  001BB8  5185               	movf	draw_circle@y& (0+255),w,b
 12631  001BBA  0100               	movlb	0	; () banked
 12632  001BBC  2573               	addwf	draw_circle@y0& (0+255),w,b
 12633  001BBE  0100               	movlb	0	; () banked
 12634  001BC0  6F6D               	movwf	set_pixel@y& (0+255),b
 12635  001BC2  0100               	movlb	0	; () banked
 12636  001BC4  5186               	movf	(draw_circle@y+1)& (0+255),w,b
 12637  001BC6  0100               	movlb	0	; () banked
 12638  001BC8  2174               	addwfc	(draw_circle@y0+1)& (0+255),w,b
 12639  001BCA  0100               	movlb	0	; () banked
 12640  001BCC  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 12641  001BCE  C077  F06F         	movff	draw_circle@clr,set_pixel@clr
 12642  001BD2  C078  F070         	movff	draw_circle@clr+1,set_pixel@clr+1
 12643  001BD6  EC7B  F01C         	call	_set_pixel	;wreg free
 12644                           
 12645                           ;led.c: 182: set_pixel(x0 + y, y0 + x, clr);
 12646  001BDA  0100               	movlb	0	; () banked
 12647  001BDC  5185               	movf	draw_circle@y& (0+255),w,b
 12648  001BDE  0100               	movlb	0	; () banked
 12649  001BE0  2571               	addwf	draw_circle@x0& (0+255),w,b
 12650  001BE2  0100               	movlb	0	; () banked
 12651  001BE4  6F6B               	movwf	set_pixel@x& (0+255),b
 12652  001BE6  0100               	movlb	0	; () banked
 12653  001BE8  5186               	movf	(draw_circle@y+1)& (0+255),w,b
 12654  001BEA  0100               	movlb	0	; () banked
 12655  001BEC  2172               	addwfc	(draw_circle@x0+1)& (0+255),w,b
 12656  001BEE  0100               	movlb	0	; () banked
 12657  001BF0  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 12658  001BF2  0100               	movlb	0	; () banked
 12659  001BF4  5183               	movf	draw_circle@x& (0+255),w,b
 12660  001BF6  0100               	movlb	0	; () banked
 12661  001BF8  2573               	addwf	draw_circle@y0& (0+255),w,b
 12662  001BFA  0100               	movlb	0	; () banked
 12663  001BFC  6F6D               	movwf	set_pixel@y& (0+255),b
 12664  001BFE  0100               	movlb	0	; () banked
 12665  001C00  5184               	movf	(draw_circle@x+1)& (0+255),w,b
 12666  001C02  0100               	movlb	0	; () banked
 12667  001C04  2174               	addwfc	(draw_circle@y0+1)& (0+255),w,b
 12668  001C06  0100               	movlb	0	; () banked
 12669  001C08  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 12670  001C0A  C077  F06F         	movff	draw_circle@clr,set_pixel@clr
 12671  001C0E  C078  F070         	movff	draw_circle@clr+1,set_pixel@clr+1
 12672  001C12  EC7B  F01C         	call	_set_pixel	;wreg free
 12673                           
 12674                           ;led.c: 183: set_pixel(x0 - y, y0 + x, clr);
 12675  001C16  C085  F079         	movff	draw_circle@y,??_draw_circle
 12676  001C1A  C086  F07A         	movff	draw_circle@y+1,??_draw_circle+1
 12677  001C1E  0100               	movlb	0	; () banked
 12678  001C20  1F79               	comf	??_draw_circle& (0+255),f,b
 12679  001C22  1F7A               	comf	(??_draw_circle+1)& (0+255),f,b
 12680  001C24  4B79               	infsnz	??_draw_circle& (0+255),f,b
 12681  001C26  2B7A               	incf	(??_draw_circle+1)& (0+255),f,b
 12682  001C28  0100               	movlb	0	; () banked
 12683  001C2A  5171               	movf	draw_circle@x0& (0+255),w,b
 12684  001C2C  0100               	movlb	0	; () banked
 12685  001C2E  2579               	addwf	??_draw_circle& (0+255),w,b
 12686  001C30  0100               	movlb	0	; () banked
 12687  001C32  6F6B               	movwf	set_pixel@x& (0+255),b
 12688  001C34  0100               	movlb	0	; () banked
 12689  001C36  5172               	movf	(draw_circle@x0+1)& (0+255),w,b
 12690  001C38  0100               	movlb	0	; () banked
 12691  001C3A  217A               	addwfc	(??_draw_circle+1)& (0+255),w,b
 12692  001C3C  0100               	movlb	0	; () banked
 12693  001C3E  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 12694  001C40  0100               	movlb	0	; () banked
 12695  001C42  5183               	movf	draw_circle@x& (0+255),w,b
 12696  001C44  0100               	movlb	0	; () banked
 12697  001C46  2573               	addwf	draw_circle@y0& (0+255),w,b
 12698  001C48  0100               	movlb	0	; () banked
 12699  001C4A  6F6D               	movwf	set_pixel@y& (0+255),b
 12700  001C4C  0100               	movlb	0	; () banked
 12701  001C4E  5184               	movf	(draw_circle@x+1)& (0+255),w,b
 12702  001C50  0100               	movlb	0	; () banked
 12703  001C52  2174               	addwfc	(draw_circle@y0+1)& (0+255),w,b
 12704  001C54  0100               	movlb	0	; () banked
 12705  001C56  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 12706  001C58  C077  F06F         	movff	draw_circle@clr,set_pixel@clr
 12707  001C5C  C078  F070         	movff	draw_circle@clr+1,set_pixel@clr+1
 12708  001C60  EC7B  F01C         	call	_set_pixel	;wreg free
 12709                           
 12710                           ;led.c: 184: set_pixel(x0 - x, y0 + y, clr);
 12711  001C64  C083  F079         	movff	draw_circle@x,??_draw_circle
 12712  001C68  C084  F07A         	movff	draw_circle@x+1,??_draw_circle+1
 12713  001C6C  0100               	movlb	0	; () banked
 12714  001C6E  1F79               	comf	??_draw_circle& (0+255),f,b
 12715  001C70  1F7A               	comf	(??_draw_circle+1)& (0+255),f,b
 12716  001C72  4B79               	infsnz	??_draw_circle& (0+255),f,b
 12717  001C74  2B7A               	incf	(??_draw_circle+1)& (0+255),f,b
 12718  001C76  0100               	movlb	0	; () banked
 12719  001C78  5171               	movf	draw_circle@x0& (0+255),w,b
 12720  001C7A  0100               	movlb	0	; () banked
 12721  001C7C  2579               	addwf	??_draw_circle& (0+255),w,b
 12722  001C7E  0100               	movlb	0	; () banked
 12723  001C80  6F6B               	movwf	set_pixel@x& (0+255),b
 12724  001C82  0100               	movlb	0	; () banked
 12725  001C84  5172               	movf	(draw_circle@x0+1)& (0+255),w,b
 12726  001C86  0100               	movlb	0	; () banked
 12727  001C88  217A               	addwfc	(??_draw_circle+1)& (0+255),w,b
 12728  001C8A  0100               	movlb	0	; () banked
 12729  001C8C  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 12730  001C8E  0100               	movlb	0	; () banked
 12731  001C90  5185               	movf	draw_circle@y& (0+255),w,b
 12732  001C92  0100               	movlb	0	; () banked
 12733  001C94  2573               	addwf	draw_circle@y0& (0+255),w,b
 12734  001C96  0100               	movlb	0	; () banked
 12735  001C98  6F6D               	movwf	set_pixel@y& (0+255),b
 12736  001C9A  0100               	movlb	0	; () banked
 12737  001C9C  5186               	movf	(draw_circle@y+1)& (0+255),w,b
 12738  001C9E  0100               	movlb	0	; () banked
 12739  001CA0  2174               	addwfc	(draw_circle@y0+1)& (0+255),w,b
 12740  001CA2  0100               	movlb	0	; () banked
 12741  001CA4  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 12742  001CA6  C077  F06F         	movff	draw_circle@clr,set_pixel@clr
 12743  001CAA  C078  F070         	movff	draw_circle@clr+1,set_pixel@clr+1
 12744  001CAE  EC7B  F01C         	call	_set_pixel	;wreg free
 12745                           
 12746                           ;led.c: 185: set_pixel(x0 - x, y0 - y, clr);
 12747  001CB2  C083  F079         	movff	draw_circle@x,??_draw_circle
 12748  001CB6  C084  F07A         	movff	draw_circle@x+1,??_draw_circle+1
 12749  001CBA  0100               	movlb	0	; () banked
 12750  001CBC  1F79               	comf	??_draw_circle& (0+255),f,b
 12751  001CBE  1F7A               	comf	(??_draw_circle+1)& (0+255),f,b
 12752  001CC0  4B79               	infsnz	??_draw_circle& (0+255),f,b
 12753  001CC2  2B7A               	incf	(??_draw_circle+1)& (0+255),f,b
 12754  001CC4  0100               	movlb	0	; () banked
 12755  001CC6  5171               	movf	draw_circle@x0& (0+255),w,b
 12756  001CC8  0100               	movlb	0	; () banked
 12757  001CCA  2579               	addwf	??_draw_circle& (0+255),w,b
 12758  001CCC  0100               	movlb	0	; () banked
 12759  001CCE  6F6B               	movwf	set_pixel@x& (0+255),b
 12760  001CD0  0100               	movlb	0	; () banked
 12761  001CD2  5172               	movf	(draw_circle@x0+1)& (0+255),w,b
 12762  001CD4  0100               	movlb	0	; () banked
 12763  001CD6  217A               	addwfc	(??_draw_circle+1)& (0+255),w,b
 12764  001CD8  0100               	movlb	0	; () banked
 12765  001CDA  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 12766  001CDC  C085  F07B         	movff	draw_circle@y,??_draw_circle+2
 12767  001CE0  C086  F07C         	movff	draw_circle@y+1,??_draw_circle+3
 12768  001CE4  0100               	movlb	0	; () banked
 12769  001CE6  1F7B               	comf	(??_draw_circle+2)& (0+255),f,b
 12770  001CE8  1F7C               	comf	(??_draw_circle+3)& (0+255),f,b
 12771  001CEA  4B7B               	infsnz	(??_draw_circle+2)& (0+255),f,b
 12772  001CEC  2B7C               	incf	(??_draw_circle+3)& (0+255),f,b
 12773  001CEE  0100               	movlb	0	; () banked
 12774  001CF0  5173               	movf	draw_circle@y0& (0+255),w,b
 12775  001CF2  0100               	movlb	0	; () banked
 12776  001CF4  257B               	addwf	(??_draw_circle+2)& (0+255),w,b
 12777  001CF6  0100               	movlb	0	; () banked
 12778  001CF8  6F6D               	movwf	set_pixel@y& (0+255),b
 12779  001CFA  0100               	movlb	0	; () banked
 12780  001CFC  5174               	movf	(draw_circle@y0+1)& (0+255),w,b
 12781  001CFE  0100               	movlb	0	; () banked
 12782  001D00  217C               	addwfc	(??_draw_circle+3)& (0+255),w,b
 12783  001D02  0100               	movlb	0	; () banked
 12784  001D04  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 12785  001D06  C077  F06F         	movff	draw_circle@clr,set_pixel@clr
 12786  001D0A  C078  F070         	movff	draw_circle@clr+1,set_pixel@clr+1
 12787  001D0E  EC7B  F01C         	call	_set_pixel	;wreg free
 12788                           
 12789                           ;led.c: 186: set_pixel(x0 - y, y0 - x, clr);
 12790  001D12  C085  F079         	movff	draw_circle@y,??_draw_circle
 12791  001D16  C086  F07A         	movff	draw_circle@y+1,??_draw_circle+1
 12792  001D1A  0100               	movlb	0	; () banked
 12793  001D1C  1F79               	comf	??_draw_circle& (0+255),f,b
 12794  001D1E  1F7A               	comf	(??_draw_circle+1)& (0+255),f,b
 12795  001D20  4B79               	infsnz	??_draw_circle& (0+255),f,b
 12796  001D22  2B7A               	incf	(??_draw_circle+1)& (0+255),f,b
 12797  001D24  0100               	movlb	0	; () banked
 12798  001D26  5171               	movf	draw_circle@x0& (0+255),w,b
 12799  001D28  0100               	movlb	0	; () banked
 12800  001D2A  2579               	addwf	??_draw_circle& (0+255),w,b
 12801  001D2C  0100               	movlb	0	; () banked
 12802  001D2E  6F6B               	movwf	set_pixel@x& (0+255),b
 12803  001D30  0100               	movlb	0	; () banked
 12804  001D32  5172               	movf	(draw_circle@x0+1)& (0+255),w,b
 12805  001D34  0100               	movlb	0	; () banked
 12806  001D36  217A               	addwfc	(??_draw_circle+1)& (0+255),w,b
 12807  001D38  0100               	movlb	0	; () banked
 12808  001D3A  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 12809  001D3C  C083  F07B         	movff	draw_circle@x,??_draw_circle+2
 12810  001D40  C084  F07C         	movff	draw_circle@x+1,??_draw_circle+3
 12811  001D44  0100               	movlb	0	; () banked
 12812  001D46  1F7B               	comf	(??_draw_circle+2)& (0+255),f,b
 12813  001D48  1F7C               	comf	(??_draw_circle+3)& (0+255),f,b
 12814  001D4A  4B7B               	infsnz	(??_draw_circle+2)& (0+255),f,b
 12815  001D4C  2B7C               	incf	(??_draw_circle+3)& (0+255),f,b
 12816  001D4E  0100               	movlb	0	; () banked
 12817  001D50  5173               	movf	draw_circle@y0& (0+255),w,b
 12818  001D52  0100               	movlb	0	; () banked
 12819  001D54  257B               	addwf	(??_draw_circle+2)& (0+255),w,b
 12820  001D56  0100               	movlb	0	; () banked
 12821  001D58  6F6D               	movwf	set_pixel@y& (0+255),b
 12822  001D5A  0100               	movlb	0	; () banked
 12823  001D5C  5174               	movf	(draw_circle@y0+1)& (0+255),w,b
 12824  001D5E  0100               	movlb	0	; () banked
 12825  001D60  217C               	addwfc	(??_draw_circle+3)& (0+255),w,b
 12826  001D62  0100               	movlb	0	; () banked
 12827  001D64  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 12828  001D66  C077  F06F         	movff	draw_circle@clr,set_pixel@clr
 12829  001D6A  C078  F070         	movff	draw_circle@clr+1,set_pixel@clr+1
 12830  001D6E  EC7B  F01C         	call	_set_pixel	;wreg free
 12831                           
 12832                           ;led.c: 187: set_pixel(x0 + y, y0 - x, clr);
 12833  001D72  0100               	movlb	0	; () banked
 12834  001D74  5185               	movf	draw_circle@y& (0+255),w,b
 12835  001D76  0100               	movlb	0	; () banked
 12836  001D78  2571               	addwf	draw_circle@x0& (0+255),w,b
 12837  001D7A  0100               	movlb	0	; () banked
 12838  001D7C  6F6B               	movwf	set_pixel@x& (0+255),b
 12839  001D7E  0100               	movlb	0	; () banked
 12840  001D80  5186               	movf	(draw_circle@y+1)& (0+255),w,b
 12841  001D82  0100               	movlb	0	; () banked
 12842  001D84  2172               	addwfc	(draw_circle@x0+1)& (0+255),w,b
 12843  001D86  0100               	movlb	0	; () banked
 12844  001D88  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 12845  001D8A  C083  F079         	movff	draw_circle@x,??_draw_circle
 12846  001D8E  C084  F07A         	movff	draw_circle@x+1,??_draw_circle+1
 12847  001D92  0100               	movlb	0	; () banked
 12848  001D94  1F79               	comf	??_draw_circle& (0+255),f,b
 12849  001D96  1F7A               	comf	(??_draw_circle+1)& (0+255),f,b
 12850  001D98  4B79               	infsnz	??_draw_circle& (0+255),f,b
 12851  001D9A  2B7A               	incf	(??_draw_circle+1)& (0+255),f,b
 12852  001D9C  0100               	movlb	0	; () banked
 12853  001D9E  5173               	movf	draw_circle@y0& (0+255),w,b
 12854  001DA0  0100               	movlb	0	; () banked
 12855  001DA2  2579               	addwf	??_draw_circle& (0+255),w,b
 12856  001DA4  0100               	movlb	0	; () banked
 12857  001DA6  6F6D               	movwf	set_pixel@y& (0+255),b
 12858  001DA8  0100               	movlb	0	; () banked
 12859  001DAA  5174               	movf	(draw_circle@y0+1)& (0+255),w,b
 12860  001DAC  0100               	movlb	0	; () banked
 12861  001DAE  217A               	addwfc	(??_draw_circle+1)& (0+255),w,b
 12862  001DB0  0100               	movlb	0	; () banked
 12863  001DB2  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 12864  001DB4  C077  F06F         	movff	draw_circle@clr,set_pixel@clr
 12865  001DB8  C078  F070         	movff	draw_circle@clr+1,set_pixel@clr+1
 12866  001DBC  EC7B  F01C         	call	_set_pixel	;wreg free
 12867                           
 12868                           ;led.c: 188: set_pixel(x0 + x, y0 - y, clr);
 12869  001DC0  0100               	movlb	0	; () banked
 12870  001DC2  5183               	movf	draw_circle@x& (0+255),w,b
 12871  001DC4  0100               	movlb	0	; () banked
 12872  001DC6  2571               	addwf	draw_circle@x0& (0+255),w,b
 12873  001DC8  0100               	movlb	0	; () banked
 12874  001DCA  6F6B               	movwf	set_pixel@x& (0+255),b
 12875  001DCC  0100               	movlb	0	; () banked
 12876  001DCE  5184               	movf	(draw_circle@x+1)& (0+255),w,b
 12877  001DD0  0100               	movlb	0	; () banked
 12878  001DD2  2172               	addwfc	(draw_circle@x0+1)& (0+255),w,b
 12879  001DD4  0100               	movlb	0	; () banked
 12880  001DD6  6F6C               	movwf	(set_pixel@x+1)& (0+255),b
 12881  001DD8  C085  F079         	movff	draw_circle@y,??_draw_circle
 12882  001DDC  C086  F07A         	movff	draw_circle@y+1,??_draw_circle+1
 12883  001DE0  0100               	movlb	0	; () banked
 12884  001DE2  1F79               	comf	??_draw_circle& (0+255),f,b
 12885  001DE4  1F7A               	comf	(??_draw_circle+1)& (0+255),f,b
 12886  001DE6  4B79               	infsnz	??_draw_circle& (0+255),f,b
 12887  001DE8  2B7A               	incf	(??_draw_circle+1)& (0+255),f,b
 12888  001DEA  0100               	movlb	0	; () banked
 12889  001DEC  5173               	movf	draw_circle@y0& (0+255),w,b
 12890  001DEE  0100               	movlb	0	; () banked
 12891  001DF0  2579               	addwf	??_draw_circle& (0+255),w,b
 12892  001DF2  0100               	movlb	0	; () banked
 12893  001DF4  6F6D               	movwf	set_pixel@y& (0+255),b
 12894  001DF6  0100               	movlb	0	; () banked
 12895  001DF8  5174               	movf	(draw_circle@y0+1)& (0+255),w,b
 12896  001DFA  0100               	movlb	0	; () banked
 12897  001DFC  217A               	addwfc	(??_draw_circle+1)& (0+255),w,b
 12898  001DFE  0100               	movlb	0	; () banked
 12899  001E00  6F6E               	movwf	(set_pixel@y+1)& (0+255),b
 12900  001E02  C077  F06F         	movff	draw_circle@clr,set_pixel@clr
 12901  001E06  C078  F070         	movff	draw_circle@clr+1,set_pixel@clr+1
 12902  001E0A  EC7B  F01C         	call	_set_pixel	;wreg free
 12903                           
 12904                           ;led.c: 190: if (err <= 0)
 12905  001E0E  0100               	movlb	0	; () banked
 12906  001E10  5181               	movf	draw_circle@err& (0+255),w,b
 12907  001E12  0100               	movlb	0	; () banked
 12908  001E14  1182               	iorwf	(draw_circle@err+1)& (0+255),w,b
 12909  001E16  A4D8               	btfss	status,2,c
 12910  001E18  D010               	goto	i1l685
 12911                           
 12912                           ; BSR set to: 0
 12913                           ;led.c: 191: {
 12914                           ;led.c: 192: y++;
 12915  001E1A  0100               	movlb	0	; () banked
 12916  001E1C  4B85               	infsnz	draw_circle@y& (0+255),f,b
 12917  001E1E  2B86               	incf	(draw_circle@y+1)& (0+255),f,b
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;led.c: 193: err += dy;
 12921  001E20  0100               	movlb	0	; () banked
 12922  001E22  517D               	movf	draw_circle@dy& (0+255),w,b
 12923  001E24  0100               	movlb	0	; () banked
 12924  001E26  2781               	addwf	draw_circle@err& (0+255),f,b
 12925  001E28  0100               	movlb	0	; () banked
 12926  001E2A  517E               	movf	(draw_circle@dy+1)& (0+255),w,b
 12927  001E2C  0100               	movlb	0	; () banked
 12928  001E2E  2382               	addwfc	(draw_circle@err+1)& (0+255),f,b
 12929                           
 12930                           ; BSR set to: 0
 12931                           ;led.c: 194: dy += 2;
 12932  001E30  0E02               	movlw	2
 12933  001E32  0100               	movlb	0	; () banked
 12934  001E34  277D               	addwf	draw_circle@dy& (0+255),f,b
 12935  001E36  0E00               	movlw	0
 12936  001E38  237E               	addwfc	(draw_circle@dy+1)& (0+255),f,b
 12937  001E3A                     i1l685:
 12938                           
 12939                           ; BSR set to: 0
 12940                           ;led.c: 195: }
 12941                           ;led.c: 196: if (err > 0)
 12942                           
 12943                           ; BSR set to: 0
 12944  001E3A  0100               	movlb	0	; () banked
 12945  001E3C  5181               	movf	draw_circle@err& (0+255),w,b
 12946  001E3E  0100               	movlb	0	; () banked
 12947  001E40  1182               	iorwf	(draw_circle@err+1)& (0+255),w,b
 12948  001E42  B4D8               	btfsc	status,2,c
 12949  001E44  D026               	goto	i1l686
 12950                           
 12951                           ; BSR set to: 0
 12952                           ;led.c: 197: {
 12953                           ;led.c: 198: x--;
 12954  001E46  0100               	movlb	0	; () banked
 12955  001E48  0783               	decf	draw_circle@x& (0+255),f,b
 12956  001E4A  A0D8               	btfss	status,0,c
 12957  001E4C  0784               	decf	(draw_circle@x+1)& (0+255),f,b
 12958                           
 12959                           ; BSR set to: 0
 12960                           ;led.c: 199: dx += 2;
 12961  001E4E  0E02               	movlw	2
 12962  001E50  0100               	movlb	0	; () banked
 12963  001E52  277F               	addwf	draw_circle@dx& (0+255),f,b
 12964  001E54  0E00               	movlw	0
 12965  001E56  2380               	addwfc	(draw_circle@dx+1)& (0+255),f,b
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;led.c: 200: err += (-radius << 1) + dx;
 12969  001E58  C075  F079         	movff	draw_circle@radius,??_draw_circle
 12970  001E5C  C076  F07A         	movff	draw_circle@radius+1,??_draw_circle+1
 12971  001E60  0100               	movlb	0	; () banked
 12972  001E62  1F79               	comf	??_draw_circle& (0+255),f,b
 12973  001E64  1F7A               	comf	(??_draw_circle+1)& (0+255),f,b
 12974  001E66  4B79               	infsnz	??_draw_circle& (0+255),f,b
 12975  001E68  2B7A               	incf	(??_draw_circle+1)& (0+255),f,b
 12976  001E6A  90D8               	bcf	status,0,c
 12977  001E6C  0100               	movlb	0	; () banked
 12978  001E6E  3779               	rlcf	??_draw_circle& (0+255),f,b
 12979  001E70  377A               	rlcf	(??_draw_circle+1)& (0+255),f,b
 12980  001E72  0100               	movlb	0	; () banked
 12981  001E74  517F               	movf	draw_circle@dx& (0+255),w,b
 12982  001E76  0100               	movlb	0	; () banked
 12983  001E78  2779               	addwf	??_draw_circle& (0+255),f,b
 12984  001E7A  0100               	movlb	0	; () banked
 12985  001E7C  5180               	movf	(draw_circle@dx+1)& (0+255),w,b
 12986  001E7E  0100               	movlb	0	; () banked
 12987  001E80  237A               	addwfc	(??_draw_circle+1)& (0+255),f,b
 12988  001E82  0100               	movlb	0	; () banked
 12989  001E84  5179               	movf	??_draw_circle& (0+255),w,b
 12990  001E86  0100               	movlb	0	; () banked
 12991  001E88  2781               	addwf	draw_circle@err& (0+255),f,b
 12992  001E8A  0100               	movlb	0	; () banked
 12993  001E8C  517A               	movf	(??_draw_circle+1)& (0+255),w,b
 12994  001E8E  0100               	movlb	0	; () banked
 12995  001E90  2382               	addwfc	(draw_circle@err+1)& (0+255),f,b
 12996  001E92                     i1l686:
 12997                           
 12998                           ; BSR set to: 0
 12999                           
 13000                           ; BSR set to: 0
 13001                           
 13002                           ; BSR set to: 0
 13003  001E92  0100               	movlb	0	; () banked
 13004  001E94  5185               	movf	draw_circle@y& (0+255),w,b
 13005  001E96  0100               	movlb	0	; () banked
 13006  001E98  5D83               	subwf	draw_circle@x& (0+255),w,b
 13007  001E9A  0100               	movlb	0	; () banked
 13008  001E9C  5186               	movf	(draw_circle@y+1)& (0+255),w,b
 13009  001E9E  0100               	movlb	0	; () banked
 13010  001EA0  5984               	subwfb	(draw_circle@x+1)& (0+255),w,b
 13011  001EA2  A0D8               	btfss	status,0,c
 13012  001EA4  0012               	return	
 13013  001EA6  D67B               	goto	i1l684
 13014  001EA8                     __end_of_draw_circle:
 13015                           	opt stack 0
 13016                           pclatu	equ	0xFFB
 13017                           pclath	equ	0xFFA
 13018                           tblptru	equ	0xFF8
 13019                           tblptrh	equ	0xFF7
 13020                           tblptrl	equ	0xFF6
 13021                           tablat	equ	0xFF5
 13022                           prodh	equ	0xFF4
 13023                           prodl	equ	0xFF3
 13024                           postinc0	equ	0xFEE
 13025                           fsr0h	equ	0xFEA
 13026                           fsr0l	equ	0xFE9
 13027                           wreg	equ	0xFE8
 13028                           postdec1	equ	0xFE5
 13029                           fsr1h	equ	0xFE2
 13030                           fsr1l	equ	0xFE1
 13031                           bsr	equ	0xFE0
 13032                           indf2	equ	0xFDF
 13033                           postinc2	equ	0xFDE
 13034                           postdec2	equ	0xFDD
 13035                           fsr2h	equ	0xFDA
 13036                           fsr2l	equ	0xFD9
 13037                           status	equ	0xFD8
 13038                           
 13039 ;; *************** function _set_pixel *****************
 13040 ;; Defined at:
 13041 ;;		line 134 in file "led.c"
 13042 ;; Parameters:    Size  Location     Type
 13043 ;;  x               2   11[BANK0 ] unsigned int 
 13044 ;;  y               2   13[BANK0 ] unsigned int 
 13045 ;;  clr             2   15[BANK0 ] PTR struct .
 13046 ;;		 -> set_jason@clr(3), set_en_mj@clr(3), set_minell@clr(3), set_dag@clr(3), 
 13047 ;;		 -> set_trou@clr(3), set_verjaars@clr(3), set_gelukkige@clr(3), set_load_led@color(3), 
 13048 ;;		 -> set_white_pixel@white(3), 
 13049 ;; Auto vars:     Size  Location     Type
 13050 ;;		None
 13051 ;; Return value:  Size  Location     Type
 13052 ;;                  1    wreg      void 
 13053 ;; Registers used:
 13054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13055 ;; Tracked objects:
 13056 ;;		On entry : 0/0
 13057 ;;		On exit  : 0/0
 13058 ;;		Unchanged: 0/0
 13059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13063 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13064 ;;Total ram usage:        6 bytes
 13065 ;; Hardware stack levels used:    1
 13066 ;; Hardware stack levels required when called:    5
 13067 ;; This function calls:
 13068 ;;		_set_pixel_pwm
 13069 ;; This function is called by:
 13070 ;;		_set_white_pixel
 13071 ;;		_draw_circle
 13072 ;;		_set_gelukkige
 13073 ;;		_set_verjaars
 13074 ;;		_set_trou
 13075 ;;		_set_dag
 13076 ;;		_set_minell
 13077 ;;		_set_en_mj
 13078 ;;		_set_jason
 13079 ;; This function uses a non-reentrant model
 13080 ;;
 13081                           
 13082                           	psect	text71
 13083  0038F6                     __ptext71:
 13084                           	opt stack 0
 13085  0038F6                     _set_pixel:
 13086                           	opt stack 14
 13087                           
 13088                           ;led.c: 136: set_pixel_pwm(x,y,clr->R, R);
 13089                           
 13090                           ; BSR set to: 0
 13091                           ;incstack = 0
 13092  0038F6  C06B  F060         	movff	set_pixel@x,set_pixel_pwm@x
 13093  0038FA  C06C  F061         	movff	set_pixel@x+1,set_pixel_pwm@x+1
 13094  0038FE  C06D  F062         	movff	set_pixel@y,set_pixel_pwm@y
 13095  003902  C06E  F063         	movff	set_pixel@y+1,set_pixel_pwm@y+1
 13096  003906  C06F  FFD9         	movff	set_pixel@clr,fsr2l
 13097  00390A  C070  FFDA         	movff	set_pixel@clr+1,fsr2h
 13098  00390E  50DF               	movf	indf2,w,c
 13099  003910  0100               	movlb	0	; () banked
 13100  003912  6F64               	movwf	set_pixel_pwm@pwm& (0+255),b
 13101  003914  0E00               	movlw	0
 13102  003916  0100               	movlb	0	; () banked
 13103  003918  6F66               	movwf	(set_pixel_pwm@clr+1)& (0+255),b
 13104  00391A  0E00               	movlw	0
 13105  00391C  6F65               	movwf	set_pixel_pwm@clr& (0+255),b
 13106  00391E  ECED  F015         	call	_set_pixel_pwm	;wreg free
 13107                           
 13108                           ;led.c: 137: set_pixel_pwm(x,y,clr->G, G);
 13109  003922  C06B  F060         	movff	set_pixel@x,set_pixel_pwm@x
 13110  003926  C06C  F061         	movff	set_pixel@x+1,set_pixel_pwm@x+1
 13111  00392A  C06D  F062         	movff	set_pixel@y,set_pixel_pwm@y
 13112  00392E  C06E  F063         	movff	set_pixel@y+1,set_pixel_pwm@y+1
 13113  003932  0100               	movlb	0	; () banked
 13114  003934  EE20 F001          	lfsr	2,1
 13115  003938  516F               	movf	set_pixel@clr& (0+255),w,b
 13116  00393A  26D9               	addwf	fsr2l,f,c
 13117  00393C  5170               	movf	(set_pixel@clr+1)& (0+255),w,b
 13118  00393E  22DA               	addwfc	fsr2h,f,c
 13119  003940  50DF               	movf	indf2,w,c
 13120  003942  0100               	movlb	0	; () banked
 13121  003944  6F64               	movwf	set_pixel_pwm@pwm& (0+255),b
 13122  003946  0E00               	movlw	0
 13123  003948  0100               	movlb	0	; () banked
 13124  00394A  6F66               	movwf	(set_pixel_pwm@clr+1)& (0+255),b
 13125  00394C  0E02               	movlw	2
 13126  00394E  6F65               	movwf	set_pixel_pwm@clr& (0+255),b
 13127  003950  ECED  F015         	call	_set_pixel_pwm	;wreg free
 13128                           
 13129                           ;led.c: 138: set_pixel_pwm(x,y,clr->B, B);
 13130  003954  C06B  F060         	movff	set_pixel@x,set_pixel_pwm@x
 13131  003958  C06C  F061         	movff	set_pixel@x+1,set_pixel_pwm@x+1
 13132  00395C  C06D  F062         	movff	set_pixel@y,set_pixel_pwm@y
 13133  003960  C06E  F063         	movff	set_pixel@y+1,set_pixel_pwm@y+1
 13134  003964  0100               	movlb	0	; () banked
 13135  003966  EE20 F002          	lfsr	2,2
 13136  00396A  516F               	movf	set_pixel@clr& (0+255),w,b
 13137  00396C  26D9               	addwf	fsr2l,f,c
 13138  00396E  5170               	movf	(set_pixel@clr+1)& (0+255),w,b
 13139  003970  22DA               	addwfc	fsr2h,f,c
 13140  003972  50DF               	movf	indf2,w,c
 13141  003974  0100               	movlb	0	; () banked
 13142  003976  6F64               	movwf	set_pixel_pwm@pwm& (0+255),b
 13143  003978  0E00               	movlw	0
 13144  00397A  0100               	movlb	0	; () banked
 13145  00397C  6F66               	movwf	(set_pixel_pwm@clr+1)& (0+255),b
 13146  00397E  0E01               	movlw	1
 13147  003980  6F65               	movwf	set_pixel_pwm@clr& (0+255),b
 13148  003982  ECED  F015         	call	_set_pixel_pwm	;wreg free
 13149  003986  0012               	return		;funcret
 13150  003988                     __end_of_set_pixel:
 13151                           	opt stack 0
 13152                           pclatu	equ	0xFFB
 13153                           pclath	equ	0xFFA
 13154                           tblptru	equ	0xFF8
 13155                           tblptrh	equ	0xFF7
 13156                           tblptrl	equ	0xFF6
 13157                           tablat	equ	0xFF5
 13158                           prodh	equ	0xFF4
 13159                           prodl	equ	0xFF3
 13160                           postinc0	equ	0xFEE
 13161                           fsr0h	equ	0xFEA
 13162                           fsr0l	equ	0xFE9
 13163                           wreg	equ	0xFE8
 13164                           postdec1	equ	0xFE5
 13165                           fsr1h	equ	0xFE2
 13166                           fsr1l	equ	0xFE1
 13167                           bsr	equ	0xFE0
 13168                           indf2	equ	0xFDF
 13169                           postinc2	equ	0xFDE
 13170                           postdec2	equ	0xFDD
 13171                           fsr2h	equ	0xFDA
 13172                           fsr2l	equ	0xFD9
 13173                           status	equ	0xFD8
 13174                           
 13175 ;; *************** function _set_pixel_pwm *****************
 13176 ;; Defined at:
 13177 ;;		line 119 in file "led.c"
 13178 ;; Parameters:    Size  Location     Type
 13179 ;;  x               2    0[BANK0 ] unsigned int 
 13180 ;;  y               2    2[BANK0 ] unsigned int 
 13181 ;;  pwm             1    4[BANK0 ] unsigned char 
 13182 ;;  clr             2    5[BANK0 ] unsigned int 
 13183 ;; Auto vars:     Size  Location     Type
 13184 ;;  index           2    9[BANK0 ] unsigned int 
 13185 ;;  board           2    7[BANK0 ] unsigned int 
 13186 ;; Return value:  Size  Location     Type
 13187 ;;                  1    wreg      void 
 13188 ;; Registers used:
 13189 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13190 ;; Tracked objects:
 13191 ;;		On entry : 0/0
 13192 ;;		On exit  : 0/0
 13193 ;;		Unchanged: 0/0
 13194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13195 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13196 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13197 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13198 ;;      Totals:         2      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13199 ;;Total ram usage:       13 bytes
 13200 ;; Hardware stack levels used:    1
 13201 ;; Hardware stack levels required when called:    4
 13202 ;; This function calls:
 13203 ;;		___lwdiv
 13204 ;;		___wmul
 13205 ;; This function is called by:
 13206 ;;		_set_pixel
 13207 ;; This function uses a non-reentrant model
 13208 ;;
 13209                           
 13210                           	psect	text72
 13211  002BDA                     __ptext72:
 13212                           	opt stack 0
 13213  002BDA                     _set_pixel_pwm:
 13214                           	opt stack 14
 13215                           
 13216                           ;led.c: 121: if(x > 16 || y > 12)
 13217                           
 13218                           ;incstack = 0
 13219  002BDA  0100               	movlb	0	; () banked
 13220  002BDC  5161               	movf	(set_pixel_pwm@x+1)& (0+255),w,b
 13221  002BDE  E173               	bnz	i1l668
 13222  002BE0  0E11               	movlw	17
 13223  002BE2  0100               	movlb	0	; () banked
 13224  002BE4  5D60               	subwf	set_pixel_pwm@x& (0+255),w,b
 13225  002BE6  B0D8               	btfsc	status,0,c
 13226  002BE8  0012               	return	
 13227                           
 13228                           ; BSR set to: 0
 13229  002BEA  0100               	movlb	0	; () banked
 13230  002BEC  5163               	movf	(set_pixel_pwm@y+1)& (0+255),w,b
 13231  002BEE  E16B               	bnz	i1l668
 13232  002BF0  0E0D               	movlw	13
 13233  002BF2  0100               	movlb	0	; () banked
 13234  002BF4  5D62               	subwf	set_pixel_pwm@y& (0+255),w,b
 13235  002BF6  B0D8               	btfsc	status,0,c
 13236  002BF8  0012               	return	
 13237                           
 13238                           ; BSR set to: 0
 13239                           ;led.c: 123: unsigned int index = (unsigned) (x + (y-1)*36 + clr*12);
 13240                           
 13241                           ; BSR set to: 0
 13242                           
 13243                           ; BSR set to: 0
 13244                           ;led.c: 122: return;
 13245  002BFA  0EFF               	movlw	255
 13246  002BFC  0100               	movlb	0	; () banked
 13247  002BFE  2562               	addwf	set_pixel_pwm@y& (0+255),w,b
 13248  002C00  6E1D               	movwf	___wmul@multiplier,c
 13249  002C02  0EFF               	movlw	255
 13250  002C04  0100               	movlb	0	; () banked
 13251  002C06  2163               	addwfc	(set_pixel_pwm@y+1)& (0+255),w,b
 13252  002C08  6E1E               	movwf	___wmul@multiplier+1,c
 13253  002C0A  0E00               	movlw	0
 13254  002C0C  6E20               	movwf	___wmul@multiplicand+1,c
 13255  002C0E  0E24               	movlw	36
 13256  002C10  6E1F               	movwf	___wmul@multiplicand,c
 13257  002C12  ECA8  F025         	call	___wmul	;wreg free
 13258  002C16  C01D  F024         	movff	?___wmul,??_set_pixel_pwm
 13259  002C1A  C01E  F025         	movff	?___wmul+1,??_set_pixel_pwm+1
 13260  002C1E  C065  F01D         	movff	set_pixel_pwm@clr,___wmul@multiplier
 13261  002C22  C066  F01E         	movff	set_pixel_pwm@clr+1,___wmul@multiplier+1
 13262  002C26  0E00               	movlw	0
 13263  002C28  6E20               	movwf	___wmul@multiplicand+1,c
 13264  002C2A  0E0C               	movlw	12
 13265  002C2C  6E1F               	movwf	___wmul@multiplicand,c
 13266  002C2E  ECA8  F025         	call	___wmul	;wreg free
 13267  002C32  501D               	movf	?___wmul,w,c
 13268  002C34  2624               	addwf	??_set_pixel_pwm,f,c
 13269  002C36  501E               	movf	?___wmul+1,w,c
 13270  002C38  2225               	addwfc	??_set_pixel_pwm+1,f,c
 13271  002C3A  0100               	movlb	0	; () banked
 13272  002C3C  5160               	movf	set_pixel_pwm@x& (0+255),w,b
 13273  002C3E  2424               	addwf	??_set_pixel_pwm,w,c
 13274  002C40  0100               	movlb	0	; () banked
 13275  002C42  6F69               	movwf	set_pixel_pwm@index& (0+255),b
 13276  002C44  0100               	movlb	0	; () banked
 13277  002C46  5161               	movf	(set_pixel_pwm@x+1)& (0+255),w,b
 13278  002C48  2025               	addwfc	??_set_pixel_pwm+1,w,c
 13279  002C4A  0100               	movlb	0	; () banked
 13280  002C4C  6F6A               	movwf	(set_pixel_pwm@index+1)& (0+255),b
 13281                           
 13282                           ; BSR set to: 0
 13283                           ;led.c: 124: unsigned int board = index/192;
 13284  002C4E  C069  F01D         	movff	set_pixel_pwm@index,___lwdiv@dividend
 13285  002C52  C06A  F01E         	movff	set_pixel_pwm@index+1,___lwdiv@dividend+1
 13286  002C56  0E00               	movlw	0
 13287  002C58  6E20               	movwf	___lwdiv@divisor+1,c
 13288  002C5A  0EC0               	movlw	192
 13289  002C5C  6E1F               	movwf	___lwdiv@divisor,c
 13290  002C5E  ECE4  F021         	call	___lwdiv	;wreg free
 13291  002C62  C01D  F067         	movff	?___lwdiv,set_pixel_pwm@board
 13292  002C66  C01E  F068         	movff	?___lwdiv+1,set_pixel_pwm@board+1
 13293                           
 13294                           ;led.c: 125: index -= board*192;
 13295  002C6A  C067  F01D         	movff	set_pixel_pwm@board,___wmul@multiplier
 13296  002C6E  C068  F01E         	movff	set_pixel_pwm@board+1,___wmul@multiplier+1
 13297  002C72  0E00               	movlw	0
 13298  002C74  6E20               	movwf	___wmul@multiplicand+1,c
 13299  002C76  0EC0               	movlw	192
 13300  002C78  6E1F               	movwf	___wmul@multiplicand,c
 13301  002C7A  ECA8  F025         	call	___wmul	;wreg free
 13302  002C7E  501D               	movf	?___wmul,w,c
 13303  002C80  0100               	movlb	0	; () banked
 13304  002C82  5F69               	subwf	set_pixel_pwm@index& (0+255),f,b
 13305  002C84  501E               	movf	?___wmul+1,w,c
 13306  002C86  0100               	movlb	0	; () banked
 13307  002C88  5B6A               	subwfb	(set_pixel_pwm@index+1)& (0+255),f,b
 13308                           
 13309                           ; BSR set to: 0
 13310                           ;led.c: 129: led_cont[0][x] = pwm;
 13311  002C8A  0EC6               	movlw	low _led_cont
 13312  002C8C  0100               	movlb	0	; () banked
 13313  002C8E  2560               	addwf	set_pixel_pwm@x& (0+255),w,b
 13314  002C90  6ED9               	movwf	fsr2l,c
 13315  002C92  0E08               	movlw	high _led_cont
 13316  002C94  0100               	movlb	0	; () banked
 13317  002C96  2161               	addwfc	(set_pixel_pwm@x+1)& (0+255),w,b
 13318  002C98  6EDA               	movwf	fsr2h,c
 13319  002C9A  C064  FFDF         	movff	set_pixel_pwm@pwm,indf2
 13320                           
 13321                           ; BSR set to: 0
 13322                           ;led.c: 130: led_cont[1][x] = pwm;
 13323  002C9E  0E86               	movlw	low (_led_cont+192)
 13324  002CA0  0100               	movlb	0	; () banked
 13325  002CA2  2560               	addwf	set_pixel_pwm@x& (0+255),w,b
 13326  002CA4  6ED9               	movwf	fsr2l,c
 13327  002CA6  0E09               	movlw	high (_led_cont+192)
 13328  002CA8  0100               	movlb	0	; () banked
 13329  002CAA  2161               	addwfc	(set_pixel_pwm@x+1)& (0+255),w,b
 13330  002CAC  6EDA               	movwf	fsr2h,c
 13331  002CAE  C064  FFDF         	movff	set_pixel_pwm@pwm,indf2
 13332                           
 13333                           ; BSR set to: 0
 13334                           ;led.c: 131: led_cont[2][x] = pwm;
 13335  002CB2  0E46               	movlw	low (_led_cont+384)
 13336  002CB4  0100               	movlb	0	; () banked
 13337  002CB6  2560               	addwf	set_pixel_pwm@x& (0+255),w,b
 13338  002CB8  6ED9               	movwf	fsr2l,c
 13339  002CBA  0E0A               	movlw	high (_led_cont+384)
 13340  002CBC  0100               	movlb	0	; () banked
 13341  002CBE  2161               	addwfc	(set_pixel_pwm@x+1)& (0+255),w,b
 13342  002CC0  6EDA               	movwf	fsr2h,c
 13343  002CC2  C064  FFDF         	movff	set_pixel_pwm@pwm,indf2
 13344  002CC6                     i1l668:
 13345                           
 13346                           ; BSR set to: 0
 13347  002CC6  0012               	return		;funcret
 13348  002CC8                     __end_of_set_pixel_pwm:
 13349                           	opt stack 0
 13350                           pclatu	equ	0xFFB
 13351                           pclath	equ	0xFFA
 13352                           tblptru	equ	0xFF8
 13353                           tblptrh	equ	0xFF7
 13354                           tblptrl	equ	0xFF6
 13355                           tablat	equ	0xFF5
 13356                           prodh	equ	0xFF4
 13357                           prodl	equ	0xFF3
 13358                           postinc0	equ	0xFEE
 13359                           fsr0h	equ	0xFEA
 13360                           fsr0l	equ	0xFE9
 13361                           wreg	equ	0xFE8
 13362                           postdec1	equ	0xFE5
 13363                           fsr1h	equ	0xFE2
 13364                           fsr1l	equ	0xFE1
 13365                           bsr	equ	0xFE0
 13366                           indf2	equ	0xFDF
 13367                           postinc2	equ	0xFDE
 13368                           postdec2	equ	0xFDD
 13369                           fsr2h	equ	0xFDA
 13370                           fsr2l	equ	0xFD9
 13371                           status	equ	0xFD8
 13372                           
 13373 ;; *************** function ___lwdiv *****************
 13374 ;; Defined at:
 13375 ;;		line 8 in file "/Applications/microchip/xc8/v1.43/sources/common/lwdiv.c"
 13376 ;; Parameters:    Size  Location     Type
 13377 ;;  dividend        2   28[COMRAM] unsigned int 
 13378 ;;  divisor         2   30[COMRAM] unsigned int 
 13379 ;; Auto vars:     Size  Location     Type
 13380 ;;  quotient        2   33[COMRAM] unsigned int 
 13381 ;;  counter         1   32[COMRAM] unsigned char 
 13382 ;; Return value:  Size  Location     Type
 13383 ;;                  2   28[COMRAM] unsigned int 
 13384 ;; Registers used:
 13385 ;;		wreg, status,2, status,0
 13386 ;; Tracked objects:
 13387 ;;		On entry : 0/0
 13388 ;;		On exit  : 0/0
 13389 ;;		Unchanged: 0/0
 13390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13391 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13392 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13393 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13394 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13395 ;;Total ram usage:        7 bytes
 13396 ;; Hardware stack levels used:    1
 13397 ;; Hardware stack levels required when called:    3
 13398 ;; This function calls:
 13399 ;;		Nothing
 13400 ;; This function is called by:
 13401 ;;		_set_pixel_pwm
 13402 ;;		_set_time
 13403 ;;		_set_led_current
 13404 ;; This function uses a non-reentrant model
 13405 ;;
 13406                           
 13407                           	psect	text73
 13408  0043C8                     __ptext73:
 13409                           	opt stack 0
 13410  0043C8                     ___lwdiv:
 13411                           	opt stack 14
 13412                           
 13413                           ; BSR set to: 0
 13414                           ;incstack = 0
 13415  0043C8  0E00               	movlw	0
 13416  0043CA  6E23               	movwf	___lwdiv@quotient+1,c
 13417  0043CC  0E00               	movlw	0
 13418  0043CE  6E22               	movwf	___lwdiv@quotient,c
 13419  0043D0  501F               	movf	___lwdiv@divisor,w,c
 13420  0043D2  1020               	iorwf	___lwdiv@divisor+1,w,c
 13421  0043D4  B4D8               	btfsc	status,2,c
 13422  0043D6  D01C               	goto	i1l1503
 13423  0043D8  0E01               	movlw	1
 13424  0043DA  6E21               	movwf	___lwdiv@counter,c
 13425  0043DC  D004               	goto	i1l1498
 13426  0043DE  90D8               	bcf	status,0,c
 13427  0043E0  361F               	rlcf	___lwdiv@divisor,f,c
 13428  0043E2  3620               	rlcf	___lwdiv@divisor+1,f,c
 13429  0043E4  2A21               	incf	___lwdiv@counter,f,c
 13430  0043E6                     i1l1498:
 13431  0043E6  AE20               	btfss	___lwdiv@divisor+1,7,c
 13432  0043E8  D7FA               	goto	i1l1499
 13433  0043EA                     i1u761_20:
 13434  0043EA  90D8               	bcf	status,0,c
 13435  0043EC  3622               	rlcf	___lwdiv@quotient,f,c
 13436  0043EE  3623               	rlcf	___lwdiv@quotient+1,f,c
 13437  0043F0  501F               	movf	___lwdiv@divisor,w,c
 13438  0043F2  5C1D               	subwf	___lwdiv@dividend,w,c
 13439  0043F4  5020               	movf	___lwdiv@divisor+1,w,c
 13440  0043F6  581E               	subwfb	___lwdiv@dividend+1,w,c
 13441  0043F8  A0D8               	btfss	status,0,c
 13442  0043FA  D005               	goto	i1l1502
 13443  0043FC  501F               	movf	___lwdiv@divisor,w,c
 13444  0043FE  5E1D               	subwf	___lwdiv@dividend,f,c
 13445  004400  5020               	movf	___lwdiv@divisor+1,w,c
 13446  004402  5A1E               	subwfb	___lwdiv@dividend+1,f,c
 13447  004404  8022               	bsf	___lwdiv@quotient,0,c
 13448  004406                     i1l1502:
 13449  004406  90D8               	bcf	status,0,c
 13450  004408  3220               	rrcf	___lwdiv@divisor+1,f,c
 13451  00440A  321F               	rrcf	___lwdiv@divisor,f,c
 13452  00440C  2E21               	decfsz	___lwdiv@counter,f,c
 13453  00440E  D7ED               	goto	i1u761_20
 13454  004410                     i1l1503:
 13455  004410  C022  F01D         	movff	___lwdiv@quotient,?___lwdiv
 13456  004414  C023  F01E         	movff	___lwdiv@quotient+1,?___lwdiv+1
 13457  004418  0012               	return		;funcret
 13458  00441A                     __end_of___lwdiv:
 13459                           	opt stack 0
 13460                           pclatu	equ	0xFFB
 13461                           pclath	equ	0xFFA
 13462                           tblptru	equ	0xFF8
 13463                           tblptrh	equ	0xFF7
 13464                           tblptrl	equ	0xFF6
 13465                           tablat	equ	0xFF5
 13466                           prodh	equ	0xFF4
 13467                           prodl	equ	0xFF3
 13468                           postinc0	equ	0xFEE
 13469                           fsr0h	equ	0xFEA
 13470                           fsr0l	equ	0xFE9
 13471                           wreg	equ	0xFE8
 13472                           postdec1	equ	0xFE5
 13473                           fsr1h	equ	0xFE2
 13474                           fsr1l	equ	0xFE1
 13475                           bsr	equ	0xFE0
 13476                           indf2	equ	0xFDF
 13477                           postinc2	equ	0xFDE
 13478                           postdec2	equ	0xFDD
 13479                           fsr2h	equ	0xFDA
 13480                           fsr2l	equ	0xFD9
 13481                           status	equ	0xFD8
 13482                           
 13483 ;; *************** function _clear_led *****************
 13484 ;; Defined at:
 13485 ;;		line 90 in file "led.c"
 13486 ;; Parameters:    Size  Location     Type
 13487 ;;		None
 13488 ;; Auto vars:     Size  Location     Type
 13489 ;;  j               2   23[BANK0 ] unsigned int 
 13490 ;;  i               2   21[BANK0 ] unsigned int 
 13491 ;; Return value:  Size  Location     Type
 13492 ;;                  1    wreg      void 
 13493 ;; Registers used:
 13494 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13495 ;; Tracked objects:
 13496 ;;		On entry : 0/0
 13497 ;;		On exit  : 0/0
 13498 ;;		Unchanged: 0/0
 13499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13501 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13502 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13503 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13504 ;;Total ram usage:        6 bytes
 13505 ;; Hardware stack levels used:    1
 13506 ;; Hardware stack levels required when called:    9
 13507 ;; This function calls:
 13508 ;;		___wmul
 13509 ;;		_refresh_led
 13510 ;; This function is called by:
 13511 ;;		_set_time_led
 13512 ;;		_set_load_led
 13513 ;; This function uses a non-reentrant model
 13514 ;;
 13515                           
 13516                           	psect	text74
 13517  003988                     __ptext74:
 13518                           	opt stack 0
 13519  003988                     _clear_led:
 13520                           	opt stack 12
 13521                           
 13522                           ;led.c: 92: for(unsigned int i = 0; i < 3; i++)
 13523                           
 13524                           ;incstack = 0
 13525  003988  0E00               	movlw	0
 13526  00398A  0100               	movlb	0	; () banked
 13527  00398C  6F76               	movwf	(clear_led@i+1)& (0+255),b
 13528  00398E  0E00               	movlw	0
 13529  003990  6F75               	movwf	clear_led@i& (0+255),b
 13530  003992                     i1l5493:
 13531                           
 13532                           ; BSR set to: 0
 13533  003992  0100               	movlb	0	; () banked
 13534  003994  5176               	movf	(clear_led@i+1)& (0+255),w,b
 13535  003996  E13C               	bnz	i1l5513
 13536  003998  0E03               	movlw	3
 13537  00399A  0100               	movlb	0	; () banked
 13538  00399C  5D75               	subwf	clear_led@i& (0+255),w,b
 13539  00399E  B0D8               	btfsc	status,0,c
 13540  0039A0  D037               	goto	i1u802_20
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;led.c: 93: for(unsigned int j = 0; j < 192; j++)
 13544                           
 13545                           ; BSR set to: 0
 13546                           
 13547                           ; BSR set to: 0
 13548  0039A2  0E00               	movlw	0
 13549  0039A4  0100               	movlb	0	; () banked
 13550  0039A6  6F78               	movwf	(clear_led@j+1)& (0+255),b
 13551  0039A8  0E00               	movlw	0
 13552  0039AA  6F77               	movwf	clear_led@j& (0+255),b
 13553  0039AC                     i1l5499:
 13554                           
 13555                           ; BSR set to: 0
 13556  0039AC  0100               	movlb	0	; () banked
 13557  0039AE  5178               	movf	(clear_led@j+1)& (0+255),w,b
 13558  0039B0  E12B               	bnz	i1l5509
 13559  0039B2  0EC0               	movlw	192
 13560  0039B4  0100               	movlb	0	; () banked
 13561  0039B6  5D77               	subwf	clear_led@j& (0+255),w,b
 13562  0039B8  B0D8               	btfsc	status,0,c
 13563  0039BA  D026               	goto	i1u801_20
 13564                           
 13565                           ; BSR set to: 0
 13566                           ;led.c: 94: led_cont[i][j] = 0;
 13567                           
 13568                           ; BSR set to: 0
 13569                           
 13570                           ; BSR set to: 0
 13571  0039BC  C075  F01D         	movff	clear_led@i,___wmul@multiplier
 13572  0039C0  C076  F01E         	movff	clear_led@i+1,___wmul@multiplier+1
 13573  0039C4  0E00               	movlw	0
 13574  0039C6  6E20               	movwf	___wmul@multiplicand+1,c
 13575  0039C8  0EC0               	movlw	192
 13576  0039CA  6E1F               	movwf	___wmul@multiplicand,c
 13577  0039CC  ECA8  F025         	call	___wmul	;wreg free
 13578  0039D0  0EC6               	movlw	low _led_cont
 13579  0039D2  0100               	movlb	0	; () banked
 13580  0039D4  6F73               	movwf	??_clear_led& (0+255),b
 13581  0039D6  0E08               	movlw	high _led_cont
 13582  0039D8  0100               	movlb	0	; () banked
 13583  0039DA  6F74               	movwf	(??_clear_led+1)& (0+255),b
 13584  0039DC  501D               	movf	?___wmul,w,c
 13585  0039DE  0100               	movlb	0	; () banked
 13586  0039E0  2773               	addwf	??_clear_led& (0+255),f,b
 13587  0039E2  501E               	movf	?___wmul+1,w,c
 13588  0039E4  0100               	movlb	0	; () banked
 13589  0039E6  2374               	addwfc	(??_clear_led+1)& (0+255),f,b
 13590  0039E8  0100               	movlb	0	; () banked
 13591  0039EA  5177               	movf	clear_led@j& (0+255),w,b
 13592  0039EC  0100               	movlb	0	; () banked
 13593  0039EE  2573               	addwf	??_clear_led& (0+255),w,b
 13594  0039F0  6ED9               	movwf	fsr2l,c
 13595  0039F2  0100               	movlb	0	; () banked
 13596  0039F4  5178               	movf	(clear_led@j+1)& (0+255),w,b
 13597  0039F6  0100               	movlb	0	; () banked
 13598  0039F8  2174               	addwfc	(??_clear_led+1)& (0+255),w,b
 13599  0039FA  6EDA               	movwf	fsr2h,c
 13600  0039FC  0E00               	movlw	0
 13601  0039FE  6EDF               	movwf	indf2,c
 13602                           
 13603                           ; BSR set to: 0
 13604  003A00  0100               	movlb	0	; () banked
 13605  003A02  4B77               	infsnz	clear_led@j& (0+255),f,b
 13606  003A04  2B78               	incf	(clear_led@j+1)& (0+255),f,b
 13607  003A06  D7D2               	goto	i1l5499
 13608  003A08                     i1u801_20:
 13609  003A08                     i1l5509:
 13610                           
 13611                           ; BSR set to: 0
 13612  003A08  0100               	movlb	0	; () banked
 13613  003A0A  4B75               	infsnz	clear_led@i& (0+255),f,b
 13614  003A0C  2B76               	incf	(clear_led@i+1)& (0+255),f,b
 13615  003A0E  D7C1               	goto	i1l5493
 13616  003A10                     i1u802_20:
 13617  003A10                     i1l5513:
 13618                           
 13619                           ; BSR set to: 0
 13620                           ;led.c: 95: refresh_led();
 13621  003A10  EC97  F013         	call	_refresh_led	;wreg free
 13622  003A14  0012               	return		;funcret
 13623  003A16                     __end_of_clear_led:
 13624                           	opt stack 0
 13625                           pclatu	equ	0xFFB
 13626                           pclath	equ	0xFFA
 13627                           tblptru	equ	0xFF8
 13628                           tblptrh	equ	0xFF7
 13629                           tblptrl	equ	0xFF6
 13630                           tablat	equ	0xFF5
 13631                           prodh	equ	0xFF4
 13632                           prodl	equ	0xFF3
 13633                           postinc0	equ	0xFEE
 13634                           fsr0h	equ	0xFEA
 13635                           fsr0l	equ	0xFE9
 13636                           wreg	equ	0xFE8
 13637                           postdec1	equ	0xFE5
 13638                           fsr1h	equ	0xFE2
 13639                           fsr1l	equ	0xFE1
 13640                           bsr	equ	0xFE0
 13641                           indf2	equ	0xFDF
 13642                           postinc2	equ	0xFDE
 13643                           postdec2	equ	0xFDD
 13644                           fsr2h	equ	0xFDA
 13645                           fsr2l	equ	0xFD9
 13646                           status	equ	0xFD8
 13647                           
 13648 ;; *************** function _refresh_led *****************
 13649 ;; Defined at:
 13650 ;;		line 107 in file "led.c"
 13651 ;; Parameters:    Size  Location     Type
 13652 ;;		None
 13653 ;; Auto vars:     Size  Location     Type
 13654 ;;  board           2   17[BANK0 ] unsigned int 
 13655 ;;  succ            2   15[BANK0 ] int 
 13656 ;; Return value:  Size  Location     Type
 13657 ;;                  2  529[None  ] int 
 13658 ;; Registers used:
 13659 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13660 ;; Tracked objects:
 13661 ;;		On entry : 0/0
 13662 ;;		On exit  : 0/0
 13663 ;;		Unchanged: 0/0
 13664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13666 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13667 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13668 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13669 ;;Total ram usage:        6 bytes
 13670 ;; Hardware stack levels used:    1
 13671 ;; Hardware stack levels required when called:    8
 13672 ;; This function calls:
 13673 ;;		___wmul
 13674 ;;		i1_i2c_write
 13675 ;;		i1_set_page
 13676 ;; This function is called by:
 13677 ;;		_clear_led
 13678 ;;		_screen_update
 13679 ;; This function uses a non-reentrant model
 13680 ;;
 13681                           
 13682                           	psect	text75
 13683  00272E                     __ptext75:
 13684                           	opt stack 0
 13685  00272E                     _refresh_led:
 13686                           	opt stack 12
 13687                           
 13688                           ;led.c: 109: BOOL succ = 1;
 13689                           
 13690                           ;incstack = 0
 13691  00272E  0E00               	movlw	0
 13692  002730  0100               	movlb	0	; () banked
 13693  002732  6F70               	movwf	(refresh_led@succ+1)& (0+255),b
 13694  002734  0E01               	movlw	1
 13695  002736  6F6F               	movwf	refresh_led@succ& (0+255),b
 13696                           
 13697                           ;led.c: 110: for(unsigned int board = 0; board < 3; board++)
 13698  002738  0E00               	movlw	0
 13699  00273A  0100               	movlb	0	; () banked
 13700  00273C  6F72               	movwf	(refresh_led@board+1)& (0+255),b
 13701  00273E  0E00               	movlw	0
 13702  002740  6F71               	movwf	refresh_led@board& (0+255),b
 13703                           
 13704                           ; BSR set to: 0
 13705  002742  0100               	movlb	0	; () banked
 13706  002744  5172               	movf	(refresh_led@board+1)& (0+255),w,b
 13707  002746  E106               	bnz	i1u783_20
 13708  002748  0E03               	movlw	3
 13709  00274A  0100               	movlb	0	; () banked
 13710  00274C  5D71               	subwf	refresh_led@board& (0+255),w,b
 13711  00274E  B0D8               	btfsc	status,0,c
 13712  002750  0012               	return	
 13713  002752  D001               	goto	i1l660
 13714  002754                     i1u783_20:
 13715                           
 13716                           ; BSR set to: 0
 13717  002754  0012               	return	
 13718  002756                     i1l660:
 13719                           
 13720                           ; BSR set to: 0
 13721                           ;led.c: 111: {
 13722                           ;led.c: 112: succ &= set_page(1, (char)((board == 0)*0b10111110 + (board == 1)*0b1010000
      +                          0 + (board == 2)*0b10100110));
 13723                           
 13724                           ; BSR set to: 0
 13725  002756  0E00               	movlw	0
 13726  002758  0100               	movlb	0	; () banked
 13727  00275A  6F69               	movwf	(i1set_page@page+1)& (0+255),b
 13728  00275C  0E01               	movlw	1
 13729  00275E  6F68               	movwf	i1set_page@page& (0+255),b
 13730  002760  0E02               	movlw	2
 13731  002762  0100               	movlb	0	; () banked
 13732  002764  1971               	xorwf	refresh_led@board& (0+255),w,b
 13733  002766  0100               	movlb	0	; () banked
 13734  002768  1172               	iorwf	(refresh_led@board+1)& (0+255),w,b
 13735  00276A  A4D8               	btfss	status,2,c
 13736  00276C  D002               	goto	i1u784_20
 13737  00276E  0E01               	movlw	1
 13738  002770  D001               	goto	i1u785_20
 13739  002772                     i1u784_20:
 13740  002772  0E00               	movlw	0
 13741  002774                     i1u785_20:
 13742  002774  0DA6               	mullw	166
 13743  002776  CFF3 F06D          	movff	prodl,??_refresh_led
 13744  00277A  0100               	movlb	0	; () banked
 13745  00277C  0571               	decf	refresh_led@board& (0+255),w,b
 13746  00277E  0100               	movlb	0	; () banked
 13747  002780  1172               	iorwf	(refresh_led@board+1)& (0+255),w,b
 13748  002782  A4D8               	btfss	status,2,c
 13749  002784  D002               	goto	i1u786_20
 13750  002786  0E01               	movlw	1
 13751  002788  D001               	goto	i1u787_20
 13752  00278A                     i1u786_20:
 13753  00278A  0E00               	movlw	0
 13754  00278C                     i1u787_20:
 13755  00278C  0DA0               	mullw	160
 13756  00278E  CFF3 F06E          	movff	prodl,??_refresh_led+1
 13757  002792  0100               	movlb	0	; () banked
 13758  002794  5171               	movf	refresh_led@board& (0+255),w,b
 13759  002796  0100               	movlb	0	; () banked
 13760  002798  1172               	iorwf	(refresh_led@board+1)& (0+255),w,b
 13761  00279A  A4D8               	btfss	status,2,c
 13762  00279C  D002               	goto	i1u788_20
 13763  00279E  0E01               	movlw	1
 13764  0027A0  D001               	goto	i1u789_20
 13765  0027A2                     i1u788_20:
 13766  0027A2  0E00               	movlw	0
 13767  0027A4                     i1u789_20:
 13768  0027A4  0DBE               	mullw	190
 13769  0027A6  50F3               	movf	prodl,w,c
 13770  0027A8  0100               	movlb	0	; () banked
 13771  0027AA  256E               	addwf	(??_refresh_led+1)& (0+255),w,b
 13772  0027AC  0100               	movlb	0	; () banked
 13773  0027AE  256D               	addwf	??_refresh_led& (0+255),w,b
 13774  0027B0  0100               	movlb	0	; () banked
 13775  0027B2  6F6A               	movwf	i1set_page@cont_addr& (0+255),b
 13776  0027B4  ECA9  F024         	call	i1_set_page	;wreg free
 13777  0027B8  0100               	movlb	0	; () banked
 13778  0027BA  5168               	movf	?i1_set_page& (0+255),w,b
 13779  0027BC  0100               	movlb	0	; () banked
 13780  0027BE  176F               	andwf	refresh_led@succ& (0+255),f,b
 13781  0027C0  0100               	movlb	0	; () banked
 13782  0027C2  5169               	movf	(?i1_set_page+1)& (0+255),w,b
 13783  0027C4  0100               	movlb	0	; () banked
 13784  0027C6  1770               	andwf	(refresh_led@succ+1)& (0+255),f,b
 13785                           
 13786                           ;led.c: 113: succ &= i2c_write(led_cont[board], 192, (char)((board == 0)*0b10111110 + (b
      +                          oard == 1)*0b10100000 + (board == 2)*0b10100110), 0x0);
 13787  0027C8  C071  F01D         	movff	refresh_led@board,___wmul@multiplier
 13788  0027CC  C072  F01E         	movff	refresh_led@board+1,___wmul@multiplier+1
 13789  0027D0  0E00               	movlw	0
 13790  0027D2  6E20               	movwf	___wmul@multiplicand+1,c
 13791  0027D4  0EC0               	movlw	192
 13792  0027D6  6E1F               	movwf	___wmul@multiplicand,c
 13793  0027D8  ECA8  F025         	call	___wmul	;wreg free
 13794  0027DC  0EC6               	movlw	low _led_cont
 13795  0027DE  241D               	addwf	?___wmul,w,c
 13796  0027E0  0100               	movlb	0	; () banked
 13797  0027E2  6F60               	movwf	i1i2c_write@data& (0+255),b
 13798  0027E4  0E08               	movlw	high _led_cont
 13799  0027E6  201E               	addwfc	?___wmul+1,w,c
 13800  0027E8  0100               	movlb	0	; () banked
 13801  0027EA  6F61               	movwf	(i1i2c_write@data+1)& (0+255),b
 13802  0027EC  0E00               	movlw	0
 13803  0027EE  0100               	movlb	0	; () banked
 13804  0027F0  6F63               	movwf	(i1i2c_write@data_len+1)& (0+255),b
 13805  0027F2  0EC0               	movlw	192
 13806  0027F4  6F62               	movwf	i1i2c_write@data_len& (0+255),b
 13807  0027F6  0E02               	movlw	2
 13808  0027F8  0100               	movlb	0	; () banked
 13809  0027FA  1971               	xorwf	refresh_led@board& (0+255),w,b
 13810  0027FC  0100               	movlb	0	; () banked
 13811  0027FE  1172               	iorwf	(refresh_led@board+1)& (0+255),w,b
 13812  002800  A4D8               	btfss	status,2,c
 13813  002802  D002               	goto	i1u790_20
 13814  002804  0E01               	movlw	1
 13815  002806  D001               	goto	i1u791_20
 13816  002808                     i1u790_20:
 13817  002808  0E00               	movlw	0
 13818  00280A                     i1u791_20:
 13819  00280A  0DA6               	mullw	166
 13820  00280C  CFF3 F06D          	movff	prodl,??_refresh_led
 13821  002810  0100               	movlb	0	; () banked
 13822  002812  0571               	decf	refresh_led@board& (0+255),w,b
 13823  002814  0100               	movlb	0	; () banked
 13824  002816  1172               	iorwf	(refresh_led@board+1)& (0+255),w,b
 13825  002818  A4D8               	btfss	status,2,c
 13826  00281A  D002               	goto	i1u792_20
 13827  00281C  0E01               	movlw	1
 13828  00281E  D001               	goto	i1u793_20
 13829  002820                     i1u792_20:
 13830  002820  0E00               	movlw	0
 13831  002822                     i1u793_20:
 13832  002822  0DA0               	mullw	160
 13833  002824  CFF3 F06E          	movff	prodl,??_refresh_led+1
 13834  002828  0100               	movlb	0	; () banked
 13835  00282A  5171               	movf	refresh_led@board& (0+255),w,b
 13836  00282C  0100               	movlb	0	; () banked
 13837  00282E  1172               	iorwf	(refresh_led@board+1)& (0+255),w,b
 13838  002830  A4D8               	btfss	status,2,c
 13839  002832  D002               	goto	i1u794_20
 13840  002834  0E01               	movlw	1
 13841  002836  D001               	goto	i1u795_20
 13842  002838                     i1u794_20:
 13843  002838  0E00               	movlw	0
 13844  00283A                     i1u795_20:
 13845  00283A  0DBE               	mullw	190
 13846  00283C  50F3               	movf	prodl,w,c
 13847  00283E  0100               	movlb	0	; () banked
 13848  002840  256E               	addwf	(??_refresh_led+1)& (0+255),w,b
 13849  002842  0100               	movlb	0	; () banked
 13850  002844  256D               	addwf	??_refresh_led& (0+255),w,b
 13851  002846  0100               	movlb	0	; () banked
 13852  002848  6F64               	movwf	i1i2c_write@addr& (0+255),b
 13853  00284A  0E00               	movlw	0
 13854  00284C  0100               	movlb	0	; () banked
 13855  00284E  6F65               	movwf	i1i2c_write@reg_addr& (0+255),b
 13856  002850  ECC1  F017         	call	i1_i2c_write	;wreg free
 13857  002854  0100               	movlb	0	; () banked
 13858  002856  5160               	movf	?i1_i2c_write& (0+255),w,b
 13859  002858  0100               	movlb	0	; () banked
 13860  00285A  176F               	andwf	refresh_led@succ& (0+255),f,b
 13861  00285C  0100               	movlb	0	; () banked
 13862  00285E  5161               	movf	(?i1_i2c_write+1)& (0+255),w,b
 13863  002860  0100               	movlb	0	; () banked
 13864  002862  1770               	andwf	(refresh_led@succ+1)& (0+255),f,b
 13865                           
 13866                           ; BSR set to: 0
 13867  002864  0100               	movlb	0	; () banked
 13868  002866  4B71               	infsnz	refresh_led@board& (0+255),f,b
 13869  002868  2B72               	incf	(refresh_led@board+1)& (0+255),f,b
 13870                           
 13871                           ; BSR set to: 0
 13872  00286A  0100               	movlb	0	; () banked
 13873  00286C  5172               	movf	(refresh_led@board+1)& (0+255),w,b
 13874  00286E  E101               	bnz	i1l662
 13875  002870  D76B               	goto	L3
 13876  002872                     i1l662:
 13877                           
 13878                           ; BSR set to: 0
 13879  002872  0012               	return		;funcret
 13880  002874                     __end_of_refresh_led:
 13881                           	opt stack 0
 13882                           pclatu	equ	0xFFB
 13883                           pclath	equ	0xFFA
 13884                           tblptru	equ	0xFF8
 13885                           tblptrh	equ	0xFF7
 13886                           tblptrl	equ	0xFF6
 13887                           tablat	equ	0xFF5
 13888                           prodh	equ	0xFF4
 13889                           prodl	equ	0xFF3
 13890                           postinc0	equ	0xFEE
 13891                           fsr0h	equ	0xFEA
 13892                           fsr0l	equ	0xFE9
 13893                           wreg	equ	0xFE8
 13894                           postdec1	equ	0xFE5
 13895                           fsr1h	equ	0xFE2
 13896                           fsr1l	equ	0xFE1
 13897                           bsr	equ	0xFE0
 13898                           indf2	equ	0xFDF
 13899                           postinc2	equ	0xFDE
 13900                           postdec2	equ	0xFDD
 13901                           fsr2h	equ	0xFDA
 13902                           fsr2l	equ	0xFD9
 13903                           status	equ	0xFD8
 13904                           
 13905 ;; *************** function i1_set_page *****************
 13906 ;; Defined at:
 13907 ;;		line 152 in file "led.c"
 13908 ;; Parameters:    Size  Location     Type
 13909 ;;  page            2    8[BANK0 ] unsigned int 
 13910 ;;  cont_addr       1   10[BANK0 ] unsigned char 
 13911 ;; Auto vars:     Size  Location     Type
 13912 ;;  set_page        2   11[BANK0 ] int 
 13913 ;; Return value:  Size  Location     Type
 13914 ;;                  2    8[BANK0 ] int 
 13915 ;; Registers used:
 13916 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 13917 ;; Tracked objects:
 13918 ;;		On entry : 0/0
 13919 ;;		On exit  : 0/0
 13920 ;;		Unchanged: 0/0
 13921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13922 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13923 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13925 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13926 ;;Total ram usage:        5 bytes
 13927 ;; Hardware stack levels used:    1
 13928 ;; Hardware stack levels required when called:    7
 13929 ;; This function calls:
 13930 ;;		i1_i2c_write_single
 13931 ;; This function is called by:
 13932 ;;		_refresh_led
 13933 ;; This function uses a non-reentrant model
 13934 ;;
 13935                           
 13936                           	psect	text76
 13937  004952                     __ptext76:
 13938                           	opt stack 0
 13939  004952                     i1_set_page:
 13940                           	opt stack 12
 13941                           
 13942                           ;led.c: 154: BOOL succ;
 13943                           ;led.c: 156: succ = i2c_write_single(0xC5 , cont_addr, 0xFE);
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;incstack = 0
 13947  004952  C06A  F066         	movff	i1set_page@cont_addr,i1i2c_write_single@addr
 13948  004956  0EFE               	movlw	254
 13949  004958  0100               	movlb	0	; () banked
 13950  00495A  6F67               	movwf	i1i2c_write_single@reg_addr& (0+255),b
 13951  00495C  0EC5               	movlw	197
 13952  00495E  EC67  F025         	call	i1_i2c_write_single
 13953  004962  C066  F06B         	movff	?i1_i2c_write_single,i1set_page@succ
 13954  004966  C067  F06C         	movff	?i1_i2c_write_single+1,i1set_page@succ+1
 13955                           
 13956                           ;led.c: 158: succ &= i2c_write_single(page , cont_addr, 0xFD);
 13957  00496A  C06A  F066         	movff	i1set_page@cont_addr,i1i2c_write_single@addr
 13958  00496E  0EFD               	movlw	253
 13959  004970  0100               	movlb	0	; () banked
 13960  004972  6F67               	movwf	i1i2c_write_single@reg_addr& (0+255),b
 13961  004974  0100               	movlb	0	; () banked
 13962  004976  5168               	movf	i1set_page@page& (0+255),w,b
 13963  004978  EC67  F025         	call	i1_i2c_write_single
 13964  00497C  0100               	movlb	0	; () banked
 13965  00497E  5166               	movf	?i1_i2c_write_single& (0+255),w,b
 13966  004980  0100               	movlb	0	; () banked
 13967  004982  176B               	andwf	i1set_page@succ& (0+255),f,b
 13968  004984  0100               	movlb	0	; () banked
 13969  004986  5167               	movf	(?i1_i2c_write_single+1)& (0+255),w,b
 13970  004988  0100               	movlb	0	; () banked
 13971  00498A  176C               	andwf	(i1set_page@succ+1)& (0+255),f,b
 13972                           
 13973                           ; BSR set to: 0
 13974                           ;led.c: 159: return succ;
 13975  00498C  C06B  F068         	movff	i1set_page@succ,?i1_set_page
 13976  004990  C06C  F069         	movff	i1set_page@succ+1,?i1_set_page+1
 13977  004994  0012               	return	
 13978  004996                     __end_ofi1_set_page:
 13979                           	opt stack 0
 13980                           pclatu	equ	0xFFB
 13981                           pclath	equ	0xFFA
 13982                           tblptru	equ	0xFF8
 13983                           tblptrh	equ	0xFF7
 13984                           tblptrl	equ	0xFF6
 13985                           tablat	equ	0xFF5
 13986                           prodh	equ	0xFF4
 13987                           prodl	equ	0xFF3
 13988                           postinc0	equ	0xFEE
 13989                           fsr0h	equ	0xFEA
 13990                           fsr0l	equ	0xFE9
 13991                           wreg	equ	0xFE8
 13992                           postdec1	equ	0xFE5
 13993                           fsr1h	equ	0xFE2
 13994                           fsr1l	equ	0xFE1
 13995                           bsr	equ	0xFE0
 13996                           indf2	equ	0xFDF
 13997                           postinc2	equ	0xFDE
 13998                           postdec2	equ	0xFDD
 13999                           fsr2h	equ	0xFDA
 14000                           fsr2l	equ	0xFD9
 14001                           status	equ	0xFD8
 14002                           
 14003 ;; *************** function i1_i2c_write_single *****************
 14004 ;; Defined at:
 14005 ;;		line 92 in file "communication.c"
 14006 ;; Parameters:    Size  Location     Type
 14007 ;;  data            1    wreg     unsigned char 
 14008 ;;  addr            1    6[BANK0 ] unsigned char 
 14009 ;;  reg_addr        1    7[BANK0 ] unsigned char 
 14010 ;; Auto vars:     Size  Location     Type
 14011 ;;  data            1   37[COMRAM] unsigned char 
 14012 ;; Return value:  Size  Location     Type
 14013 ;;                  2    6[BANK0 ] int 
 14014 ;; Registers used:
 14015 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14016 ;; Tracked objects:
 14017 ;;		On entry : 0/0
 14018 ;;		On exit  : 0/0
 14019 ;;		Unchanged: 0/0
 14020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14021 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14024 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14025 ;;Total ram usage:        3 bytes
 14026 ;; Hardware stack levels used:    1
 14027 ;; Hardware stack levels required when called:    6
 14028 ;; This function calls:
 14029 ;;		i1_i2c_write
 14030 ;; This function is called by:
 14031 ;;		i1_set_page
 14032 ;; This function uses a non-reentrant model
 14033 ;;
 14034                           
 14035                           	psect	text77
 14036  004ACE                     __ptext77:
 14037                           	opt stack 0
 14038  004ACE                     i1_i2c_write_single:
 14039                           	opt stack 12
 14040                           
 14041                           ; BSR set to: 0
 14042                           ;incstack = 0
 14043                           ;i1i2c_write_single@data stored from wreg
 14044  004ACE  6E26               	movwf	i1i2c_write_single@data,c
 14045                           
 14046                           ;communication.c: 94: return i2c_write(&data, 1, addr, reg_addr);
 14047  004AD0  0E26               	movlw	low i1i2c_write_single@data
 14048  004AD2  0100               	movlb	0	; () banked
 14049  004AD4  6F60               	movwf	i1i2c_write@data& (0+255),b
 14050  004AD6  0E00               	movlw	high i1i2c_write_single@data
 14051  004AD8  0100               	movlb	0	; () banked
 14052  004ADA  6F61               	movwf	(i1i2c_write@data+1)& (0+255),b
 14053  004ADC  0E00               	movlw	0
 14054  004ADE  0100               	movlb	0	; () banked
 14055  004AE0  6F63               	movwf	(i1i2c_write@data_len+1)& (0+255),b
 14056  004AE2  0E01               	movlw	1
 14057  004AE4  6F62               	movwf	i1i2c_write@data_len& (0+255),b
 14058  004AE6  C066  F064         	movff	i1i2c_write_single@addr,i1i2c_write@addr
 14059  004AEA  C067  F065         	movff	i1i2c_write_single@reg_addr,i1i2c_write@reg_addr
 14060  004AEE  ECC1  F017         	call	i1_i2c_write	;wreg free
 14061  004AF2  C060  F066         	movff	?i1_i2c_write,?i1_i2c_write_single
 14062  004AF6  C061  F067         	movff	?i1_i2c_write+1,?i1_i2c_write_single+1
 14063  004AFA  0012               	return	
 14064  004AFC                     __end_ofi1_i2c_write_single:
 14065                           	opt stack 0
 14066                           pclatu	equ	0xFFB
 14067                           pclath	equ	0xFFA
 14068                           tblptru	equ	0xFF8
 14069                           tblptrh	equ	0xFF7
 14070                           tblptrl	equ	0xFF6
 14071                           tablat	equ	0xFF5
 14072                           prodh	equ	0xFF4
 14073                           prodl	equ	0xFF3
 14074                           postinc0	equ	0xFEE
 14075                           fsr0h	equ	0xFEA
 14076                           fsr0l	equ	0xFE9
 14077                           wreg	equ	0xFE8
 14078                           postdec1	equ	0xFE5
 14079                           fsr1h	equ	0xFE2
 14080                           fsr1l	equ	0xFE1
 14081                           bsr	equ	0xFE0
 14082                           indf2	equ	0xFDF
 14083                           postinc2	equ	0xFDE
 14084                           postdec2	equ	0xFDD
 14085                           fsr2h	equ	0xFDA
 14086                           fsr2l	equ	0xFD9
 14087                           status	equ	0xFD8
 14088                           
 14089 ;; *************** function i1_i2c_write *****************
 14090 ;; Defined at:
 14091 ;;		line 98 in file "communication.c"
 14092 ;; Parameters:    Size  Location     Type
 14093 ;;  data            2    0[BANK0 ] PTR unsigned char 
 14094 ;;		 -> led_cont(576), open_short_test@all_led(24), init_led@all_on(24), set_time@time_buffer(6), 
 14095 ;;		 -> i2c_write_single@data(1), main@all_on(192), 
 14096 ;;  data_len        2    2[BANK0 ] int 
 14097 ;;  addr            1    4[BANK0 ] unsigned char 
 14098 ;;  reg_addr        1    5[BANK0 ] unsigned char 
 14099 ;; Auto vars:     Size  Location     Type
 14100 ;;  i2c_write       2   35[COMRAM] int 
 14101 ;; Return value:  Size  Location     Type
 14102 ;;                  2    0[BANK0 ] int 
 14103 ;; Registers used:
 14104 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14105 ;; Tracked objects:
 14106 ;;		On entry : 0/0
 14107 ;;		On exit  : 0/0
 14108 ;;		Unchanged: 0/0
 14109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14110 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14111 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14112 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14113 ;;      Totals:         3       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14114 ;;Total ram usage:        9 bytes
 14115 ;; Hardware stack levels used:    1
 14116 ;; Hardware stack levels required when called:    5
 14117 ;; This function calls:
 14118 ;;		i1_I2C_Master_Start
 14119 ;;		i1_I2C_Master_Stop
 14120 ;;		i1_I2C_Master_Write
 14121 ;;		i1_set_status_led
 14122 ;; This function is called by:
 14123 ;;		_refresh_led
 14124 ;;		i1_i2c_write_single
 14125 ;; This function uses a non-reentrant model
 14126 ;;
 14127                           
 14128                           	psect	text78
 14129  002F82                     __ptext78:
 14130                           	opt stack 0
 14131  002F82                     i1_i2c_write:
 14132                           	opt stack 12
 14133                           
 14134                           ;communication.c: 102: if(i2c_bus_busy)
 14135                           
 14136                           ;incstack = 0
 14137  002F82  0100               	movlb	0	; () banked
 14138  002F84  51BD               	movf	_i2c_bus_busy& (0+255),w,b	;volatile
 14139  002F86  0100               	movlb	0	; () banked
 14140  002F88  11BE               	iorwf	(_i2c_bus_busy+1)& (0+255),w,b	;volatile
 14141  002F8A  B4D8               	btfsc	status,2,c
 14142  002F8C  D00E               	goto	i1l319
 14143                           
 14144                           ; BSR set to: 0
 14145                           ;communication.c: 103: {
 14146                           ;communication.c: 104: set_status_led(ERROR, 1);
 14147  002F8E  0E00               	movlw	0
 14148  002F90  6E1E               	movwf	i1set_status_led@status+1,c
 14149  002F92  0E00               	movlw	0
 14150  002F94  6E1D               	movwf	i1set_status_led@status,c
 14151  002F96  0E00               	movlw	0
 14152  002F98  6E20               	movwf	i1set_status_led@error_override+1,c
 14153  002F9A  0E01               	movlw	1
 14154  002F9C  6E1F               	movwf	i1set_status_led@error_override,c
 14155  002F9E  EC4F  F017         	call	i1_set_status_led	;wreg free
 14156                           
 14157                           ;communication.c: 105: return -1;
 14158  002FA2  0100               	movlb	0	; () banked
 14159  002FA4  6960               	setf	?i1_i2c_write& (0+255),b
 14160  002FA6  6961               	setf	(?i1_i2c_write+1)& (0+255),b
 14161                           
 14162                           ; BSR set to: 0
 14163  002FA8  0012               	return	
 14164  002FAA                     i1l319:
 14165                           
 14166                           ; BSR set to: 0
 14167                           ;communication.c: 106: }
 14168                           ;communication.c: 108: if(SSP1CON1bits.WCOL)
 14169  002FAA  AE96               	btfss	3990,7,c	;volatile
 14170  002FAC  D00E               	goto	i1l321
 14171                           
 14172                           ; BSR set to: 0
 14173                           ;communication.c: 109: {
 14174                           ;communication.c: 110: set_status_led(ERROR, 1);
 14175  002FAE  0E00               	movlw	0
 14176  002FB0  6E1E               	movwf	i1set_status_led@status+1,c
 14177  002FB2  0E00               	movlw	0
 14178  002FB4  6E1D               	movwf	i1set_status_led@status,c
 14179  002FB6  0E00               	movlw	0
 14180  002FB8  6E20               	movwf	i1set_status_led@error_override+1,c
 14181  002FBA  0E01               	movlw	1
 14182  002FBC  6E1F               	movwf	i1set_status_led@error_override,c
 14183  002FBE  EC4F  F017         	call	i1_set_status_led	;wreg free
 14184                           
 14185                           ;communication.c: 111: return -1;
 14186  002FC2  0100               	movlb	0	; () banked
 14187  002FC4  6960               	setf	?i1_i2c_write& (0+255),b
 14188  002FC6  6961               	setf	(?i1_i2c_write+1)& (0+255),b
 14189                           
 14190                           ; BSR set to: 0
 14191  002FC8  0012               	return	
 14192  002FCA                     i1l321:
 14193                           
 14194                           ; BSR set to: 0
 14195                           ;communication.c: 112: }
 14196                           ;communication.c: 114: i2c_bus_busy = 1;
 14197                           
 14198                           ; BSR set to: 0
 14199  002FCA  0E00               	movlw	0
 14200  002FCC  0100               	movlb	0	; () banked
 14201  002FCE  6FBE               	movwf	(_i2c_bus_busy+1)& (0+255),b	;volatile
 14202  002FD0  0E01               	movlw	1
 14203  002FD2  6FBD               	movwf	_i2c_bus_busy& (0+255),b	;volatile
 14204                           
 14205                           ; BSR set to: 0
 14206                           ;communication.c: 115: set_status_led(CLOCKMD, 0);
 14207  002FD4  0E00               	movlw	0
 14208  002FD6  6E1E               	movwf	i1set_status_led@status+1,c
 14209  002FD8  0E04               	movlw	4
 14210  002FDA  6E1D               	movwf	i1set_status_led@status,c
 14211  002FDC  0E00               	movlw	0
 14212  002FDE  6E20               	movwf	i1set_status_led@error_override+1,c
 14213  002FE0  0E00               	movlw	0
 14214  002FE2  6E1F               	movwf	i1set_status_led@error_override,c
 14215  002FE4  EC4F  F017         	call	i1_set_status_led	;wreg free
 14216                           
 14217                           ;communication.c: 118: I2C_Master_Start();
 14218  002FE8  EC1F  F026         	call	i1_I2C_Master_Start	;wreg free
 14219                           
 14220                           ;communication.c: 120: I2C_Master_Write(addr &= ~(1 << 0));
 14221  002FEC  0100               	movlb	0	; () banked
 14222  002FEE  9164               	bcf	i1i2c_write@addr& (0+255),0,b
 14223  002FF0  C064  F01E         	movff	i1i2c_write@addr,i1I2C_Master_Write@d
 14224  002FF4  6A1F               	clrf	i1I2C_Master_Write@d+1,c
 14225  002FF6  EC0E  F026         	call	i1_I2C_Master_Write	;wreg free
 14226                           
 14227                           ;communication.c: 122: I2C_Master_Write(reg_addr);
 14228  002FFA  C065  F01E         	movff	i1i2c_write@reg_addr,i1I2C_Master_Write@d
 14229  002FFE  6A1F               	clrf	i1I2C_Master_Write@d+1,c
 14230  003000  EC0E  F026         	call	i1_I2C_Master_Write	;wreg free
 14231                           
 14232                           ;communication.c: 123: for(int index = 0; index < data_len; index++)
 14233  003004  0E00               	movlw	0
 14234  003006  6E25               	movwf	i1i2c_write@index+1,c
 14235  003008  0E00               	movlw	0
 14236  00300A  6E24               	movwf	i1i2c_write@index,c
 14237  00300C  D011               	goto	i1l322
 14238  00300E                     
 14239                           ;communication.c: 124: {
 14240                           ;communication.c: 126: I2C_Master_Write(data[index]);
 14241  00300E  5024               	movf	i1i2c_write@index,w,c
 14242  003010  0100               	movlb	0	; () banked
 14243  003012  2560               	addwf	i1i2c_write@data& (0+255),w,b
 14244  003014  6ED9               	movwf	fsr2l,c
 14245  003016  5025               	movf	i1i2c_write@index+1,w,c
 14246  003018  0100               	movlb	0	; () banked
 14247  00301A  2161               	addwfc	(i1i2c_write@data+1)& (0+255),w,b
 14248  00301C  6EDA               	movwf	fsr2h,c
 14249  00301E  50DF               	movf	indf2,w,c
 14250  003020  6E23               	movwf	??i1_i2c_write& (0+255),c
 14251  003022  5023               	movf	??i1_i2c_write,w,c
 14252  003024  6E1E               	movwf	i1I2C_Master_Write@d,c
 14253  003026  6A1F               	clrf	i1I2C_Master_Write@d+1,c
 14254  003028  EC0E  F026         	call	i1_I2C_Master_Write	;wreg free
 14255  00302C  4A24               	infsnz	i1i2c_write@index,f,c
 14256  00302E  2A25               	incf	i1i2c_write@index+1,f,c
 14257  003030                     i1l322:
 14258  003030  0100               	movlb	0	; () banked
 14259  003032  5162               	movf	i1i2c_write@data_len& (0+255),w,b
 14260  003034  5C24               	subwf	i1i2c_write@index,w,c
 14261  003036  5025               	movf	i1i2c_write@index+1,w,c
 14262  003038  0A80               	xorlw	128
 14263  00303A  6E23               	movwf	??i1_i2c_write& (0+255),c
 14264  00303C  0100               	movlb	0	; () banked
 14265  00303E  5163               	movf	(i1i2c_write@data_len+1)& (0+255),w,b
 14266  003040  0A80               	xorlw	128
 14267  003042  5823               	subwfb	??i1_i2c_write& (0+255),w,c
 14268  003044  A0D8               	btfss	status,0,c
 14269  003046  D7E3               	goto	i1l323
 14270                           
 14271                           ; BSR set to: 0
 14272                           ;communication.c: 127: }
 14273                           ;communication.c: 130: I2C_Master_Stop();
 14274                           
 14275                           ; BSR set to: 0
 14276  003048  EC1B  F026         	call	i1_I2C_Master_Stop	;wreg free
 14277                           
 14278                           ;communication.c: 133: i2c_bus_busy = 0;
 14279  00304C  0E00               	movlw	0
 14280  00304E  0100               	movlb	0	; () banked
 14281  003050  6FBE               	movwf	(_i2c_bus_busy+1)& (0+255),b	;volatile
 14282  003052  0E00               	movlw	0
 14283  003054  6FBD               	movwf	_i2c_bus_busy& (0+255),b	;volatile
 14284                           
 14285                           ; BSR set to: 0
 14286                           ;communication.c: 134: return 1;
 14287  003056  0E00               	movlw	0
 14288  003058  0100               	movlb	0	; () banked
 14289  00305A  6F61               	movwf	(?i1_i2c_write+1)& (0+255),b
 14290  00305C  0E01               	movlw	1
 14291  00305E  6F60               	movwf	?i1_i2c_write& (0+255),b
 14292  003060  0012               	return	
 14293  003062                     __end_ofi1_i2c_write:
 14294                           	opt stack 0
 14295                           pclatu	equ	0xFFB
 14296                           pclath	equ	0xFFA
 14297                           tblptru	equ	0xFF8
 14298                           tblptrh	equ	0xFF7
 14299                           tblptrl	equ	0xFF6
 14300                           tablat	equ	0xFF5
 14301                           prodh	equ	0xFF4
 14302                           prodl	equ	0xFF3
 14303                           postinc0	equ	0xFEE
 14304                           fsr0h	equ	0xFEA
 14305                           fsr0l	equ	0xFE9
 14306                           wreg	equ	0xFE8
 14307                           postdec1	equ	0xFE5
 14308                           fsr1h	equ	0xFE2
 14309                           fsr1l	equ	0xFE1
 14310                           bsr	equ	0xFE0
 14311                           indf2	equ	0xFDF
 14312                           postinc2	equ	0xFDE
 14313                           postdec2	equ	0xFDD
 14314                           fsr2h	equ	0xFDA
 14315                           fsr2l	equ	0xFD9
 14316                           status	equ	0xFD8
 14317                           
 14318 ;; *************** function ___wmul *****************
 14319 ;; Defined at:
 14320 ;;		line 15 in file "/Applications/microchip/xc8/v1.43/sources/common/Umul16.c"
 14321 ;; Parameters:    Size  Location     Type
 14322 ;;  multiplier      2   28[COMRAM] unsigned int 
 14323 ;;  multiplicand    2   30[COMRAM] unsigned int 
 14324 ;; Auto vars:     Size  Location     Type
 14325 ;;  product         2   32[COMRAM] unsigned int 
 14326 ;; Return value:  Size  Location     Type
 14327 ;;                  2   28[COMRAM] unsigned int 
 14328 ;; Registers used:
 14329 ;;		wreg, status,2, status,0, prodl, prodh
 14330 ;; Tracked objects:
 14331 ;;		On entry : 0/0
 14332 ;;		On exit  : 0/0
 14333 ;;		Unchanged: 0/0
 14334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14335 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14336 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14337 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14338 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14339 ;;Total ram usage:        6 bytes
 14340 ;; Hardware stack levels used:    1
 14341 ;; Hardware stack levels required when called:    3
 14342 ;; This function calls:
 14343 ;;		Nothing
 14344 ;; This function is called by:
 14345 ;;		_clear_led
 14346 ;;		_refresh_led
 14347 ;;		_set_pixel_pwm
 14348 ;;		_set_led_current
 14349 ;;		_str_to_int
 14350 ;; This function uses a non-reentrant model
 14351 ;;
 14352                           
 14353                           	psect	text79
 14354  004B50                     __ptext79:
 14355                           	opt stack 0
 14356  004B50                     ___wmul:
 14357                           	opt stack 14
 14358                           
 14359                           ; BSR set to: 0
 14360                           ;incstack = 0
 14361  004B50  501D               	movf	___wmul@multiplier,w,c
 14362  004B52  021F               	mulwf	___wmul@multiplicand,c
 14363  004B54  CFF3 F021          	movff	prodl,___wmul@product
 14364  004B58  CFF4 F022          	movff	prodh,___wmul@product+1
 14365  004B5C  501D               	movf	___wmul@multiplier,w,c
 14366  004B5E  0220               	mulwf	___wmul@multiplicand+1,c
 14367  004B60  50F3               	movf	prodl,w,c
 14368  004B62  2622               	addwf	___wmul@product+1,f,c
 14369  004B64  501E               	movf	___wmul@multiplier+1,w,c
 14370  004B66  021F               	mulwf	___wmul@multiplicand,c
 14371  004B68  50F3               	movf	prodl,w,c
 14372  004B6A  2622               	addwf	___wmul@product+1,f,c
 14373  004B6C  C021  F01D         	movff	___wmul@product,?___wmul
 14374  004B70  C022  F01E         	movff	___wmul@product+1,?___wmul+1
 14375  004B74  0012               	return	
 14376  004B76                     __end_of___wmul:
 14377                           	opt stack 0
 14378                           pclatu	equ	0xFFB
 14379                           pclath	equ	0xFFA
 14380                           tblptru	equ	0xFF8
 14381                           tblptrh	equ	0xFF7
 14382                           tblptrl	equ	0xFF6
 14383                           tablat	equ	0xFF5
 14384                           prodh	equ	0xFF4
 14385                           prodl	equ	0xFF3
 14386                           postinc0	equ	0xFEE
 14387                           fsr0h	equ	0xFEA
 14388                           fsr0l	equ	0xFE9
 14389                           wreg	equ	0xFE8
 14390                           postdec1	equ	0xFE5
 14391                           fsr1h	equ	0xFE2
 14392                           fsr1l	equ	0xFE1
 14393                           bsr	equ	0xFE0
 14394                           indf2	equ	0xFDF
 14395                           postinc2	equ	0xFDE
 14396                           postdec2	equ	0xFDD
 14397                           fsr2h	equ	0xFDA
 14398                           fsr2l	equ	0xFD9
 14399                           status	equ	0xFD8
 14400                           
 14401 ;; *************** function _prog_sw_process *****************
 14402 ;; Defined at:
 14403 ;;		line 109 in file "io.c"
 14404 ;; Parameters:    Size  Location     Type
 14405 ;;		None
 14406 ;; Auto vars:     Size  Location     Type
 14407 ;;  prog_sw_stat    2    0[BANK0 ] int 
 14408 ;; Return value:  Size  Location     Type
 14409 ;;                  1    wreg      void 
 14410 ;; Registers used:
 14411 ;;		wreg, status,2, status,0, cstack
 14412 ;; Tracked objects:
 14413 ;;		On entry : 0/0
 14414 ;;		On exit  : 0/0
 14415 ;;		Unchanged: 0/0
 14416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14418 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14419 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14420 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14421 ;;Total ram usage:        3 bytes
 14422 ;; Hardware stack levels used:    1
 14423 ;; Hardware stack levels required when called:    5
 14424 ;; This function calls:
 14425 ;;		_set_error_state
 14426 ;; This function is called by:
 14427 ;;		_low_pri_isr
 14428 ;; This function uses a non-reentrant model
 14429 ;;
 14430                           
 14431                           	psect	text80
 14432  004A0A                     __ptext80:
 14433                           	opt stack 0
 14434  004A0A                     _prog_sw_process:
 14435                           	opt stack 18
 14436                           
 14437                           ;io.c: 111: BOOL prog_sw_stat = PORTCbits.RC2;
 14438                           
 14439                           ;incstack = 0
 14440  004A0A  A48F               	btfss	3983,2,c	;volatile
 14441  004A0C  D003               	goto	i1u879_20
 14442  004A0E  6A25               	clrf	??_prog_sw_process& (0+255),c
 14443  004A10  2A25               	incf	??_prog_sw_process& (0+255),f,c
 14444  004A12  D001               	goto	i1u879_28
 14445  004A14                     i1u879_20:
 14446  004A14  6A25               	clrf	??_prog_sw_process& (0+255),c
 14447  004A16                     i1u879_28:
 14448  004A16  5025               	movf	??_prog_sw_process,w,c
 14449  004A18  0100               	movlb	0	; () banked
 14450  004A1A  6F60               	movwf	prog_sw_process@prog_sw_stat& (0+255),b
 14451  004A1C  6B61               	clrf	(prog_sw_process@prog_sw_stat+1)& (0+255),b
 14452                           
 14453                           ; BSR set to: 0
 14454                           ;io.c: 112: set_error_state(!prog_sw_stat);
 14455  004A1E  0100               	movlb	0	; () banked
 14456  004A20  5160               	movf	prog_sw_process@prog_sw_stat& (0+255),w,b
 14457  004A22  0100               	movlb	0	; () banked
 14458  004A24  1161               	iorwf	(prog_sw_process@prog_sw_stat+1)& (0+255),w,b
 14459  004A26  A4D8               	btfss	status,2,c
 14460  004A28  D002               	goto	i1u880_20
 14461  004A2A  0E01               	movlw	1
 14462  004A2C  D001               	goto	i1u881_20
 14463  004A2E                     i1u880_20:
 14464  004A2E  0E00               	movlw	0
 14465  004A30                     i1u881_20:
 14466  004A30  6E23               	movwf	set_error_state@error,c
 14467  004A32  6A24               	clrf	set_error_state@error+1,c
 14468  004A34  EC3F  F024         	call	_set_error_state	;wreg free
 14469                           
 14470                           ;io.c: 113: IOCCFbits.IOCCF2 = 0;
 14471  004A38  010F               	movlb	15	; () banked
 14472  004A3A  951A               	bcf	26,2,b	;volatile
 14473                           
 14474                           ; BSR set to: 15
 14475  004A3C  0012               	return		;funcret
 14476  004A3E                     __end_of_prog_sw_process:
 14477                           	opt stack 0
 14478                           pclatu	equ	0xFFB
 14479                           pclath	equ	0xFFA
 14480                           tblptru	equ	0xFF8
 14481                           tblptrh	equ	0xFF7
 14482                           tblptrl	equ	0xFF6
 14483                           tablat	equ	0xFF5
 14484                           prodh	equ	0xFF4
 14485                           prodl	equ	0xFF3
 14486                           postinc0	equ	0xFEE
 14487                           fsr0h	equ	0xFEA
 14488                           fsr0l	equ	0xFE9
 14489                           wreg	equ	0xFE8
 14490                           postdec1	equ	0xFE5
 14491                           fsr1h	equ	0xFE2
 14492                           fsr1l	equ	0xFE1
 14493                           bsr	equ	0xFE0
 14494                           indf2	equ	0xFDF
 14495                           postinc2	equ	0xFDE
 14496                           postdec2	equ	0xFDD
 14497                           fsr2h	equ	0xFDA
 14498                           fsr2l	equ	0xFD9
 14499                           status	equ	0xFD8
 14500                           
 14501 ;; *************** function _set_error_state *****************
 14502 ;; Defined at:
 14503 ;;		line 118 in file "pwm.c"
 14504 ;; Parameters:    Size  Location     Type
 14505 ;;  error           2   34[COMRAM] int 
 14506 ;; Auto vars:     Size  Location     Type
 14507 ;;		None
 14508 ;; Return value:  Size  Location     Type
 14509 ;;                  1    wreg      void 
 14510 ;; Registers used:
 14511 ;;		wreg, status,2, status,0, cstack
 14512 ;; Tracked objects:
 14513 ;;		On entry : 0/0
 14514 ;;		On exit  : 0/0
 14515 ;;		Unchanged: 0/0
 14516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14518 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14521 ;;Total ram usage:        2 bytes
 14522 ;; Hardware stack levels used:    1
 14523 ;; Hardware stack levels required when called:    4
 14524 ;; This function calls:
 14525 ;;		i1_set_status_led
 14526 ;; This function is called by:
 14527 ;;		_prog_sw_process
 14528 ;; This function uses a non-reentrant model
 14529 ;;
 14530                           
 14531                           	psect	text81
 14532  00487E                     __ptext81:
 14533                           	opt stack 0
 14534  00487E                     _set_error_state:
 14535                           	opt stack 18
 14536                           
 14537                           ;pwm.c: 120: if(error)
 14538                           
 14539                           ; BSR set to: 15
 14540                           ;incstack = 0
 14541  00487E  5023               	movf	set_error_state@error,w,c
 14542  004880  1024               	iorwf	set_error_state@error+1,w,c
 14543  004882  B4D8               	btfsc	status,2,c
 14544  004884  D010               	goto	i1l220
 14545                           
 14546                           ;pwm.c: 121: {
 14547                           ;pwm.c: 122: curr_stat = ERROR;
 14548  004886  0E00               	movlw	0
 14549  004888  0100               	movlb	0	; () banked
 14550  00488A  6FD5               	movwf	(_curr_stat+1)& (0+255),b	;volatile
 14551  00488C  0E00               	movlw	0
 14552  00488E  6FD4               	movwf	_curr_stat& (0+255),b	;volatile
 14553                           
 14554                           ; BSR set to: 0
 14555                           ;pwm.c: 123: set_status_led(ERROR, 1);
 14556  004890  0E00               	movlw	0
 14557  004892  6E1E               	movwf	i1set_status_led@status+1,c
 14558  004894  0E00               	movlw	0
 14559  004896  6E1D               	movwf	i1set_status_led@status,c
 14560  004898  0E00               	movlw	0
 14561  00489A  6E20               	movwf	i1set_status_led@error_override+1,c
 14562  00489C  0E01               	movlw	1
 14563  00489E  6E1F               	movwf	i1set_status_led@error_override,c
 14564  0048A0  EC4F  F017         	call	i1_set_status_led	;wreg free
 14565                           
 14566                           ;pwm.c: 124: }else
 14567  0048A4  0012               	return	
 14568  0048A6                     i1l220:
 14569                           
 14570                           ;pwm.c: 125: {
 14571                           ;pwm.c: 126: curr_stat = CLOCKMD;
 14572  0048A6  0E00               	movlw	0
 14573  0048A8  0100               	movlb	0	; () banked
 14574  0048AA  6FD5               	movwf	(_curr_stat+1)& (0+255),b	;volatile
 14575  0048AC  0E04               	movlw	4
 14576  0048AE  6FD4               	movwf	_curr_stat& (0+255),b	;volatile
 14577                           
 14578                           ; BSR set to: 0
 14579                           ;pwm.c: 127: set_status_led(CLOCKMD, 1);
 14580  0048B0  0E00               	movlw	0
 14581  0048B2  6E1E               	movwf	i1set_status_led@status+1,c
 14582  0048B4  0E04               	movlw	4
 14583  0048B6  6E1D               	movwf	i1set_status_led@status,c
 14584  0048B8  0E00               	movlw	0
 14585  0048BA  6E20               	movwf	i1set_status_led@error_override+1,c
 14586  0048BC  0E01               	movlw	1
 14587  0048BE  6E1F               	movwf	i1set_status_led@error_override,c
 14588  0048C0  EC4F  F017         	call	i1_set_status_led	;wreg free
 14589  0048C4  0012               	return	
 14590  0048C6                     __end_of_set_error_state:
 14591                           	opt stack 0
 14592                           pclatu	equ	0xFFB
 14593                           pclath	equ	0xFFA
 14594                           tblptru	equ	0xFF8
 14595                           tblptrh	equ	0xFF7
 14596                           tblptrl	equ	0xFF6
 14597                           tablat	equ	0xFF5
 14598                           prodh	equ	0xFF4
 14599                           prodl	equ	0xFF3
 14600                           postinc0	equ	0xFEE
 14601                           fsr0h	equ	0xFEA
 14602                           fsr0l	equ	0xFE9
 14603                           wreg	equ	0xFE8
 14604                           postdec1	equ	0xFE5
 14605                           fsr1h	equ	0xFE2
 14606                           fsr1l	equ	0xFE1
 14607                           bsr	equ	0xFE0
 14608                           indf2	equ	0xFDF
 14609                           postinc2	equ	0xFDE
 14610                           postdec2	equ	0xFDD
 14611                           fsr2h	equ	0xFDA
 14612                           fsr2l	equ	0xFD9
 14613                           status	equ	0xFD8
 14614                           
 14615 ;; *************** function _get_time *****************
 14616 ;; Defined at:
 14617 ;;		line 56 in file "clock.c"
 14618 ;; Parameters:    Size  Location     Type
 14619 ;;		None
 14620 ;; Auto vars:     Size  Location     Type
 14621 ;;  data            7   12[BANK0 ] unsigned char [7]
 14622 ;; Return value:  Size  Location     Type
 14623 ;;                  2    8[BANK0 ] PTR struct .
 14624 ;; Registers used:
 14625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14626 ;; Tracked objects:
 14627 ;;		On entry : 0/0
 14628 ;;		On exit  : 0/0
 14629 ;;		Unchanged: 0/0
 14630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14631 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14632 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14633 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14634 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14635 ;;Total ram usage:       11 bytes
 14636 ;; Hardware stack levels used:    1
 14637 ;; Hardware stack levels required when called:    6
 14638 ;; This function calls:
 14639 ;;		i1_i2c_read
 14640 ;; This function is called by:
 14641 ;;		_low_pri_isr
 14642 ;; This function uses a non-reentrant model
 14643 ;;
 14644                           
 14645                           	psect	text82
 14646  0021C4                     __ptext82:
 14647                           	opt stack 0
 14648  0021C4                     _get_time:
 14649                           	opt stack 17
 14650                           
 14651                           ;clock.c: 58: char data[7];
 14652                           ;clock.c: 60: if(time_quality > 0)
 14653                           
 14654                           ;incstack = 0
 14655  0021C4  5027               	movf	_time_quality,w,c	;volatile
 14656  0021C6  1028               	iorwf	_time_quality+1,w,c	;volatile
 14657  0021C8  1029               	iorwf	_time_quality+2,w,c	;volatile
 14658  0021CA  102A               	iorwf	_time_quality+3,w,c	;volatile
 14659  0021CC  B4D8               	btfsc	status,2,c
 14660  0021CE  D005               	goto	i1l512
 14661                           
 14662                           ;clock.c: 61: time_quality--;
 14663  0021D0  0627               	decf	_time_quality,f,c	;volatile
 14664  0021D2  0E00               	movlw	0
 14665  0021D4  5A28               	subwfb	_time_quality+1,f,c	;volatile
 14666  0021D6  5A29               	subwfb	_time_quality+2,f,c	;volatile
 14667  0021D8  5A2A               	subwfb	_time_quality+3,f,c	;volatile
 14668  0021DA                     i1l512:
 14669                           
 14670                           ;clock.c: 63: if(i2c_read(0b10100010, 0x4, 7, data) != -1)
 14671  0021DA  0E04               	movlw	4
 14672  0021DC  6E22               	movwf	i1i2c_read@reg_addr,c
 14673  0021DE  0E00               	movlw	0
 14674  0021E0  6E24               	movwf	i1i2c_read@data_read_len+1,c
 14675  0021E2  0E07               	movlw	7
 14676  0021E4  6E23               	movwf	i1i2c_read@data_read_len,c
 14677  0021E6  0E6C               	movlw	low get_time@data
 14678  0021E8  6E25               	movwf	i1i2c_read@data,c
 14679  0021EA  0E00               	movlw	high get_time@data
 14680  0021EC  6E26               	movwf	i1i2c_read@data+1,c
 14681  0021EE  0EA2               	movlw	162
 14682  0021F0  ECD3  F014         	call	i1_i2c_read
 14683  0021F4  2822               	incf	?i1_i2c_read,w,c
 14684  0021F6  E103               	bnz	i1u875_20
 14685  0021F8  2823               	incf	?i1_i2c_read+1,w,c
 14686  0021FA  B4D8               	btfsc	status,2,c
 14687  0021FC  D090               	goto	i1l513
 14688  0021FE                     i1u875_20:
 14689                           
 14690                           ;clock.c: 64: {
 14691                           ;clock.c: 65: curr_time.second = (unsigned int)(((data[0]>>4)*10)+(data[0] & 0xF));
 14692  0021FE  C06C  F06A         	movff	get_time@data,??_get_time
 14693  002202  0E0F               	movlw	15
 14694  002204  0100               	movlb	0	; () banked
 14695  002206  176A               	andwf	??_get_time& (0+255),f,b
 14696  002208  C06C  F06B         	movff	get_time@data,??_get_time+1
 14697  00220C  0100               	movlb	0	; () banked
 14698  00220E  3B6B               	swapf	(??_get_time+1)& (0+255),f,b
 14699  002210  0E0F               	movlw	15
 14700  002212  176B               	andwf	(??_get_time+1)& (0+255),f,b
 14701  002214  0100               	movlb	0	; () banked
 14702  002216  516B               	movf	(??_get_time+1)& (0+255),w,b
 14703  002218  0D0A               	mullw	10
 14704  00221A  0100               	movlb	0	; () banked
 14705  00221C  516A               	movf	??_get_time& (0+255),w,b
 14706  00221E  24F3               	addwf	prodl,w,c
 14707  002220  0100               	movlb	0	; () banked
 14708  002222  6FC5               	movwf	_curr_time& (0+255),b
 14709  002224  0100               	movlb	0	; () banked
 14710  002226  0E00               	movlw	0
 14711  002228  20F4               	addwfc	prodh,w,c
 14712  00222A  0100               	movlb	0	; () banked
 14713  00222C  6FC6               	movwf	(_curr_time+1)& (0+255),b
 14714                           
 14715                           ;clock.c: 66: curr_time.minute = (unsigned int)(((data[1]>>4)*10)+(data[1] & 0xF));
 14716  00222E  C06D  F06A         	movff	get_time@data+1,??_get_time
 14717  002232  0E0F               	movlw	15
 14718  002234  0100               	movlb	0	; () banked
 14719  002236  176A               	andwf	??_get_time& (0+255),f,b
 14720  002238  C06D  F06B         	movff	get_time@data+1,??_get_time+1
 14721  00223C  0100               	movlb	0	; () banked
 14722  00223E  3B6B               	swapf	(??_get_time+1)& (0+255),f,b
 14723  002240  0E0F               	movlw	15
 14724  002242  176B               	andwf	(??_get_time+1)& (0+255),f,b
 14725  002244  0100               	movlb	0	; () banked
 14726  002246  516B               	movf	(??_get_time+1)& (0+255),w,b
 14727  002248  0D0A               	mullw	10
 14728  00224A  0100               	movlb	0	; () banked
 14729  00224C  516A               	movf	??_get_time& (0+255),w,b
 14730  00224E  24F3               	addwf	prodl,w,c
 14731  002250  0100               	movlb	0	; () banked
 14732  002252  6FC7               	movwf	(_curr_time+2)& (0+255),b
 14733  002254  0100               	movlb	0	; () banked
 14734  002256  0E00               	movlw	0
 14735  002258  20F4               	addwfc	prodh,w,c
 14736  00225A  0100               	movlb	0	; () banked
 14737  00225C  6FC8               	movwf	(_curr_time+3)& (0+255),b
 14738                           
 14739                           ;clock.c: 67: curr_time.hour = (unsigned int)(((data[2]>>4)*10)+(data[2] & 0xF));
 14740  00225E  C06E  F06A         	movff	get_time@data+2,??_get_time
 14741  002262  0E0F               	movlw	15
 14742  002264  0100               	movlb	0	; () banked
 14743  002266  176A               	andwf	??_get_time& (0+255),f,b
 14744  002268  C06E  F06B         	movff	get_time@data+2,??_get_time+1
 14745  00226C  0100               	movlb	0	; () banked
 14746  00226E  3B6B               	swapf	(??_get_time+1)& (0+255),f,b
 14747  002270  0E0F               	movlw	15
 14748  002272  176B               	andwf	(??_get_time+1)& (0+255),f,b
 14749  002274  0100               	movlb	0	; () banked
 14750  002276  516B               	movf	(??_get_time+1)& (0+255),w,b
 14751  002278  0D0A               	mullw	10
 14752  00227A  0100               	movlb	0	; () banked
 14753  00227C  516A               	movf	??_get_time& (0+255),w,b
 14754  00227E  24F3               	addwf	prodl,w,c
 14755  002280  0100               	movlb	0	; () banked
 14756  002282  6FC9               	movwf	(_curr_time+4)& (0+255),b
 14757  002284  0100               	movlb	0	; () banked
 14758  002286  0E00               	movlw	0
 14759  002288  20F4               	addwfc	prodh,w,c
 14760  00228A  0100               	movlb	0	; () banked
 14761  00228C  6FCA               	movwf	(_curr_time+5)& (0+255),b
 14762                           
 14763                           ;clock.c: 68: curr_time.day = (unsigned int)(((data[3]>>4)*10)+(data[3] & 0xF));
 14764  00228E  C06F  F06A         	movff	get_time@data+3,??_get_time
 14765  002292  0E0F               	movlw	15
 14766  002294  0100               	movlb	0	; () banked
 14767  002296  176A               	andwf	??_get_time& (0+255),f,b
 14768  002298  C06F  F06B         	movff	get_time@data+3,??_get_time+1
 14769  00229C  0100               	movlb	0	; () banked
 14770  00229E  3B6B               	swapf	(??_get_time+1)& (0+255),f,b
 14771  0022A0  0E0F               	movlw	15
 14772  0022A2  176B               	andwf	(??_get_time+1)& (0+255),f,b
 14773  0022A4  0100               	movlb	0	; () banked
 14774  0022A6  516B               	movf	(??_get_time+1)& (0+255),w,b
 14775  0022A8  0D0A               	mullw	10
 14776  0022AA  0100               	movlb	0	; () banked
 14777  0022AC  516A               	movf	??_get_time& (0+255),w,b
 14778  0022AE  24F3               	addwf	prodl,w,c
 14779  0022B0  0100               	movlb	0	; () banked
 14780  0022B2  6FCB               	movwf	(_curr_time+6)& (0+255),b
 14781  0022B4  0100               	movlb	0	; () banked
 14782  0022B6  0E00               	movlw	0
 14783  0022B8  20F4               	addwfc	prodh,w,c
 14784  0022BA  0100               	movlb	0	; () banked
 14785  0022BC  6FCC               	movwf	(_curr_time+7)& (0+255),b
 14786                           
 14787                           ;clock.c: 69: curr_time.month = (unsigned int)(((data[5]>>4)*10)+(data[5] & 0xF));
 14788  0022BE  C071  F06A         	movff	get_time@data+5,??_get_time
 14789  0022C2  0E0F               	movlw	15
 14790  0022C4  0100               	movlb	0	; () banked
 14791  0022C6  176A               	andwf	??_get_time& (0+255),f,b
 14792  0022C8  C071  F06B         	movff	get_time@data+5,??_get_time+1
 14793  0022CC  0100               	movlb	0	; () banked
 14794  0022CE  3B6B               	swapf	(??_get_time+1)& (0+255),f,b
 14795  0022D0  0E0F               	movlw	15
 14796  0022D2  176B               	andwf	(??_get_time+1)& (0+255),f,b
 14797  0022D4  0100               	movlb	0	; () banked
 14798  0022D6  516B               	movf	(??_get_time+1)& (0+255),w,b
 14799  0022D8  0D0A               	mullw	10
 14800  0022DA  0100               	movlb	0	; () banked
 14801  0022DC  516A               	movf	??_get_time& (0+255),w,b
 14802  0022DE  24F3               	addwf	prodl,w,c
 14803  0022E0  0100               	movlb	0	; () banked
 14804  0022E2  6FCD               	movwf	(_curr_time+8)& (0+255),b
 14805  0022E4  0100               	movlb	0	; () banked
 14806  0022E6  0E00               	movlw	0
 14807  0022E8  20F4               	addwfc	prodh,w,c
 14808  0022EA  0100               	movlb	0	; () banked
 14809  0022EC  6FCE               	movwf	(_curr_time+9)& (0+255),b
 14810                           
 14811                           ;clock.c: 70: curr_time.year = (unsigned int)(((data[6]>>4)*10)+(data[6] & 0xF));
 14812  0022EE  C072  F06A         	movff	get_time@data+6,??_get_time
 14813  0022F2  0E0F               	movlw	15
 14814  0022F4  0100               	movlb	0	; () banked
 14815  0022F6  176A               	andwf	??_get_time& (0+255),f,b
 14816  0022F8  C072  F06B         	movff	get_time@data+6,??_get_time+1
 14817  0022FC  0100               	movlb	0	; () banked
 14818  0022FE  3B6B               	swapf	(??_get_time+1)& (0+255),f,b
 14819  002300  0E0F               	movlw	15
 14820  002302  176B               	andwf	(??_get_time+1)& (0+255),f,b
 14821  002304  0100               	movlb	0	; () banked
 14822  002306  516B               	movf	(??_get_time+1)& (0+255),w,b
 14823  002308  0D0A               	mullw	10
 14824  00230A  0100               	movlb	0	; () banked
 14825  00230C  516A               	movf	??_get_time& (0+255),w,b
 14826  00230E  24F3               	addwf	prodl,w,c
 14827  002310  0100               	movlb	0	; () banked
 14828  002312  6FCF               	movwf	(_curr_time+10)& (0+255),b
 14829  002314  0100               	movlb	0	; () banked
 14830  002316  0E00               	movlw	0
 14831  002318  20F4               	addwfc	prodh,w,c
 14832  00231A  0100               	movlb	0	; () banked
 14833  00231C  6FD0               	movwf	(_curr_time+11)& (0+255),b
 14834  00231E                     i1l513:
 14835                           
 14836                           ;clock.c: 71: }
 14837                           ;clock.c: 73: IOCAFbits.IOCAF0 = 0;
 14838                           
 14839                           ; BSR set to: 0
 14840  00231E  010F               	movlb	15	; () banked
 14841  002320  910A               	bcf	10,0,b	;volatile
 14842                           
 14843                           ; BSR set to: 15
 14844                           ;clock.c: 75: return &curr_time;
 14845  002322  0EC5               	movlw	low _curr_time
 14846  002324  0100               	movlb	0	; () banked
 14847  002326  6F68               	movwf	?_get_time& (0+255),b
 14848  002328  0E00               	movlw	high _curr_time
 14849  00232A  0100               	movlb	0	; () banked
 14850  00232C  6F69               	movwf	(?_get_time+1)& (0+255),b
 14851  00232E  0012               	return	
 14852  002330                     __end_of_get_time:
 14853                           	opt stack 0
 14854                           pclatu	equ	0xFFB
 14855                           pclath	equ	0xFFA
 14856                           tblptru	equ	0xFF8
 14857                           tblptrh	equ	0xFF7
 14858                           tblptrl	equ	0xFF6
 14859                           tablat	equ	0xFF5
 14860                           prodh	equ	0xFF4
 14861                           prodl	equ	0xFF3
 14862                           postinc0	equ	0xFEE
 14863                           fsr0h	equ	0xFEA
 14864                           fsr0l	equ	0xFE9
 14865                           wreg	equ	0xFE8
 14866                           postdec1	equ	0xFE5
 14867                           fsr1h	equ	0xFE2
 14868                           fsr1l	equ	0xFE1
 14869                           bsr	equ	0xFE0
 14870                           indf2	equ	0xFDF
 14871                           postinc2	equ	0xFDE
 14872                           postdec2	equ	0xFDD
 14873                           fsr2h	equ	0xFDA
 14874                           fsr2l	equ	0xFD9
 14875                           status	equ	0xFD8
 14876                           
 14877 ;; *************** function i1_i2c_read *****************
 14878 ;; Defined at:
 14879 ;;		line 146 in file "communication.c"
 14880 ;; Parameters:    Size  Location     Type
 14881 ;;  addr            1    wreg     unsigned char 
 14882 ;;  reg_addr        1   33[COMRAM] unsigned char 
 14883 ;;  data_read_le    2   34[COMRAM] int 
 14884 ;;  data            2   36[COMRAM] PTR unsigned char 
 14885 ;;		 -> dat(47), get_time@data(7), i2c_read_single@temp(1), 
 14886 ;; Auto vars:     Size  Location     Type
 14887 ;;  addr            1    5[BANK0 ] unsigned char 
 14888 ;;  i2c_read        2    6[BANK0 ] int 
 14889 ;; Return value:  Size  Location     Type
 14890 ;;                  2   33[COMRAM] int 
 14891 ;; Registers used:
 14892 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14893 ;; Tracked objects:
 14894 ;;		On entry : 0/0
 14895 ;;		On exit  : 0/0
 14896 ;;		Unchanged: 0/0
 14897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14898 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14899 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14900 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14901 ;;      Totals:         5       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14902 ;;Total ram usage:       13 bytes
 14903 ;; Hardware stack levels used:    1
 14904 ;; Hardware stack levels required when called:    5
 14905 ;; This function calls:
 14906 ;;		i1_I2C_Master_Read
 14907 ;;		i1_I2C_Master_Start
 14908 ;;		i1_I2C_Master_Stop
 14909 ;;		i1_I2C_Master_Wait
 14910 ;;		i1_I2C_Master_Write
 14911 ;; This function is called by:
 14912 ;;		_get_time
 14913 ;; This function uses a non-reentrant model
 14914 ;;
 14915                           
 14916                           	psect	text83
 14917  0029A6                     __ptext83:
 14918                           	opt stack 0
 14919  0029A6                     i1_i2c_read:
 14920                           	opt stack 17
 14921                           
 14922                           ; BSR set to: 0
 14923                           ;incstack = 0
 14924                           ;i1i2c_read@addr stored from wreg
 14925  0029A6  0100               	movlb	0	; () banked
 14926  0029A8  6F65               	movwf	i1i2c_read@addr& (0+255),b
 14927                           
 14928                           ;communication.c: 150: if(i2c_bus_busy)
 14929  0029AA  0100               	movlb	0	; () banked
 14930  0029AC  51BD               	movf	_i2c_bus_busy& (0+255),w,b	;volatile
 14931  0029AE  0100               	movlb	0	; () banked
 14932  0029B0  11BE               	iorwf	(_i2c_bus_busy+1)& (0+255),w,b	;volatile
 14933  0029B2  B4D8               	btfsc	status,2,c
 14934  0029B4  D003               	goto	i1l330
 14935                           
 14936                           ; BSR set to: 0
 14937                           ;communication.c: 151: return -1;
 14938  0029B6  6822               	setf	?i1_i2c_read,c
 14939  0029B8  6823               	setf	?i1_i2c_read+1,c
 14940  0029BA  0012               	return	
 14941  0029BC                     i1l330:
 14942                           
 14943                           ; BSR set to: 0
 14944                           ;communication.c: 152: i2c_bus_busy = 1;
 14945                           
 14946                           ; BSR set to: 0
 14947  0029BC  0E00               	movlw	0
 14948  0029BE  0100               	movlb	0	; () banked
 14949  0029C0  6FBE               	movwf	(_i2c_bus_busy+1)& (0+255),b	;volatile
 14950  0029C2  0E01               	movlw	1
 14951  0029C4  6FBD               	movwf	_i2c_bus_busy& (0+255),b	;volatile
 14952                           
 14953                           ; BSR set to: 0
 14954                           ;communication.c: 155: I2C_Master_Start();
 14955  0029C6  EC1F  F026         	call	i1_I2C_Master_Start	;wreg free
 14956                           
 14957                           ;communication.c: 157: I2C_Master_Write(addr &= ~(1 << 0));
 14958  0029CA  0100               	movlb	0	; () banked
 14959  0029CC  9165               	bcf	i1i2c_read@addr& (0+255),0,b
 14960  0029CE  C065  F01E         	movff	i1i2c_read@addr,i1I2C_Master_Write@d
 14961  0029D2  6A1F               	clrf	i1I2C_Master_Write@d+1,c
 14962  0029D4  EC0E  F026         	call	i1_I2C_Master_Write	;wreg free
 14963                           
 14964                           ;communication.c: 159: I2C_Master_Write(reg_addr);
 14965  0029D8  C022  F01E         	movff	i1i2c_read@reg_addr,i1I2C_Master_Write@d
 14966  0029DC  6A1F               	clrf	i1I2C_Master_Write@d+1,c
 14967  0029DE  EC0E  F026         	call	i1_I2C_Master_Write	;wreg free
 14968                           
 14969                           ;communication.c: 161: I2C_Master_Stop();
 14970  0029E2  EC1B  F026         	call	i1_I2C_Master_Stop	;wreg free
 14971                           
 14972                           ;communication.c: 164: _delay((unsigned long)((30)*(64000000/4000000.0)));
 14973  0029E6  0EA0               	movlw	160
 14974  0029E8                     i1u1071_27:
 14975  0029E8  2EE8               	decfsz	wreg,f,c
 14976  0029EA  D7FE               	bra	i1u1071_27
 14977                           
 14978                           ;communication.c: 167: I2C_Master_Start();
 14979  0029EC  EC1F  F026         	call	i1_I2C_Master_Start	;wreg free
 14980                           
 14981                           ;communication.c: 170: I2C_Master_Write(addr |= 1 << 0);
 14982  0029F0  0100               	movlb	0	; () banked
 14983  0029F2  8165               	bsf	i1i2c_read@addr& (0+255),0,b
 14984  0029F4  C065  F01E         	movff	i1i2c_read@addr,i1I2C_Master_Write@d
 14985  0029F8  6A1F               	clrf	i1I2C_Master_Write@d+1,c
 14986  0029FA  EC0E  F026         	call	i1_I2C_Master_Write	;wreg free
 14987                           
 14988                           ;communication.c: 173: I2C_Master_Wait();
 14989  0029FE  EC00  F026         	call	i1_I2C_Master_Wait	;wreg free
 14990                           
 14991                           ;communication.c: 176: for(int index = 0; index < data_read_len - 1; index++)
 14992  002A02  0E00               	movlw	0
 14993  002A04  0100               	movlb	0	; () banked
 14994  002A06  6F67               	movwf	(i1i2c_read@index+1)& (0+255),b
 14995  002A08  0E00               	movlw	0
 14996  002A0A  6F66               	movwf	i1i2c_read@index& (0+255),b
 14997  002A0C  D013               	goto	i1l332
 14998  002A0E                     
 14999                           ; BSR set to: 0
 15000                           ;communication.c: 177: {
 15001                           ;communication.c: 178: data[index] = I2C_Master_Read(0);
 15002                           
 15003                           ; BSR set to: 0
 15004  002A0E  0100               	movlb	0	; () banked
 15005  002A10  5166               	movf	i1i2c_read@index& (0+255),w,b
 15006  002A12  2425               	addwf	i1i2c_read@data,w,c
 15007  002A14  6ED9               	movwf	fsr2l,c
 15008  002A16  0100               	movlb	0	; () banked
 15009  002A18  5167               	movf	(i1i2c_read@index+1)& (0+255),w,b
 15010  002A1A  2026               	addwfc	i1i2c_read@data+1,w,c
 15011  002A1C  6EDA               	movwf	fsr2h,c
 15012  002A1E  0E00               	movlw	0
 15013  002A20  6E1F               	movwf	i1I2C_Master_Read@final_read+1,c
 15014  002A22  0E00               	movlw	0
 15015  002A24  6E1E               	movwf	i1I2C_Master_Read@final_read,c
 15016  002A26  ECE9  F024         	call	i1_I2C_Master_Read	;wreg free
 15017  002A2A  501E               	movf	?i1_I2C_Master_Read,w,c
 15018  002A2C  6EDF               	movwf	indf2,c
 15019  002A2E  0100               	movlb	0	; () banked
 15020  002A30  4B66               	infsnz	i1i2c_read@index& (0+255),f,b
 15021  002A32  2B67               	incf	(i1i2c_read@index+1)& (0+255),f,b
 15022  002A34                     i1l332:
 15023                           
 15024                           ; BSR set to: 0
 15025                           
 15026                           ; BSR set to: 0
 15027  002A34  0EFF               	movlw	255
 15028  002A36  0100               	movlb	0	; () banked
 15029  002A38  6F60               	movwf	??i1_i2c_read& (0+255),b
 15030  002A3A  0EFF               	movlw	255
 15031  002A3C  0100               	movlb	0	; () banked
 15032  002A3E  6F61               	movwf	(??i1_i2c_read+1)& (0+255),b
 15033  002A40  C023  F062         	movff	i1i2c_read@data_read_len,??i1_i2c_read+2
 15034  002A44  C024  F063         	movff	i1i2c_read@data_read_len+1,??i1_i2c_read+3
 15035  002A48  0100               	movlb	0	; () banked
 15036  002A4A  5160               	movf	??i1_i2c_read& (0+255),w,b
 15037  002A4C  0100               	movlb	0	; () banked
 15038  002A4E  2762               	addwf	(??i1_i2c_read+2)& (0+255),f,b
 15039  002A50  0100               	movlb	0	; () banked
 15040  002A52  5161               	movf	(??i1_i2c_read+1)& (0+255),w,b
 15041  002A54  0100               	movlb	0	; () banked
 15042  002A56  2363               	addwfc	(??i1_i2c_read+3)& (0+255),f,b
 15043  002A58  0100               	movlb	0	; () banked
 15044  002A5A  5162               	movf	(??i1_i2c_read+2)& (0+255),w,b
 15045  002A5C  0100               	movlb	0	; () banked
 15046  002A5E  5D66               	subwf	i1i2c_read@index& (0+255),w,b
 15047  002A60  0100               	movlb	0	; () banked
 15048  002A62  5167               	movf	(i1i2c_read@index+1)& (0+255),w,b
 15049  002A64  0A80               	xorlw	128
 15050  002A66  0100               	movlb	0	; () banked
 15051  002A68  6F64               	movwf	(??i1_i2c_read+4)& (0+255),b
 15052  002A6A  0100               	movlb	0	; () banked
 15053  002A6C  5163               	movf	(??i1_i2c_read+3)& (0+255),w,b
 15054  002A6E  0A80               	xorlw	128
 15055  002A70  0100               	movlb	0	; () banked
 15056  002A72  5964               	subwfb	(??i1_i2c_read+4)& (0+255),w,b
 15057  002A74  A0D8               	btfss	status,0,c
 15058  002A76  D7CB               	goto	i1l333
 15059                           
 15060                           ; BSR set to: 0
 15061                           ;communication.c: 179: }
 15062                           ;communication.c: 181: data[data_read_len - 1] = I2C_Master_Read(1);
 15063                           
 15064                           ; BSR set to: 0
 15065  002A78  0EFF               	movlw	255
 15066  002A7A  0100               	movlb	0	; () banked
 15067  002A7C  6F60               	movwf	??i1_i2c_read& (0+255),b
 15068  002A7E  0EFF               	movlw	255
 15069  002A80  0100               	movlb	0	; () banked
 15070  002A82  6F61               	movwf	(??i1_i2c_read+1)& (0+255),b
 15071  002A84  C023  F062         	movff	i1i2c_read@data_read_len,??i1_i2c_read+2
 15072  002A88  C024  F063         	movff	i1i2c_read@data_read_len+1,??i1_i2c_read+3
 15073  002A8C  0100               	movlb	0	; () banked
 15074  002A8E  5160               	movf	??i1_i2c_read& (0+255),w,b
 15075  002A90  0100               	movlb	0	; () banked
 15076  002A92  2762               	addwf	(??i1_i2c_read+2)& (0+255),f,b
 15077  002A94  0100               	movlb	0	; () banked
 15078  002A96  5161               	movf	(??i1_i2c_read+1)& (0+255),w,b
 15079  002A98  0100               	movlb	0	; () banked
 15080  002A9A  2363               	addwfc	(??i1_i2c_read+3)& (0+255),f,b
 15081  002A9C  0100               	movlb	0	; () banked
 15082  002A9E  5162               	movf	(??i1_i2c_read+2)& (0+255),w,b
 15083  002AA0  2425               	addwf	i1i2c_read@data,w,c
 15084  002AA2  6ED9               	movwf	fsr2l,c
 15085  002AA4  0100               	movlb	0	; () banked
 15086  002AA6  5163               	movf	(??i1_i2c_read+3)& (0+255),w,b
 15087  002AA8  2026               	addwfc	i1i2c_read@data+1,w,c
 15088  002AAA  6EDA               	movwf	fsr2h,c
 15089  002AAC  0E00               	movlw	0
 15090  002AAE  6E1F               	movwf	i1I2C_Master_Read@final_read+1,c
 15091  002AB0  0E01               	movlw	1
 15092  002AB2  6E1E               	movwf	i1I2C_Master_Read@final_read,c
 15093  002AB4  ECE9  F024         	call	i1_I2C_Master_Read	;wreg free
 15094  002AB8  501E               	movf	?i1_I2C_Master_Read,w,c
 15095  002ABA  6EDF               	movwf	indf2,c
 15096                           
 15097                           ;communication.c: 183: I2C_Master_Stop();
 15098  002ABC  EC1B  F026         	call	i1_I2C_Master_Stop	;wreg free
 15099                           
 15100                           ;communication.c: 186: i2c_bus_busy = 0;
 15101  002AC0  0E00               	movlw	0
 15102  002AC2  0100               	movlb	0	; () banked
 15103  002AC4  6FBE               	movwf	(_i2c_bus_busy+1)& (0+255),b	;volatile
 15104  002AC6  0E00               	movlw	0
 15105  002AC8  6FBD               	movwf	_i2c_bus_busy& (0+255),b	;volatile
 15106                           
 15107                           ; BSR set to: 0
 15108                           ;communication.c: 187: return 1;
 15109  002ACA  0E00               	movlw	0
 15110  002ACC  6E23               	movwf	?i1_i2c_read+1,c
 15111  002ACE  0E01               	movlw	1
 15112  002AD0  6E22               	movwf	?i1_i2c_read,c
 15113  002AD2  0012               	return	
 15114  002AD4                     __end_ofi1_i2c_read:
 15115                           	opt stack 0
 15116                           pclatu	equ	0xFFB
 15117                           pclath	equ	0xFFA
 15118                           tblptru	equ	0xFF8
 15119                           tblptrh	equ	0xFF7
 15120                           tblptrl	equ	0xFF6
 15121                           tablat	equ	0xFF5
 15122                           prodh	equ	0xFF4
 15123                           prodl	equ	0xFF3
 15124                           postinc0	equ	0xFEE
 15125                           fsr0h	equ	0xFEA
 15126                           fsr0l	equ	0xFE9
 15127                           wreg	equ	0xFE8
 15128                           postdec1	equ	0xFE5
 15129                           fsr1h	equ	0xFE2
 15130                           fsr1l	equ	0xFE1
 15131                           bsr	equ	0xFE0
 15132                           indf2	equ	0xFDF
 15133                           postinc2	equ	0xFDE
 15134                           postdec2	equ	0xFDD
 15135                           fsr2h	equ	0xFDA
 15136                           fsr2l	equ	0xFD9
 15137                           status	equ	0xFD8
 15138                           
 15139 ;; *************** function i1_I2C_Master_Write *****************
 15140 ;; Defined at:
 15141 ;;		line 206 in file "communication.c"
 15142 ;; Parameters:    Size  Location     Type
 15143 ;;  d               2   29[COMRAM] unsigned int 
 15144 ;; Auto vars:     Size  Location     Type
 15145 ;;		None
 15146 ;; Return value:  Size  Location     Type
 15147 ;;                  1    wreg      void 
 15148 ;; Registers used:
 15149 ;;		wreg, status,2, status,0, cstack
 15150 ;; Tracked objects:
 15151 ;;		On entry : 0/0
 15152 ;;		On exit  : 0/0
 15153 ;;		Unchanged: 0/0
 15154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15155 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15159 ;;Total ram usage:        2 bytes
 15160 ;; Hardware stack levels used:    1
 15161 ;; Hardware stack levels required when called:    4
 15162 ;; This function calls:
 15163 ;;		i1_I2C_Master_Wait
 15164 ;; This function is called by:
 15165 ;;		i1_i2c_write
 15166 ;;		i1_i2c_read
 15167 ;; This function uses a non-reentrant model
 15168 ;;
 15169                           
 15170                           	psect	text84
 15171  004C1C                     __ptext84:
 15172                           	opt stack 0
 15173  004C1C                     i1_I2C_Master_Write:
 15174                           	opt stack 12
 15175                           
 15176                           ;communication.c: 208: I2C_Master_Wait();
 15177                           
 15178                           ; BSR set to: 0
 15179                           ;incstack = 0
 15180  004C1C  EC00  F026         	call	i1_I2C_Master_Wait	;wreg free
 15181                           
 15182                           ;communication.c: 210: SSP1BUF = d;
 15183  004C20  C01E  FF92         	movff	i1I2C_Master_Write@d,3986	;volatile
 15184  004C24  0012               	return		;funcret
 15185  004C26                     __end_ofi1_I2C_Master_Write:
 15186                           	opt stack 0
 15187                           pclatu	equ	0xFFB
 15188                           pclath	equ	0xFFA
 15189                           tblptru	equ	0xFF8
 15190                           tblptrh	equ	0xFF7
 15191                           tblptrl	equ	0xFF6
 15192                           tablat	equ	0xFF5
 15193                           prodh	equ	0xFF4
 15194                           prodl	equ	0xFF3
 15195                           postinc0	equ	0xFEE
 15196                           fsr0h	equ	0xFEA
 15197                           fsr0l	equ	0xFE9
 15198                           wreg	equ	0xFE8
 15199                           postdec1	equ	0xFE5
 15200                           fsr1h	equ	0xFE2
 15201                           fsr1l	equ	0xFE1
 15202                           bsr	equ	0xFE0
 15203                           indf2	equ	0xFDF
 15204                           postinc2	equ	0xFDE
 15205                           postdec2	equ	0xFDD
 15206                           fsr2h	equ	0xFDA
 15207                           fsr2l	equ	0xFD9
 15208                           status	equ	0xFD8
 15209                           
 15210 ;; *************** function i1_I2C_Master_Stop *****************
 15211 ;; Defined at:
 15212 ;;		line 234 in file "communication.c"
 15213 ;; Parameters:    Size  Location     Type
 15214 ;;		None
 15215 ;; Auto vars:     Size  Location     Type
 15216 ;;		None
 15217 ;; Return value:  Size  Location     Type
 15218 ;;                  1    wreg      void 
 15219 ;; Registers used:
 15220 ;;		wreg, status,2, status,0, cstack
 15221 ;; Tracked objects:
 15222 ;;		On entry : 0/0
 15223 ;;		On exit  : 0/0
 15224 ;;		Unchanged: 0/0
 15225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15230 ;;Total ram usage:        0 bytes
 15231 ;; Hardware stack levels used:    1
 15232 ;; Hardware stack levels required when called:    4
 15233 ;; This function calls:
 15234 ;;		i1_I2C_Master_Wait
 15235 ;; This function is called by:
 15236 ;;		i1_i2c_write
 15237 ;;		i1_i2c_read
 15238 ;; This function uses a non-reentrant model
 15239 ;;
 15240                           
 15241                           	psect	text85
 15242  004C36                     __ptext85:
 15243                           	opt stack 0
 15244  004C36                     i1_I2C_Master_Stop:
 15245                           	opt stack 12
 15246                           
 15247                           ;communication.c: 236: I2C_Master_Wait();
 15248                           
 15249                           ;incstack = 0
 15250  004C36  EC00  F026         	call	i1_I2C_Master_Wait	;wreg free
 15251                           
 15252                           ;communication.c: 237: SSP1CON2bits.PEN = 1;
 15253  004C3A  8497               	bsf	3991,2,c	;volatile
 15254  004C3C  0012               	return		;funcret
 15255  004C3E                     __end_ofi1_I2C_Master_Stop:
 15256                           	opt stack 0
 15257                           pclatu	equ	0xFFB
 15258                           pclath	equ	0xFFA
 15259                           tblptru	equ	0xFF8
 15260                           tblptrh	equ	0xFF7
 15261                           tblptrl	equ	0xFF6
 15262                           tablat	equ	0xFF5
 15263                           prodh	equ	0xFF4
 15264                           prodl	equ	0xFF3
 15265                           postinc0	equ	0xFEE
 15266                           fsr0h	equ	0xFEA
 15267                           fsr0l	equ	0xFE9
 15268                           wreg	equ	0xFE8
 15269                           postdec1	equ	0xFE5
 15270                           fsr1h	equ	0xFE2
 15271                           fsr1l	equ	0xFE1
 15272                           bsr	equ	0xFE0
 15273                           indf2	equ	0xFDF
 15274                           postinc2	equ	0xFDE
 15275                           postdec2	equ	0xFDD
 15276                           fsr2h	equ	0xFDA
 15277                           fsr2l	equ	0xFD9
 15278                           status	equ	0xFD8
 15279                           
 15280 ;; *************** function i1_I2C_Master_Start *****************
 15281 ;; Defined at:
 15282 ;;		line 198 in file "communication.c"
 15283 ;; Parameters:    Size  Location     Type
 15284 ;;		None
 15285 ;; Auto vars:     Size  Location     Type
 15286 ;;		None
 15287 ;; Return value:  Size  Location     Type
 15288 ;;                  1    wreg      void 
 15289 ;; Registers used:
 15290 ;;		wreg, status,2, status,0, cstack
 15291 ;; Tracked objects:
 15292 ;;		On entry : 0/0
 15293 ;;		On exit  : 0/0
 15294 ;;		Unchanged: 0/0
 15295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15300 ;;Total ram usage:        0 bytes
 15301 ;; Hardware stack levels used:    1
 15302 ;; Hardware stack levels required when called:    4
 15303 ;; This function calls:
 15304 ;;		i1_I2C_Master_Wait
 15305 ;; This function is called by:
 15306 ;;		i1_i2c_write
 15307 ;;		i1_i2c_read
 15308 ;; This function uses a non-reentrant model
 15309 ;;
 15310                           
 15311                           	psect	text86
 15312  004C3E                     __ptext86:
 15313                           	opt stack 0
 15314  004C3E                     i1_I2C_Master_Start:
 15315                           	opt stack 12
 15316                           
 15317                           ;communication.c: 200: I2C_Master_Wait();
 15318                           
 15319                           ;incstack = 0
 15320  004C3E  EC00  F026         	call	i1_I2C_Master_Wait	;wreg free
 15321                           
 15322                           ;communication.c: 202: SSP1CON2bits.SEN = 1;
 15323  004C42  8097               	bsf	3991,0,c	;volatile
 15324  004C44  0012               	return		;funcret
 15325  004C46                     __end_ofi1_I2C_Master_Start:
 15326                           	opt stack 0
 15327                           pclatu	equ	0xFFB
 15328                           pclath	equ	0xFFA
 15329                           tblptru	equ	0xFF8
 15330                           tblptrh	equ	0xFF7
 15331                           tblptrl	equ	0xFF6
 15332                           tablat	equ	0xFF5
 15333                           prodh	equ	0xFF4
 15334                           prodl	equ	0xFF3
 15335                           postinc0	equ	0xFEE
 15336                           fsr0h	equ	0xFEA
 15337                           fsr0l	equ	0xFE9
 15338                           wreg	equ	0xFE8
 15339                           postdec1	equ	0xFE5
 15340                           fsr1h	equ	0xFE2
 15341                           fsr1l	equ	0xFE1
 15342                           bsr	equ	0xFE0
 15343                           indf2	equ	0xFDF
 15344                           postinc2	equ	0xFDE
 15345                           postdec2	equ	0xFDD
 15346                           fsr2h	equ	0xFDA
 15347                           fsr2l	equ	0xFD9
 15348                           status	equ	0xFD8
 15349                           
 15350 ;; *************** function i1_I2C_Master_Read *****************
 15351 ;; Defined at:
 15352 ;;		line 214 in file "communication.c"
 15353 ;; Parameters:    Size  Location     Type
 15354 ;;  final_read      2   29[COMRAM] int 
 15355 ;; Auto vars:     Size  Location     Type
 15356 ;;  I2C_Master_R    2   31[COMRAM] unsigned short 
 15357 ;; Return value:  Size  Location     Type
 15358 ;;                  2   29[COMRAM] unsigned short 
 15359 ;; Registers used:
 15360 ;;		wreg, status,2, status,0, cstack
 15361 ;; Tracked objects:
 15362 ;;		On entry : 0/0
 15363 ;;		On exit  : 0/0
 15364 ;;		Unchanged: 0/0
 15365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15366 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15367 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15369 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15370 ;;Total ram usage:        4 bytes
 15371 ;; Hardware stack levels used:    1
 15372 ;; Hardware stack levels required when called:    4
 15373 ;; This function calls:
 15374 ;;		i1_I2C_Master_Wait
 15375 ;; This function is called by:
 15376 ;;		i1_i2c_read
 15377 ;; This function uses a non-reentrant model
 15378 ;;
 15379                           
 15380                           	psect	text87
 15381  0049D2                     __ptext87:
 15382                           	opt stack 0
 15383  0049D2                     i1_I2C_Master_Read:
 15384                           	opt stack 17
 15385                           
 15386                           ;communication.c: 216: unsigned short temp;
 15387                           ;communication.c: 217: I2C_Master_Wait();
 15388                           
 15389                           ;incstack = 0
 15390  0049D2  EC00  F026         	call	i1_I2C_Master_Wait	;wreg free
 15391                           
 15392                           ;communication.c: 218: SSP1CON2bits.RCEN = 1;
 15393  0049D6  8697               	bsf	3991,3,c	;volatile
 15394                           
 15395                           ;communication.c: 219: PIR3bits.SSP1IF = 0;
 15396  0049D8  010E               	movlb	14	; () banked
 15397  0049DA  91CD               	bcf	205,0,b	;volatile
 15398                           
 15399                           ;communication.c: 220: I2C_Master_Wait();
 15400  0049DC  EC00  F026         	call	i1_I2C_Master_Wait	;wreg free
 15401  0049E0  010E               	movlb	14	; () banked
 15402  0049E2  A1CD               	btfss	205,0,b	;volatile
 15403  0049E4  D7FD               	goto	i1l350
 15404                           
 15405                           ; BSR set to: 14
 15406                           ;communication.c: 223: temp = SSP1BUF;
 15407  0049E6  CF92 F020          	movff	3986,i1I2C_Master_Read@temp	;volatile
 15408  0049EA  6A21               	clrf	i1I2C_Master_Read@temp+1,c
 15409                           
 15410                           ;communication.c: 224: PIR3bits.SSP1IF = 0;
 15411  0049EC  010E               	movlb	14	; () banked
 15412  0049EE  91CD               	bcf	205,0,b	;volatile
 15413                           
 15414                           ; BSR set to: 14
 15415                           ;communication.c: 225: I2C_Master_Wait();
 15416  0049F0  EC00  F026         	call	i1_I2C_Master_Wait	;wreg free
 15417                           
 15418                           ;communication.c: 227: SSP1CON2bits.ACKDT = (unsigned) final_read;
 15419  0049F4  B01E               	btfsc	i1I2C_Master_Read@final_read,0,c
 15420  0049F6  D002               	bra	i1u807_25
 15421  0049F8  9A97               	bcf	3991,5,c	;volatile
 15422  0049FA  D001               	bra	i1u807_26
 15423  0049FC                     i1u807_25:
 15424  0049FC  8A97               	bsf	3991,5,c	;volatile
 15425  0049FE                     i1u807_26:
 15426                           
 15427                           ;communication.c: 229: SSP1CON2bits.ACKEN = 1;
 15428  0049FE  8897               	bsf	3991,4,c	;volatile
 15429                           
 15430                           ;communication.c: 230: return temp;
 15431  004A00  C020  F01E         	movff	i1I2C_Master_Read@temp,?i1_I2C_Master_Read
 15432  004A04  C021  F01F         	movff	i1I2C_Master_Read@temp+1,?i1_I2C_Master_Read+1
 15433  004A08  0012               	return	
 15434  004A0A                     __end_ofi1_I2C_Master_Read:
 15435                           	opt stack 0
 15436                           pclatu	equ	0xFFB
 15437                           pclath	equ	0xFFA
 15438                           tblptru	equ	0xFF8
 15439                           tblptrh	equ	0xFF7
 15440                           tblptrl	equ	0xFF6
 15441                           tablat	equ	0xFF5
 15442                           prodh	equ	0xFF4
 15443                           prodl	equ	0xFF3
 15444                           postinc0	equ	0xFEE
 15445                           fsr0h	equ	0xFEA
 15446                           fsr0l	equ	0xFE9
 15447                           wreg	equ	0xFE8
 15448                           postdec1	equ	0xFE5
 15449                           fsr1h	equ	0xFE2
 15450                           fsr1l	equ	0xFE1
 15451                           bsr	equ	0xFE0
 15452                           indf2	equ	0xFDF
 15453                           postinc2	equ	0xFDE
 15454                           postdec2	equ	0xFDD
 15455                           fsr2h	equ	0xFDA
 15456                           fsr2l	equ	0xFD9
 15457                           status	equ	0xFD8
 15458                           
 15459 ;; *************** function i1_I2C_Master_Wait *****************
 15460 ;; Defined at:
 15461 ;;		line 192 in file "communication.c"
 15462 ;; Parameters:    Size  Location     Type
 15463 ;;		None
 15464 ;; Auto vars:     Size  Location     Type
 15465 ;;		None
 15466 ;; Return value:  Size  Location     Type
 15467 ;;                  1    wreg      void 
 15468 ;; Registers used:
 15469 ;;		wreg, status,2, status,0
 15470 ;; Tracked objects:
 15471 ;;		On entry : 0/0
 15472 ;;		On exit  : 0/0
 15473 ;;		Unchanged: 0/0
 15474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15476 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15477 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15479 ;;Total ram usage:        1 bytes
 15480 ;; Hardware stack levels used:    1
 15481 ;; Hardware stack levels required when called:    3
 15482 ;; This function calls:
 15483 ;;		Nothing
 15484 ;; This function is called by:
 15485 ;;		i1_i2c_read
 15486 ;;		i1_I2C_Master_Start
 15487 ;;		i1_I2C_Master_Write
 15488 ;;		i1_I2C_Master_Read
 15489 ;;		i1_I2C_Master_Stop
 15490 ;; This function uses a non-reentrant model
 15491 ;;
 15492                           
 15493                           	psect	text88
 15494  004C00                     __ptext88:
 15495                           	opt stack 0
 15496  004C00                     i1_I2C_Master_Wait:
 15497                           	opt stack 12
 15498                           
 15499                           ;communication.c: 194: while ((SSP1STATbits.R_W) || (SSP1CON2 & 0x1F));
 15500                           
 15501                           ;incstack = 0
 15502  004C00  B495               	btfsc	3989,2,c	;volatile
 15503  004C02  D7FE               	goto	i1_I2C_Master_Wait
 15504  004C04  CF97 F01D          	movff	3991,??i1_I2C_Master_Wait	;volatile
 15505  004C08  0E1F               	movlw	31
 15506  004C0A  161D               	andwf	??i1_I2C_Master_Wait,f,c
 15507  004C0C  B4D8               	btfsc	status,2,c
 15508  004C0E  0012               	return	
 15509  004C10  D7F7               	goto	i1_I2C_Master_Wait
 15510  004C12                     __end_ofi1_I2C_Master_Wait:
 15511                           	opt stack 0
 15512                           pclatu	equ	0xFFB
 15513                           pclath	equ	0xFFA
 15514                           tblptru	equ	0xFF8
 15515                           tblptrh	equ	0xFF7
 15516                           tblptrl	equ	0xFF6
 15517                           tablat	equ	0xFF5
 15518                           prodh	equ	0xFF4
 15519                           prodl	equ	0xFF3
 15520                           postinc0	equ	0xFEE
 15521                           fsr0h	equ	0xFEA
 15522                           fsr0l	equ	0xFE9
 15523                           wreg	equ	0xFE8
 15524                           postdec1	equ	0xFE5
 15525                           fsr1h	equ	0xFE2
 15526                           fsr1l	equ	0xFE1
 15527                           bsr	equ	0xFE0
 15528                           indf2	equ	0xFDF
 15529                           postinc2	equ	0xFDE
 15530                           postdec2	equ	0xFDD
 15531                           fsr2h	equ	0xFDA
 15532                           fsr2l	equ	0xFD9
 15533                           status	equ	0xFD8
 15534                           
 15535 ;; *************** function _audio_jack_process *****************
 15536 ;; Defined at:
 15537 ;;		line 15 in file "audio.c"
 15538 ;; Parameters:    Size  Location     Type
 15539 ;;		None
 15540 ;; Auto vars:     Size  Location     Type
 15541 ;;		None
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      void 
 15544 ;; Registers used:
 15545 ;;		wreg, status,2, status,0, cstack
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15553 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15554 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15555 ;;Total ram usage:        1 bytes
 15556 ;; Hardware stack levels used:    1
 15557 ;; Hardware stack levels required when called:    4
 15558 ;; This function calls:
 15559 ;;		i1_set_status_led
 15560 ;; This function is called by:
 15561 ;;		_low_pri_isr
 15562 ;; This function uses a non-reentrant model
 15563 ;;
 15564                           
 15565                           	psect	text89
 15566  00446C                     __ptext89:
 15567                           	opt stack 0
 15568  00446C                     _audio_jack_process:
 15569                           	opt stack 19
 15570                           
 15571                           ;audio.c: 17: aud_jack_stat = PORTAbits.RA5;
 15572                           
 15573                           ;incstack = 0
 15574  00446C  AA8D               	btfss	3981,5,c	;volatile
 15575  00446E  D003               	goto	i1u877_20
 15576  004470  6A23               	clrf	??_audio_jack_process& (0+255),c
 15577  004472  2A23               	incf	??_audio_jack_process& (0+255),f,c
 15578  004474  D001               	goto	i1u877_28
 15579  004476                     i1u877_20:
 15580  004476  6A23               	clrf	??_audio_jack_process& (0+255),c
 15581  004478                     i1u877_28:
 15582  004478  5023               	movf	??_audio_jack_process,w,c
 15583  00447A  0100               	movlb	0	; () banked
 15584  00447C  6FAB               	movwf	_aud_jack_stat& (0+255),b
 15585  00447E  6BAC               	clrf	(_aud_jack_stat+1)& (0+255),b
 15586                           
 15587                           ; BSR set to: 0
 15588                           ;audio.c: 18: if(aud_jack_stat)
 15589  004480  0100               	movlb	0	; () banked
 15590  004482  51AB               	movf	_aud_jack_stat& (0+255),w,b
 15591  004484  0100               	movlb	0	; () banked
 15592  004486  11AC               	iorwf	(_aud_jack_stat+1)& (0+255),w,b
 15593  004488  B4D8               	btfsc	status,2,c
 15594  00448A  D00B               	goto	i1l1060
 15595                           
 15596                           ; BSR set to: 0
 15597                           ;audio.c: 19: {
 15598                           ;audio.c: 23: set_status_led(CLOCKMD, 0);
 15599  00448C  0E00               	movlw	0
 15600  00448E  6E1E               	movwf	i1set_status_led@status+1,c
 15601  004490  0E04               	movlw	4
 15602  004492  6E1D               	movwf	i1set_status_led@status,c
 15603  004494  0E00               	movlw	0
 15604  004496  6E20               	movwf	i1set_status_led@error_override+1,c
 15605  004498  0E00               	movlw	0
 15606  00449A  6E1F               	movwf	i1set_status_led@error_override,c
 15607  00449C  EC4F  F017         	call	i1_set_status_led	;wreg free
 15608                           
 15609                           ;audio.c: 24: }
 15610  0044A0  D00A               	goto	i1l1061
 15611  0044A2                     i1l1060:
 15612                           
 15613                           ;audio.c: 25: else
 15614                           ;audio.c: 26: {
 15615                           ;audio.c: 28: set_status_led(AUDMD, 0);
 15616  0044A2  0E00               	movlw	0
 15617  0044A4  6E1E               	movwf	i1set_status_led@status+1,c
 15618  0044A6  0E05               	movlw	5
 15619  0044A8  6E1D               	movwf	i1set_status_led@status,c
 15620  0044AA  0E00               	movlw	0
 15621  0044AC  6E20               	movwf	i1set_status_led@error_override+1,c
 15622  0044AE  0E00               	movlw	0
 15623  0044B0  6E1F               	movwf	i1set_status_led@error_override,c
 15624  0044B2  EC4F  F017         	call	i1_set_status_led	;wreg free
 15625  0044B6                     i1l1061:
 15626                           
 15627                           ;audio.c: 29: }
 15628                           ;audio.c: 32: IOCAFbits.IOCAF5 = 0;
 15629  0044B6  010F               	movlb	15	; () banked
 15630  0044B8  9B0A               	bcf	10,5,b	;volatile
 15631                           
 15632                           ; BSR set to: 15
 15633  0044BA  0012               	return		;funcret
 15634  0044BC                     __end_of_audio_jack_process:
 15635                           	opt stack 0
 15636                           pclatu	equ	0xFFB
 15637                           pclath	equ	0xFFA
 15638                           tblptru	equ	0xFF8
 15639                           tblptrh	equ	0xFF7
 15640                           tblptrl	equ	0xFF6
 15641                           tablat	equ	0xFF5
 15642                           prodh	equ	0xFF4
 15643                           prodl	equ	0xFF3
 15644                           postinc0	equ	0xFEE
 15645                           fsr0h	equ	0xFEA
 15646                           fsr0l	equ	0xFE9
 15647                           wreg	equ	0xFE8
 15648                           postdec1	equ	0xFE5
 15649                           fsr1h	equ	0xFE2
 15650                           fsr1l	equ	0xFE1
 15651                           bsr	equ	0xFE0
 15652                           indf2	equ	0xFDF
 15653                           postinc2	equ	0xFDE
 15654                           postdec2	equ	0xFDD
 15655                           fsr2h	equ	0xFDA
 15656                           fsr2l	equ	0xFD9
 15657                           status	equ	0xFD8
 15658                           
 15659 ;; *************** function i1_set_status_led *****************
 15660 ;; Defined at:
 15661 ;;		line 75 in file "pwm.c"
 15662 ;; Parameters:    Size  Location     Type
 15663 ;;  status          2   28[COMRAM] int 
 15664 ;;  error_overri    2   30[COMRAM] int 
 15665 ;; Auto vars:     Size  Location     Type
 15666 ;;		None
 15667 ;; Return value:  Size  Location     Type
 15668 ;;                  1    wreg      void 
 15669 ;; Registers used:
 15670 ;;		wreg, status,2, status,0
 15671 ;; Tracked objects:
 15672 ;;		On entry : 0/0
 15673 ;;		On exit  : 0/0
 15674 ;;		Unchanged: 0/0
 15675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15676 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15678 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15679 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15680 ;;Total ram usage:        6 bytes
 15681 ;; Hardware stack levels used:    1
 15682 ;; Hardware stack levels required when called:    3
 15683 ;; This function calls:
 15684 ;;		Nothing
 15685 ;; This function is called by:
 15686 ;;		_set_error_state
 15687 ;;		_audio_jack_process
 15688 ;;		i1_i2c_write
 15689 ;; This function uses a non-reentrant model
 15690 ;;
 15691                           
 15692                           	psect	text90
 15693  002E9E                     __ptext90:
 15694                           	opt stack 0
 15695  002E9E                     i1_set_status_led:
 15696                           	opt stack 13
 15697                           
 15698                           ;pwm.c: 79: if(curr_stat == ERROR && !error_override)
 15699                           
 15700                           ; BSR set to: 15
 15701                           ;incstack = 0
 15702  002E9E  0100               	movlb	0	; () banked
 15703  002EA0  51D4               	movf	_curr_stat& (0+255),w,b	;volatile
 15704  002EA2  0100               	movlb	0	; () banked
 15705  002EA4  11D5               	iorwf	(_curr_stat+1)& (0+255),w,b	;volatile
 15706  002EA6  A4D8               	btfss	status,2,c
 15707  002EA8  D053               	goto	i1l203
 15708                           
 15709                           ; BSR set to: 0
 15710  002EAA  501F               	movf	i1set_status_led@error_override,w,c
 15711  002EAC  1020               	iorwf	i1set_status_led@error_override+1,w,c
 15712  002EAE  B4D8               	btfsc	status,2,c
 15713  002EB0  0012               	return	
 15714  002EB2  D04E               	goto	i1l203
 15715  002EB4                     
 15716                           ;pwm.c: 85: r_cnt = 5; g_cnt = 5; b_cnt = 0;
 15717                           
 15718                           ; BSR set to: 0
 15719  002EB4  0E00               	movlw	0
 15720  002EB6  6E42               	movwf	_r_cnt+1,c	;volatile
 15721  002EB8  0E05               	movlw	5
 15722  002EBA  6E41               	movwf	_r_cnt,c	;volatile
 15723  002EBC  0E00               	movlw	0
 15724  002EBE  6E3E               	movwf	_g_cnt+1,c	;volatile
 15725  002EC0  0E05               	movlw	5
 15726  002EC2  6E3D               	movwf	_g_cnt,c	;volatile
 15727  002EC4  0E00               	movlw	0
 15728  002EC6  6E3A               	movwf	_b_cnt+1,c	;volatile
 15729  002EC8  0E00               	movlw	0
 15730  002ECA  6E39               	movwf	_b_cnt,c	;volatile
 15731                           
 15732                           ;pwm.c: 86: break;
 15733  002ECC  0012               	return	
 15734  002ECE                     
 15735                           ;pwm.c: 88: r_cnt = 7; g_cnt = 3; b_cnt = 0;
 15736  002ECE  0E00               	movlw	0
 15737  002ED0  6E42               	movwf	_r_cnt+1,c	;volatile
 15738  002ED2  0E07               	movlw	7
 15739  002ED4  6E41               	movwf	_r_cnt,c	;volatile
 15740  002ED6  0E00               	movlw	0
 15741  002ED8  6E3E               	movwf	_g_cnt+1,c	;volatile
 15742  002EDA  0E03               	movlw	3
 15743  002EDC  6E3D               	movwf	_g_cnt,c	;volatile
 15744  002EDE  0E00               	movlw	0
 15745  002EE0  6E3A               	movwf	_b_cnt+1,c	;volatile
 15746  002EE2  0E00               	movlw	0
 15747  002EE4  6E39               	movwf	_b_cnt,c	;volatile
 15748                           
 15749                           ;pwm.c: 89: break;
 15750  002EE6  0012               	return	
 15751  002EE8                     
 15752                           ;pwm.c: 91: r_cnt = 4; g_cnt = 0; b_cnt = 6;
 15753  002EE8  0E00               	movlw	0
 15754  002EEA  6E42               	movwf	_r_cnt+1,c	;volatile
 15755  002EEC  0E04               	movlw	4
 15756  002EEE  6E41               	movwf	_r_cnt,c	;volatile
 15757  002EF0  0E00               	movlw	0
 15758  002EF2  6E3E               	movwf	_g_cnt+1,c	;volatile
 15759  002EF4  0E00               	movlw	0
 15760  002EF6  6E3D               	movwf	_g_cnt,c	;volatile
 15761  002EF8  0E00               	movlw	0
 15762  002EFA  6E3A               	movwf	_b_cnt+1,c	;volatile
 15763  002EFC  0E06               	movlw	6
 15764  002EFE  6E39               	movwf	_b_cnt,c	;volatile
 15765                           
 15766                           ;pwm.c: 92: break;
 15767  002F00  0012               	return	
 15768  002F02                     
 15769                           ;pwm.c: 94: r_cnt = 0; g_cnt = 10; b_cnt = 0;
 15770  002F02  0E00               	movlw	0
 15771  002F04  6E42               	movwf	_r_cnt+1,c	;volatile
 15772  002F06  0E00               	movlw	0
 15773  002F08  6E41               	movwf	_r_cnt,c	;volatile
 15774  002F0A  0E00               	movlw	0
 15775  002F0C  6E3E               	movwf	_g_cnt+1,c	;volatile
 15776  002F0E  0E0A               	movlw	10
 15777  002F10  6E3D               	movwf	_g_cnt,c	;volatile
 15778  002F12  0E00               	movlw	0
 15779  002F14  6E3A               	movwf	_b_cnt+1,c	;volatile
 15780  002F16  0E00               	movlw	0
 15781  002F18  6E39               	movwf	_b_cnt,c	;volatile
 15782                           
 15783                           ;pwm.c: 95: break;
 15784  002F1A  0012               	return	
 15785  002F1C                     
 15786                           ;pwm.c: 97: r_cnt = 0; g_cnt = 0; b_cnt = 10;
 15787  002F1C  0E00               	movlw	0
 15788  002F1E  6E42               	movwf	_r_cnt+1,c	;volatile
 15789  002F20  0E00               	movlw	0
 15790  002F22  6E41               	movwf	_r_cnt,c	;volatile
 15791  002F24  0E00               	movlw	0
 15792  002F26  6E3E               	movwf	_g_cnt+1,c	;volatile
 15793  002F28  0E00               	movlw	0
 15794  002F2A  6E3D               	movwf	_g_cnt,c	;volatile
 15795  002F2C  0E00               	movlw	0
 15796  002F2E  6E3A               	movwf	_b_cnt+1,c	;volatile
 15797  002F30  0E0A               	movlw	10
 15798  002F32  6E39               	movwf	_b_cnt,c	;volatile
 15799                           
 15800                           ;pwm.c: 98: break;
 15801  002F34  0012               	return	
 15802  002F36                     
 15803                           ;pwm.c: 100: r_cnt = 10; g_cnt = 0; b_cnt = 0;
 15804  002F36  0E00               	movlw	0
 15805  002F38  6E42               	movwf	_r_cnt+1,c	;volatile
 15806  002F3A  0E0A               	movlw	10
 15807  002F3C  6E41               	movwf	_r_cnt,c	;volatile
 15808  002F3E  0E00               	movlw	0
 15809  002F40  6E3E               	movwf	_g_cnt+1,c	;volatile
 15810  002F42  0E00               	movlw	0
 15811  002F44  6E3D               	movwf	_g_cnt,c	;volatile
 15812  002F46  0E00               	movlw	0
 15813  002F48  6E3A               	movwf	_b_cnt+1,c	;volatile
 15814  002F4A  0E00               	movlw	0
 15815  002F4C  6E39               	movwf	_b_cnt,c	;volatile
 15816                           
 15817                           ;pwm.c: 102: }
 15818                           
 15819                           ;pwm.c: 101: break;
 15820  002F4E  0012               	return	
 15821  002F50                     i1l203:
 15822  002F50  C01D  F021         	movff	i1set_status_led@status,??i1_set_status_led
 15823  002F54  C01E  F022         	movff	i1set_status_led@status+1,??i1_set_status_led+1
 15824                           
 15825                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 15826                           ; Switch size 1, requested type "space"
 15827                           ; Number of cases is 1, Range of values is 0 to 0
 15828                           ; switch strategies available:
 15829                           ; Name         Instructions Cycles
 15830                           ; simple_byte            4     3 (average)
 15831                           ;	Chosen strategy is simple_byte
 15832  002F58  5022               	movf	??i1_set_status_led+1,w,c
 15833  002F5A  0A00               	xorlw	0	; case 0
 15834  002F5C  A4D8               	btfss	status,2,c
 15835  002F5E  D7EB               	goto	i1l210
 15836                           
 15837                           ; Switch size 1, requested type "space"
 15838                           ; Number of cases is 5, Range of values is 1 to 5
 15839                           ; switch strategies available:
 15840                           ; Name         Instructions Cycles
 15841                           ; simple_byte           16     9 (average)
 15842                           ;	Chosen strategy is simple_byte
 15843  002F60  5021               	movf	??i1_set_status_led,w,c
 15844  002F62  0A01               	xorlw	1	; case 1
 15845  002F64  B4D8               	btfsc	status,2,c
 15846  002F66  D7A6               	goto	i1l204
 15847  002F68  0A03               	xorlw	3	; case 2
 15848  002F6A  B4D8               	btfsc	status,2,c
 15849  002F6C  D7B0               	goto	i1l206
 15850  002F6E  0A01               	xorlw	1	; case 3
 15851  002F70  B4D8               	btfsc	status,2,c
 15852  002F72  D7BA               	goto	i1l207
 15853  002F74  0A07               	xorlw	7	; case 4
 15854  002F76  B4D8               	btfsc	status,2,c
 15855  002F78  D7C4               	goto	i1l208
 15856  002F7A  0A01               	xorlw	1	; case 5
 15857  002F7C  B4D8               	btfsc	status,2,c
 15858  002F7E  D7CE               	goto	i1l209
 15859  002F80  D7DA               	goto	i1l210
 15860  002F82                     __end_ofi1_set_status_led:
 15861                           	opt stack 0
 15862                           pclatu	equ	0xFFB
 15863                           pclath	equ	0xFFA
 15864                           tblptru	equ	0xFF8
 15865                           tblptrh	equ	0xFF7
 15866                           tblptrl	equ	0xFF6
 15867                           tablat	equ	0xFF5
 15868                           prodh	equ	0xFF4
 15869                           prodl	equ	0xFF3
 15870                           postinc0	equ	0xFEE
 15871                           fsr0h	equ	0xFEA
 15872                           fsr0l	equ	0xFE9
 15873                           wreg	equ	0xFE8
 15874                           postdec1	equ	0xFE5
 15875                           fsr1h	equ	0xFE2
 15876                           fsr1l	equ	0xFE1
 15877                           bsr	equ	0xFE0
 15878                           indf2	equ	0xFDF
 15879                           postinc2	equ	0xFDE
 15880                           postdec2	equ	0xFDD
 15881                           fsr2h	equ	0xFDA
 15882                           fsr2l	equ	0xFD9
 15883                           status	equ	0xFD8
 15884                           
 15885 ;; *************** function _high_pri_isr *****************
 15886 ;; Defined at:
 15887 ;;		line 133 in file "main.c"
 15888 ;; Parameters:    Size  Location     Type
 15889 ;;		None
 15890 ;; Auto vars:     Size  Location     Type
 15891 ;;		None
 15892 ;; Return value:  Size  Location     Type
 15893 ;;                  1    wreg      void 
 15894 ;; Registers used:
 15895 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15896 ;; Tracked objects:
 15897 ;;		On entry : 0/0
 15898 ;;		On exit  : 0/0
 15899 ;;		Unchanged: 0/0
 15900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 15901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15903 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15904 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 15905 ;;Total ram usage:       18 bytes
 15906 ;; Hardware stack levels used:    1
 15907 ;; Hardware stack levels required when called:    2
 15908 ;; This function calls:
 15909 ;;		_process_adc
 15910 ;;		_process_bt_serial
 15911 ;;		_process_usb_serial
 15912 ;;		_pwm_process
 15913 ;; This function is called by:
 15914 ;;		Interrupt level 2
 15915 ;; This function uses a non-reentrant model
 15916 ;;
 15917                           
 15918                           	psect	intcode
 15919  000008                     __pintcode:
 15920                           	opt stack 0
 15921  000008                     _high_pri_isr:
 15922                           	opt stack 12
 15923                           
 15924                           ;incstack = 0
 15925  000008  8243               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 15926  00000A  EF63  F019         	goto	int_func
 15927                           pclatu	equ	0xFFB
 15928                           pclath	equ	0xFFA
 15929                           tblptru	equ	0xFF8
 15930                           tblptrh	equ	0xFF7
 15931                           tblptrl	equ	0xFF6
 15932                           tablat	equ	0xFF5
 15933                           prodh	equ	0xFF4
 15934                           prodl	equ	0xFF3
 15935                           postinc0	equ	0xFEE
 15936                           fsr0h	equ	0xFEA
 15937                           fsr0l	equ	0xFE9
 15938                           wreg	equ	0xFE8
 15939                           postdec1	equ	0xFE5
 15940                           fsr1h	equ	0xFE2
 15941                           fsr1l	equ	0xFE1
 15942                           bsr	equ	0xFE0
 15943                           indf2	equ	0xFDF
 15944                           postinc2	equ	0xFDE
 15945                           postdec2	equ	0xFDD
 15946                           fsr2h	equ	0xFDA
 15947                           fsr2l	equ	0xFD9
 15948                           status	equ	0xFD8
 15949                           
 15950                           	psect	intcode_body
 15951  0032C6                     __pintcode_body:
 15952                           	opt stack 12
 15953  0032C6                     int_func:
 15954                           	opt stack 12
 15955  0032C6  CFFA F00B          	movff	pclath,??_high_pri_isr
 15956  0032CA  CFFB F00C          	movff	pclatu,??_high_pri_isr+1
 15957  0032CE  CFE9 F00D          	movff	fsr0l,??_high_pri_isr+2
 15958  0032D2  CFEA F00E          	movff	fsr0h,??_high_pri_isr+3
 15959  0032D6  CFE1 F00F          	movff	fsr1l,??_high_pri_isr+4
 15960  0032DA  CFE2 F010          	movff	fsr1h,??_high_pri_isr+5
 15961  0032DE  CFD9 F011          	movff	fsr2l,??_high_pri_isr+6
 15962  0032E2  CFDA F012          	movff	fsr2h,??_high_pri_isr+7
 15963  0032E6  CFF3 F013          	movff	prodl,??_high_pri_isr+8
 15964  0032EA  CFF4 F014          	movff	prodh,??_high_pri_isr+9
 15965  0032EE  CFF6 F015          	movff	tblptrl,??_high_pri_isr+10
 15966  0032F2  CFF7 F016          	movff	tblptrh,??_high_pri_isr+11
 15967  0032F6  CFF8 F017          	movff	tblptru,??_high_pri_isr+12
 15968  0032FA  CFF5 F018          	movff	tablat,??_high_pri_isr+13
 15969  0032FE  C043  F019         	movff	btemp,??_high_pri_isr+14
 15970  003302  C044  F01A         	movff	btemp+1,??_high_pri_isr+15
 15971  003306  C045  F01B         	movff	btemp+2,??_high_pri_isr+16
 15972  00330A  C046  F01C         	movff	btemp+3,??_high_pri_isr+17
 15973                           
 15974                           ;main.c: 137: if(PIR3bits.RC2IF)
 15975  00330E  010E               	movlb	14	; () banked
 15976  003310  BFCD               	btfsc	205,7,b	;volatile
 15977                           
 15978                           ; BSR set to: 14
 15979                           ;main.c: 138: process_usb_serial();
 15980  003312  EC0D  F022         	call	_process_usb_serial	;wreg free
 15981                           
 15982                           ;main.c: 141: if(PIR3bits.RC1IF)
 15983  003316  010E               	movlb	14	; () banked
 15984  003318  BBCD               	btfsc	205,5,b	;volatile
 15985                           
 15986                           ; BSR set to: 14
 15987                           ;main.c: 142: process_bt_serial();
 15988  00331A  EC63  F024         	call	_process_bt_serial	;wreg free
 15989                           
 15990                           ;main.c: 145: if(PIR1bits.ADIF)
 15991  00331E  010E               	movlb	14	; () banked
 15992  003320  B1CB               	btfsc	203,0,b	;volatile
 15993                           
 15994                           ; BSR set to: 14
 15995                           ;main.c: 146: process_adc();
 15996  003322  EC43  F01E         	call	_process_adc	;wreg free
 15997                           
 15998                           ;main.c: 149: if(PIR0bits.TMR0IF)
 15999  003326  010E               	movlb	14	; () banked
 16000  003328  BBCA               	btfsc	202,5,b	;volatile
 16001                           
 16002                           ; BSR set to: 14
 16003                           ;main.c: 150: pwm_process();
 16004  00332A  EC98  F011         	call	_pwm_process	;wreg free
 16005  00332E  C01C  F046         	movff	??_high_pri_isr+17,btemp+3
 16006  003332  C01B  F045         	movff	??_high_pri_isr+16,btemp+2
 16007  003336  C01A  F044         	movff	??_high_pri_isr+15,btemp+1
 16008  00333A  C019  F043         	movff	??_high_pri_isr+14,btemp
 16009  00333E  C018  FFF5         	movff	??_high_pri_isr+13,tablat
 16010  003342  C017  FFF8         	movff	??_high_pri_isr+12,tblptru
 16011  003346  C016  FFF7         	movff	??_high_pri_isr+11,tblptrh
 16012  00334A  C015  FFF6         	movff	??_high_pri_isr+10,tblptrl
 16013  00334E  C014  FFF4         	movff	??_high_pri_isr+9,prodh
 16014  003352  C013  FFF3         	movff	??_high_pri_isr+8,prodl
 16015  003356  C012  FFDA         	movff	??_high_pri_isr+7,fsr2h
 16016  00335A  C011  FFD9         	movff	??_high_pri_isr+6,fsr2l
 16017  00335E  C010  FFE2         	movff	??_high_pri_isr+5,fsr1h
 16018  003362  C00F  FFE1         	movff	??_high_pri_isr+4,fsr1l
 16019  003366  C00E  FFEA         	movff	??_high_pri_isr+3,fsr0h
 16020  00336A  C00D  FFE9         	movff	??_high_pri_isr+2,fsr0l
 16021  00336E  C00C  FFFB         	movff	??_high_pri_isr+1,pclatu
 16022  003372  C00B  FFFA         	movff	??_high_pri_isr,pclath
 16023  003376  9243               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 16024  003378  0011               	retfie		f
 16025  00337A                     __end_of_high_pri_isr:
 16026                           	opt stack 0
 16027                           pclatu	equ	0xFFB
 16028                           pclath	equ	0xFFA
 16029                           tblptru	equ	0xFF8
 16030                           tblptrh	equ	0xFF7
 16031                           tblptrl	equ	0xFF6
 16032                           tablat	equ	0xFF5
 16033                           prodh	equ	0xFF4
 16034                           prodl	equ	0xFF3
 16035                           postinc0	equ	0xFEE
 16036                           fsr0h	equ	0xFEA
 16037                           fsr0l	equ	0xFE9
 16038                           wreg	equ	0xFE8
 16039                           postdec1	equ	0xFE5
 16040                           fsr1h	equ	0xFE2
 16041                           fsr1l	equ	0xFE1
 16042                           bsr	equ	0xFE0
 16043                           indf2	equ	0xFDF
 16044                           postinc2	equ	0xFDE
 16045                           postdec2	equ	0xFDD
 16046                           fsr2h	equ	0xFDA
 16047                           fsr2l	equ	0xFD9
 16048                           status	equ	0xFD8
 16049                           
 16050 ;; *************** function _pwm_process *****************
 16051 ;; Defined at:
 16052 ;;		line 48 in file "pwm.c"
 16053 ;; Parameters:    Size  Location     Type
 16054 ;;		None
 16055 ;; Auto vars:     Size  Location     Type
 16056 ;;		None
 16057 ;; Return value:  Size  Location     Type
 16058 ;;                  1    wreg      void 
 16059 ;; Registers used:
 16060 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16061 ;; Tracked objects:
 16062 ;;		On entry : 0/0
 16063 ;;		On exit  : 0/0
 16064 ;;		Unchanged: 0/0
 16065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16067 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16068 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16069 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16070 ;;Total ram usage:        4 bytes
 16071 ;; Hardware stack levels used:    1
 16072 ;; Hardware stack levels required when called:    1
 16073 ;; This function calls:
 16074 ;;		i2___wmul
 16075 ;; This function is called by:
 16076 ;;		_high_pri_isr
 16077 ;; This function uses a non-reentrant model
 16078 ;;
 16079                           
 16080                           	psect	text92
 16081  002330                     __ptext92:
 16082                           	opt stack 0
 16083  002330                     _pwm_process:
 16084                           	opt stack 12
 16085                           
 16086                           ;pwm.c: 53: PORTAbits.RA7 = ~(curr_r_cnt-- > 0);
 16087                           
 16088                           ;incstack = 0
 16089  002330  BE40               	btfsc	_curr_r_cnt+1,7,c	;volatile
 16090  002332  D007               	goto	i2u497_40
 16091  002334  5040               	movf	_curr_r_cnt+1,w,c	;volatile
 16092  002336  E103               	bnz	i2u497_41
 16093  002338  043F               	decf	_curr_r_cnt,w,c	;volatile
 16094  00233A  A0D8               	btfss	status,0,c
 16095  00233C  D002               	goto	i2u497_40
 16096  00233E                     i2u497_41:
 16097  00233E  0E01               	movlw	1
 16098  002340  D001               	goto	i2u498_40
 16099  002342                     i2u497_40:
 16100  002342  0E00               	movlw	0
 16101  002344                     i2u498_40:
 16102  002344  0AFF               	xorlw	255
 16103  002346  6E07               	movwf	??_pwm_process& (0+255),c
 16104  002348  3207               	rrcf	??_pwm_process,f,c
 16105  00234A  3207               	rrcf	??_pwm_process,f,c
 16106  00234C  508D               	movf	3981,w,c	;volatile
 16107  00234E  1807               	xorwf	??_pwm_process,w,c
 16108  002350  0B7F               	andlw	-129
 16109  002352  1807               	xorwf	??_pwm_process,w,c
 16110  002354  6E8D               	movwf	3981,c	;volatile
 16111  002356  063F               	decf	_curr_r_cnt,f,c	;volatile
 16112  002358  A0D8               	btfss	status,0,c
 16113  00235A  0640               	decf	_curr_r_cnt+1,f,c	;volatile
 16114                           
 16115                           ;pwm.c: 54: PORTAbits.RA6 = ~(curr_r_cnt < 0 && curr_g_cnt-- > 0);
 16116  00235C  0E00               	movlw	0
 16117  00235E  6E09               	movwf	_pwm_process$892,c
 16118  002360  AE40               	btfss	_curr_r_cnt+1,7,c	;volatile
 16119  002362  D011               	goto	i2l194
 16120  002364  503B               	movf	_curr_g_cnt,w,c	;volatile
 16121  002366  6E07               	movwf	??_pwm_process& (0+255),c
 16122  002368  503C               	movf	_curr_g_cnt+1,w,c	;volatile
 16123  00236A  6E08               	movwf	(??_pwm_process+1)& (0+255),c
 16124  00236C  0E01               	movlw	1
 16125  00236E  5E3B               	subwf	_curr_g_cnt,f,c	;volatile
 16126  002370  0E00               	movlw	0
 16127  002372  5A3C               	subwfb	_curr_g_cnt+1,f,c	;volatile
 16128  002374  BE08               	btfsc	??_pwm_process+1,7,c
 16129  002376  D007               	goto	i2l194
 16130  002378  5008               	movf	??_pwm_process+1,w,c
 16131  00237A  E103               	bnz	i2u500_40
 16132  00237C  0407               	decf	??_pwm_process,w,c
 16133  00237E  A0D8               	btfss	status,0,c
 16134  002380  D002               	goto	i2l194
 16135  002382                     i2u500_40:
 16136  002382  0E01               	movlw	1
 16137  002384  6E09               	movwf	_pwm_process$892,c
 16138  002386                     i2l194:
 16139  002386  5009               	movf	_pwm_process$892,w,c
 16140  002388  0AFF               	xorlw	255
 16141  00238A  6E07               	movwf	??_pwm_process& (0+255),c
 16142  00238C  3A07               	swapf	??_pwm_process,f,c
 16143  00238E  4607               	rlncf	??_pwm_process,f,c
 16144  002390  4607               	rlncf	??_pwm_process,f,c
 16145  002392  508D               	movf	3981,w,c	;volatile
 16146  002394  1807               	xorwf	??_pwm_process,w,c
 16147  002396  0BBF               	andlw	-65
 16148  002398  1807               	xorwf	??_pwm_process,w,c
 16149  00239A  6E8D               	movwf	3981,c	;volatile
 16150                           
 16151                           ;pwm.c: 55: PORTCbits.RC0 = ~(curr_r_cnt < 0 && curr_g_cnt < 0 && curr_b_cnt-- > 0);
 16152  00239C  0E00               	movlw	0
 16153  00239E  6E0A               	movwf	_pwm_process$893,c
 16154  0023A0  BE40               	btfsc	_curr_r_cnt+1,7,c	;volatile
 16155  0023A2  AE3C               	btfss	_curr_g_cnt+1,7,c	;volatile
 16156  0023A4  D011               	goto	i2l196
 16157  0023A6  5037               	movf	_curr_b_cnt,w,c	;volatile
 16158  0023A8  6E07               	movwf	??_pwm_process& (0+255),c
 16159  0023AA  5038               	movf	_curr_b_cnt+1,w,c	;volatile
 16160  0023AC  6E08               	movwf	(??_pwm_process+1)& (0+255),c
 16161  0023AE  0E01               	movlw	1
 16162  0023B0  5E37               	subwf	_curr_b_cnt,f,c	;volatile
 16163  0023B2  0E00               	movlw	0
 16164  0023B4  5A38               	subwfb	_curr_b_cnt+1,f,c	;volatile
 16165  0023B6  BE08               	btfsc	??_pwm_process+1,7,c
 16166  0023B8  D007               	goto	i2l196
 16167  0023BA  5008               	movf	??_pwm_process+1,w,c
 16168  0023BC  E103               	bnz	i2u503_40
 16169  0023BE  0407               	decf	??_pwm_process,w,c
 16170  0023C0  A0D8               	btfss	status,0,c
 16171  0023C2  D002               	goto	i2l196
 16172  0023C4                     i2u503_40:
 16173  0023C4  0E01               	movlw	1
 16174  0023C6  6E0A               	movwf	_pwm_process$893,c
 16175  0023C8                     i2l196:
 16176  0023C8  500A               	movf	_pwm_process$893,w,c
 16177  0023CA  0AFF               	xorlw	255
 16178  0023CC  6E07               	movwf	??_pwm_process& (0+255),c
 16179  0023CE  508F               	movf	3983,w,c	;volatile
 16180  0023D0  1807               	xorwf	??_pwm_process,w,c
 16181  0023D2  0BFE               	andlw	-2
 16182  0023D4  1807               	xorwf	??_pwm_process,w,c
 16183  0023D6  6E8F               	movwf	3983,c	;volatile
 16184                           
 16185                           ;pwm.c: 58: if(curr_r_cnt <= 0 && curr_g_cnt <= 0 && curr_b_cnt <= 0)
 16186  0023D8  BE40               	btfsc	_curr_r_cnt+1,7,c	;volatile
 16187  0023DA  D005               	goto	i2u504_40
 16188  0023DC  5040               	movf	_curr_r_cnt+1,w,c	;volatile
 16189  0023DE  E11D               	bnz	i2l4369
 16190  0023E0  043F               	decf	_curr_r_cnt,w,c	;volatile
 16191  0023E2  B0D8               	btfsc	status,0,c
 16192  0023E4  D01A               	goto	i2l197
 16193  0023E6                     i2u504_40:
 16194  0023E6  BE3C               	btfsc	_curr_g_cnt+1,7,c	;volatile
 16195  0023E8  D005               	goto	i2u505_40
 16196  0023EA  503C               	movf	_curr_g_cnt+1,w,c	;volatile
 16197  0023EC  E116               	bnz	i2l4369
 16198  0023EE  043B               	decf	_curr_g_cnt,w,c	;volatile
 16199  0023F0  B0D8               	btfsc	status,0,c
 16200  0023F2  D013               	goto	i2l197
 16201  0023F4                     i2u505_40:
 16202  0023F4  BE38               	btfsc	_curr_b_cnt+1,7,c	;volatile
 16203  0023F6  D005               	goto	i2u506_40
 16204  0023F8  5038               	movf	_curr_b_cnt+1,w,c	;volatile
 16205  0023FA  E10F               	bnz	i2l4369
 16206  0023FC  0437               	decf	_curr_b_cnt,w,c	;volatile
 16207  0023FE  B0D8               	btfsc	status,0,c
 16208  002400  D00C               	goto	i2l197
 16209  002402                     i2u506_40:
 16210                           
 16211                           ;pwm.c: 59: {
 16212                           ;pwm.c: 60: curr_r_cnt = r_cnt;
 16213  002402  C041  F03F         	movff	_r_cnt,_curr_r_cnt	;volatile
 16214  002406  C042  F040         	movff	_r_cnt+1,_curr_r_cnt+1	;volatile
 16215                           
 16216                           ;pwm.c: 61: curr_g_cnt = g_cnt;
 16217  00240A  C03D  F03B         	movff	_g_cnt,_curr_g_cnt	;volatile
 16218  00240E  C03E  F03C         	movff	_g_cnt+1,_curr_g_cnt+1	;volatile
 16219                           
 16220                           ;pwm.c: 62: curr_b_cnt = b_cnt;
 16221  002412  C039  F037         	movff	_b_cnt,_curr_b_cnt	;volatile
 16222  002416  C03A  F038         	movff	_b_cnt+1,_curr_b_cnt+1	;volatile
 16223  00241A                     i2l197:
 16224  00241A                     i2l4369:
 16225                           
 16226                           ;pwm.c: 63: }
 16227                           ;pwm.c: 67: PORTCbits.RC1 = ~(curr_bt_cnt++ < bt_cnt);
 16228  00241A  5035               	movf	_bt_cnt,w,c	;volatile
 16229  00241C  5C33               	subwf	_curr_bt_cnt,w,c	;volatile
 16230  00241E  5034               	movf	_curr_bt_cnt+1,w,c	;volatile
 16231  002420  0A80               	xorlw	128
 16232  002422  6E07               	movwf	??_pwm_process& (0+255),c
 16233  002424  5036               	movf	_bt_cnt+1,w,c	;volatile
 16234  002426  0A80               	xorlw	128
 16235  002428  5807               	subwfb	??_pwm_process& (0+255),w,c
 16236  00242A  B0D8               	btfsc	status,0,c
 16237  00242C  D002               	goto	i2u507_40
 16238  00242E  0E01               	movlw	1
 16239  002430  D001               	goto	i2u508_40
 16240  002432                     i2u507_40:
 16241  002432  0E00               	movlw	0
 16242  002434                     i2u508_40:
 16243  002434  0AFF               	xorlw	255
 16244  002436  6E08               	movwf	(??_pwm_process+1)& (0+255),c
 16245  002438  4608               	rlncf	??_pwm_process+1,f,c
 16246  00243A  508F               	movf	3983,w,c	;volatile
 16247  00243C  1808               	xorwf	??_pwm_process+1,w,c
 16248  00243E  0BFD               	andlw	-3
 16249  002440  1808               	xorwf	??_pwm_process+1,w,c
 16250  002442  6E8F               	movwf	3983,c	;volatile
 16251  002444  4A33               	infsnz	_curr_bt_cnt,f,c	;volatile
 16252  002446  2A34               	incf	_curr_bt_cnt+1,f,c	;volatile
 16253                           
 16254                           ;pwm.c: 68: curr_bt_cnt = curr_bt_cnt * (curr_bt_cnt < BTCNTMAX);
 16255  002448  0E03               	movlw	low _BTCNTMAX
 16256  00244A  6EF6               	movwf	tblptrl,c
 16257  00244C                     	if	1	;There is more than 1 active tblptr byte
 16258  00244C  0E0F               	movlw	high _BTCNTMAX
 16259  00244E  6EF7               	movwf	tblptrh,c
 16260  002450                     	endif
 16261  002450                     	if	1	;There are 3 active tblptr bytes
 16262  002450  0E00               	movlw	low (_BTCNTMAX shr (0+16))
 16263  002452  6EF8               	movwf	tblptru,c
 16264  002454                     	endif
 16265  002454  0009               	tblrd		*+
 16266  002456  50F5               	movf	tablat,w,c
 16267  002458  5C33               	subwf	_curr_bt_cnt,w,c	;volatile
 16268  00245A  5034               	movf	_curr_bt_cnt+1,w,c	;volatile
 16269  00245C  0A80               	xorlw	128
 16270  00245E  6E07               	movwf	??_pwm_process& (0+255),c
 16271  002460  0009               	tblrd		*+
 16272  002462  50F5               	movf	tablat,w,c
 16273  002464  0A80               	xorlw	128
 16274  002466  5807               	subwfb	??_pwm_process& (0+255),w,c
 16275  002468  B0D8               	btfsc	status,0,c
 16276  00246A  D002               	goto	i2u509_40
 16277  00246C  0E01               	movlw	1
 16278  00246E  D001               	goto	i2u510_40
 16279  002470                     i2u509_40:
 16280  002470  0E00               	movlw	0
 16281  002472                     i2u510_40:
 16282  002472  6E01               	movwf	i2___wmul@multiplier,c
 16283  002474  6A02               	clrf	i2___wmul@multiplier+1,c
 16284  002476  C033  F003         	movff	_curr_bt_cnt,i2___wmul@multiplicand	;volatile
 16285  00247A  C034  F004         	movff	_curr_bt_cnt+1,i2___wmul@multiplicand+1	;volatile
 16286  00247E  ECBB  F025         	call	i2___wmul	;wreg free
 16287  002482  C001  F033         	movff	?i2___wmul,_curr_bt_cnt	;volatile
 16288  002486  C002  F034         	movff	?i2___wmul+1,_curr_bt_cnt+1	;volatile
 16289                           
 16290                           ;pwm.c: 70: PIR0bits.TMR0IF = 0;
 16291  00248A  010E               	movlb	14	; () banked
 16292  00248C  9BCA               	bcf	202,5,b	;volatile
 16293                           
 16294                           ; BSR set to: 14
 16295  00248E  0012               	return		;funcret
 16296  002490                     __end_of_pwm_process:
 16297                           	opt stack 0
 16298                           pclatu	equ	0xFFB
 16299                           pclath	equ	0xFFA
 16300                           tblptru	equ	0xFF8
 16301                           tblptrh	equ	0xFF7
 16302                           tblptrl	equ	0xFF6
 16303                           tablat	equ	0xFF5
 16304                           prodh	equ	0xFF4
 16305                           prodl	equ	0xFF3
 16306                           postinc0	equ	0xFEE
 16307                           fsr0h	equ	0xFEA
 16308                           fsr0l	equ	0xFE9
 16309                           wreg	equ	0xFE8
 16310                           postdec1	equ	0xFE5
 16311                           fsr1h	equ	0xFE2
 16312                           fsr1l	equ	0xFE1
 16313                           bsr	equ	0xFE0
 16314                           indf2	equ	0xFDF
 16315                           postinc2	equ	0xFDE
 16316                           postdec2	equ	0xFDD
 16317                           fsr2h	equ	0xFDA
 16318                           fsr2l	equ	0xFD9
 16319                           status	equ	0xFD8
 16320                           
 16321 ;; *************** function i2___wmul *****************
 16322 ;; Defined at:
 16323 ;;		line 15 in file "/Applications/microchip/xc8/v1.43/sources/common/Umul16.c"
 16324 ;; Parameters:    Size  Location     Type
 16325 ;;  multiplier      2    0[COMRAM] unsigned int 
 16326 ;;  multiplicand    2    2[COMRAM] unsigned int 
 16327 ;; Auto vars:     Size  Location     Type
 16328 ;;  __wmul          2    4[COMRAM] unsigned int 
 16329 ;; Return value:  Size  Location     Type
 16330 ;;                  2    0[COMRAM] unsigned int 
 16331 ;; Registers used:
 16332 ;;		wreg, status,2, status,0, prodl, prodh
 16333 ;; Tracked objects:
 16334 ;;		On entry : 0/0
 16335 ;;		On exit  : 0/0
 16336 ;;		Unchanged: 0/0
 16337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16342 ;;Total ram usage:        6 bytes
 16343 ;; Hardware stack levels used:    1
 16344 ;; This function calls:
 16345 ;;		Nothing
 16346 ;; This function is called by:
 16347 ;;		_pwm_process
 16348 ;; This function uses a non-reentrant model
 16349 ;;
 16350                           
 16351                           	psect	text93
 16352  004B76                     __ptext93:
 16353                           	opt stack 0
 16354  004B76                     i2___wmul:
 16355                           	opt stack 12
 16356                           
 16357                           ; BSR set to: 14
 16358                           ;incstack = 0
 16359  004B76  5001               	movf	i2___wmul@multiplier,w,c
 16360  004B78  0203               	mulwf	i2___wmul@multiplicand,c
 16361  004B7A  CFF3 F005          	movff	prodl,i2___wmul@product
 16362  004B7E  CFF4 F006          	movff	prodh,i2___wmul@product+1
 16363  004B82  5001               	movf	i2___wmul@multiplier,w,c
 16364  004B84  0204               	mulwf	i2___wmul@multiplicand+1,c
 16365  004B86  50F3               	movf	prodl,w,c
 16366  004B88  2606               	addwf	i2___wmul@product+1,f,c
 16367  004B8A  5002               	movf	i2___wmul@multiplier+1,w,c
 16368  004B8C  0203               	mulwf	i2___wmul@multiplicand,c
 16369  004B8E  50F3               	movf	prodl,w,c
 16370  004B90  2606               	addwf	i2___wmul@product+1,f,c
 16371  004B92  C005  F001         	movff	i2___wmul@product,?i2___wmul
 16372  004B96  C006  F002         	movff	i2___wmul@product+1,?i2___wmul+1
 16373  004B9A  0012               	return	
 16374  004B9C                     __end_ofi2___wmul:
 16375                           	opt stack 0
 16376                           pclatu	equ	0xFFB
 16377                           pclath	equ	0xFFA
 16378                           tblptru	equ	0xFF8
 16379                           tblptrh	equ	0xFF7
 16380                           tblptrl	equ	0xFF6
 16381                           tablat	equ	0xFF5
 16382                           prodh	equ	0xFF4
 16383                           prodl	equ	0xFF3
 16384                           postinc0	equ	0xFEE
 16385                           fsr0h	equ	0xFEA
 16386                           fsr0l	equ	0xFE9
 16387                           wreg	equ	0xFE8
 16388                           postdec1	equ	0xFE5
 16389                           fsr1h	equ	0xFE2
 16390                           fsr1l	equ	0xFE1
 16391                           bsr	equ	0xFE0
 16392                           indf2	equ	0xFDF
 16393                           postinc2	equ	0xFDE
 16394                           postdec2	equ	0xFDD
 16395                           fsr2h	equ	0xFDA
 16396                           fsr2l	equ	0xFD9
 16397                           status	equ	0xFD8
 16398                           
 16399 ;; *************** function _process_usb_serial *****************
 16400 ;; Defined at:
 16401 ;;		line 349 in file "communication.c"
 16402 ;; Parameters:    Size  Location     Type
 16403 ;;		None
 16404 ;; Auto vars:     Size  Location     Type
 16405 ;;  data            1    0[COMRAM] unsigned char 
 16406 ;; Return value:  Size  Location     Type
 16407 ;;                  1    wreg      void 
 16408 ;; Registers used:
 16409 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16410 ;; Tracked objects:
 16411 ;;		On entry : 0/0
 16412 ;;		On exit  : 0/0
 16413 ;;		Unchanged: 0/0
 16414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16419 ;;Total ram usage:        1 bytes
 16420 ;; Hardware stack levels used:    1
 16421 ;; This function calls:
 16422 ;;		Nothing
 16423 ;; This function is called by:
 16424 ;;		_high_pri_isr
 16425 ;; This function uses a non-reentrant model
 16426 ;;
 16427                           
 16428                           	psect	text94
 16429  00441A                     __ptext94:
 16430                           	opt stack 0
 16431  00441A                     _process_usb_serial:
 16432                           	opt stack 13
 16433                           
 16434                           ;communication.c: 351: char data = RC2REG;
 16435                           
 16436                           ;incstack = 0
 16437  00441A  CE99 F001          	movff	3737,process_usb_serial@data	;volatile
 16438                           
 16439                           ;communication.c: 352: if(RC2STAbits.OERR)
 16440  00441E  010E               	movlb	14	; () banked
 16441  004420  A39D               	btfss	157,1,b	;volatile
 16442  004422  D004               	goto	i2l405
 16443                           
 16444                           ; BSR set to: 14
 16445                           ;communication.c: 353: {
 16446                           ;communication.c: 354: RC2STAbits.CREN = 0;
 16447  004424  010E               	movlb	14	; () banked
 16448  004426  999D               	bcf	157,4,b	;volatile
 16449                           
 16450                           ;communication.c: 355: RC2STAbits.CREN = 1;
 16451  004428  010E               	movlb	14	; () banked
 16452  00442A  899D               	bsf	157,4,b	;volatile
 16453  00442C                     i2l405:
 16454                           
 16455                           ; BSR set to: 14
 16456                           ;communication.c: 356: }
 16457                           ;communication.c: 357: usb_ser_str[usb_ser_str_cntr++] = data;
 16458                           
 16459                           ; BSR set to: 14
 16460  00442C  0E00               	movlw	low _usb_ser_str
 16461  00442E  242F               	addwf	_usb_ser_str_cntr,w,c
 16462  004430  6ED9               	movwf	fsr2l,c
 16463  004432  0E05               	movlw	high _usb_ser_str
 16464  004434  2030               	addwfc	_usb_ser_str_cntr+1,w,c
 16465  004436  6EDA               	movwf	fsr2h,c
 16466  004438  C001  FFDF         	movff	process_usb_serial@data,indf2
 16467                           
 16468                           ; BSR set to: 14
 16469  00443C  4A2F               	infsnz	_usb_ser_str_cntr,f,c
 16470  00443E  2A30               	incf	_usb_ser_str_cntr+1,f,c
 16471                           
 16472                           ; BSR set to: 14
 16473                           ;communication.c: 358: if(data == '\n' || data == '\r')
 16474  004440  0E0A               	movlw	10
 16475  004442  1801               	xorwf	process_usb_serial@data,w,c
 16476  004444  B4D8               	btfsc	status,2,c
 16477  004446  D004               	goto	i2u491_40
 16478                           
 16479                           ; BSR set to: 14
 16480  004448  0E0D               	movlw	13
 16481  00444A  1801               	xorwf	process_usb_serial@data,w,c
 16482  00444C  A4D8               	btfss	status,2,c
 16483  00444E  D003               	goto	i2l406
 16484  004450                     i2u491_40:
 16485                           
 16486                           ; BSR set to: 14
 16487                           ;communication.c: 359: {
 16488                           ;communication.c: 360: usb_str_ready++;
 16489                           
 16490                           ; BSR set to: 14
 16491  004450  0100               	movlb	0	; () banked
 16492  004452  4BB5               	infsnz	_usb_str_ready& (0+255),f,b
 16493  004454  2BB6               	incf	(_usb_str_ready+1)& (0+255),f,b
 16494  004456                     i2l406:
 16495                           
 16496                           ;communication.c: 361: }
 16497                           ;communication.c: 363: if(usb_ser_str_cntr >= 200 )
 16498                           
 16499                           ; BSR set to: 0
 16500  004456  5030               	movf	_usb_ser_str_cntr+1,w,c
 16501  004458  E104               	bnz	i2u492_40
 16502  00445A  0EC8               	movlw	200
 16503  00445C  5C2F               	subwf	_usb_ser_str_cntr,w,c
 16504  00445E  A0D8               	btfss	status,0,c
 16505  004460  0012               	return	
 16506  004462                     i2u492_40:
 16507                           
 16508                           ;communication.c: 364: {
 16509                           ;communication.c: 365: usb_ser_str_cntr = 0;
 16510  004462  0E00               	movlw	0
 16511  004464  6E30               	movwf	_usb_ser_str_cntr+1,c
 16512  004466  0E00               	movlw	0
 16513  004468  6E2F               	movwf	_usb_ser_str_cntr,c
 16514  00446A  0012               	return	
 16515  00446C                     __end_of_process_usb_serial:
 16516                           	opt stack 0
 16517                           pclatu	equ	0xFFB
 16518                           pclath	equ	0xFFA
 16519                           tblptru	equ	0xFF8
 16520                           tblptrh	equ	0xFF7
 16521                           tblptrl	equ	0xFF6
 16522                           tablat	equ	0xFF5
 16523                           prodh	equ	0xFF4
 16524                           prodl	equ	0xFF3
 16525                           postinc0	equ	0xFEE
 16526                           fsr0h	equ	0xFEA
 16527                           fsr0l	equ	0xFE9
 16528                           wreg	equ	0xFE8
 16529                           postdec1	equ	0xFE5
 16530                           fsr1h	equ	0xFE2
 16531                           fsr1l	equ	0xFE1
 16532                           bsr	equ	0xFE0
 16533                           indf2	equ	0xFDF
 16534                           postinc2	equ	0xFDE
 16535                           postdec2	equ	0xFDD
 16536                           fsr2h	equ	0xFDA
 16537                           fsr2l	equ	0xFD9
 16538                           status	equ	0xFD8
 16539                           
 16540 ;; *************** function _process_bt_serial *****************
 16541 ;; Defined at:
 16542 ;;		line 264 in file "communication.c"
 16543 ;; Parameters:    Size  Location     Type
 16544 ;;		None
 16545 ;; Auto vars:     Size  Location     Type
 16546 ;;  data            1    2[COMRAM] unsigned char 
 16547 ;; Return value:  Size  Location     Type
 16548 ;;                  1    wreg      void 
 16549 ;; Registers used:
 16550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16551 ;; Tracked objects:
 16552 ;;		On entry : 0/0
 16553 ;;		On exit  : 0/0
 16554 ;;		Unchanged: 0/0
 16555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16560 ;;Total ram usage:        1 bytes
 16561 ;; Hardware stack levels used:    1
 16562 ;; Hardware stack levels required when called:    1
 16563 ;; This function calls:
 16564 ;;		_bt_msg_received
 16565 ;; This function is called by:
 16566 ;;		_high_pri_isr
 16567 ;; This function uses a non-reentrant model
 16568 ;;
 16569                           
 16570                           	psect	text95
 16571  0048C6                     __ptext95:
 16572                           	opt stack 0
 16573  0048C6                     _process_bt_serial:
 16574                           	opt stack 12
 16575                           
 16576                           ;communication.c: 266: if(!bt_msg_received())
 16577                           
 16578                           ;incstack = 0
 16579  0048C6  ECEA  F025         	call	_bt_msg_received	;wreg free
 16580                           
 16581                           ;communication.c: 269: }
 16582                           ;communication.c: 271: char data = RC1REG;
 16583                           
 16584                           ;communication.c: 267: {
 16585  0048CA  CF99 F003          	movff	3993,process_bt_serial@data	;volatile
 16586                           
 16587                           ;communication.c: 272: if(RC1STAbits.OERR)
 16588  0048CE  A29D               	btfss	3997,1,c	;volatile
 16589  0048D0  D002               	goto	i2l372
 16590                           
 16591                           ;communication.c: 273: {
 16592                           ;communication.c: 274: RC1STAbits.CREN = 0;
 16593  0048D2  989D               	bcf	3997,4,c	;volatile
 16594                           
 16595                           ;communication.c: 275: RC1STAbits.CREN = 1;
 16596  0048D4  889D               	bsf	3997,4,c	;volatile
 16597  0048D6                     i2l372:
 16598                           
 16599                           ;communication.c: 276: }
 16600                           ;communication.c: 277: bt_ser_str[bt_ser_str_cntr++] = data;
 16601  0048D6  0E00               	movlw	low _bt_ser_str
 16602  0048D8  2431               	addwf	_bt_ser_str_cntr,w,c
 16603  0048DA  6ED9               	movwf	fsr2l,c
 16604  0048DC  0E04               	movlw	high _bt_ser_str
 16605  0048DE  2032               	addwfc	_bt_ser_str_cntr+1,w,c
 16606  0048E0  6EDA               	movwf	fsr2h,c
 16607  0048E2  C003  FFDF         	movff	process_bt_serial@data,indf2
 16608  0048E6  4A31               	infsnz	_bt_ser_str_cntr,f,c
 16609  0048E8  2A32               	incf	_bt_ser_str_cntr+1,f,c
 16610                           
 16611                           ;communication.c: 278: if(data == '\r')
 16612  0048EA  0E0D               	movlw	13
 16613  0048EC  1803               	xorwf	process_bt_serial@data,w,c
 16614  0048EE  A4D8               	btfss	status,2,c
 16615  0048F0  D003               	goto	i2l373
 16616                           
 16617                           ;communication.c: 279: {
 16618                           ;communication.c: 280: bt_str_ready++;
 16619  0048F2  0100               	movlb	0	; () banked
 16620  0048F4  4BB7               	infsnz	_bt_str_ready& (0+255),f,b
 16621  0048F6  2BB8               	incf	(_bt_str_ready+1)& (0+255),f,b
 16622  0048F8                     i2l373:
 16623                           
 16624                           ;communication.c: 281: }
 16625                           ;communication.c: 283: if(bt_ser_str_cntr >= 200 )
 16626                           
 16627                           ; BSR set to: 0
 16628  0048F8  5032               	movf	_bt_ser_str_cntr+1,w,c
 16629  0048FA  E104               	bnz	i2u495_40
 16630  0048FC  0EC8               	movlw	200
 16631  0048FE  5C31               	subwf	_bt_ser_str_cntr,w,c
 16632  004900  A0D8               	btfss	status,0,c
 16633  004902  0012               	return	
 16634  004904                     i2u495_40:
 16635                           
 16636                           ;communication.c: 284: {
 16637                           ;communication.c: 285: bt_ser_str_cntr = 0;
 16638  004904  0E00               	movlw	0
 16639  004906  6E32               	movwf	_bt_ser_str_cntr+1,c
 16640  004908  0E00               	movlw	0
 16641  00490A  6E31               	movwf	_bt_ser_str_cntr,c
 16642  00490C  0012               	return	
 16643  00490E                     __end_of_process_bt_serial:
 16644                           	opt stack 0
 16645                           pclatu	equ	0xFFB
 16646                           pclath	equ	0xFFA
 16647                           tblptru	equ	0xFF8
 16648                           tblptrh	equ	0xFF7
 16649                           tblptrl	equ	0xFF6
 16650                           tablat	equ	0xFF5
 16651                           prodh	equ	0xFF4
 16652                           prodl	equ	0xFF3
 16653                           postinc0	equ	0xFEE
 16654                           fsr0h	equ	0xFEA
 16655                           fsr0l	equ	0xFE9
 16656                           wreg	equ	0xFE8
 16657                           postdec1	equ	0xFE5
 16658                           fsr1h	equ	0xFE2
 16659                           fsr1l	equ	0xFE1
 16660                           bsr	equ	0xFE0
 16661                           indf2	equ	0xFDF
 16662                           postinc2	equ	0xFDE
 16663                           postdec2	equ	0xFDD
 16664                           fsr2h	equ	0xFDA
 16665                           fsr2l	equ	0xFD9
 16666                           status	equ	0xFD8
 16667                           
 16668 ;; *************** function _bt_msg_received *****************
 16669 ;; Defined at:
 16670 ;;		line 290 in file "communication.c"
 16671 ;; Parameters:    Size  Location     Type
 16672 ;;		None
 16673 ;; Auto vars:     Size  Location     Type
 16674 ;;		None
 16675 ;; Return value:  Size  Location     Type
 16676 ;;                  2    0[COMRAM] int 
 16677 ;; Registers used:
 16678 ;;		wreg, status,2, status,0
 16679 ;; Tracked objects:
 16680 ;;		On entry : 0/0
 16681 ;;		On exit  : 0/0
 16682 ;;		Unchanged: 0/0
 16683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16684 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16687 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16688 ;;Total ram usage:        2 bytes
 16689 ;; Hardware stack levels used:    1
 16690 ;; This function calls:
 16691 ;;		Nothing
 16692 ;; This function is called by:
 16693 ;;		_process_bt_serial
 16694 ;;		_transfer_bt
 16695 ;;		_get_bt_serial_str
 16696 ;; This function uses a non-reentrant model
 16697 ;;
 16698                           
 16699                           	psect	text96
 16700  004BD4                     __ptext96:
 16701                           	opt stack 0
 16702  004BD4                     _bt_msg_received:
 16703                           	opt stack 12
 16704                           
 16705                           ;communication.c: 292: return bt_str_ready > 0;
 16706                           
 16707                           ;incstack = 0
 16708  004BD4  0100               	movlb	0	; () banked
 16709  004BD6  51B7               	movf	_bt_str_ready& (0+255),w,b
 16710  004BD8  0100               	movlb	0	; () banked
 16711  004BDA  11B8               	iorwf	(_bt_str_ready+1)& (0+255),w,b
 16712  004BDC  B4D8               	btfsc	status,2,c
 16713  004BDE  D002               	goto	i2u420_40
 16714  004BE0  0E01               	movlw	1
 16715  004BE2  D001               	goto	i2u421_40
 16716  004BE4                     i2u420_40:
 16717  004BE4  0E00               	movlw	0
 16718  004BE6                     i2u421_40:
 16719  004BE6  6E01               	movwf	?_bt_msg_received,c
 16720  004BE8  6A02               	clrf	?_bt_msg_received+1,c
 16721  004BEA  0012               	return	
 16722  004BEC                     __end_of_bt_msg_received:
 16723                           	opt stack 0
 16724                           pclatu	equ	0xFFB
 16725                           pclath	equ	0xFFA
 16726                           tblptru	equ	0xFF8
 16727                           tblptrh	equ	0xFF7
 16728                           tblptrl	equ	0xFF6
 16729                           tablat	equ	0xFF5
 16730                           prodh	equ	0xFF4
 16731                           prodl	equ	0xFF3
 16732                           postinc0	equ	0xFEE
 16733                           fsr0h	equ	0xFEA
 16734                           fsr0l	equ	0xFE9
 16735                           wreg	equ	0xFE8
 16736                           postdec1	equ	0xFE5
 16737                           fsr1h	equ	0xFE2
 16738                           fsr1l	equ	0xFE1
 16739                           bsr	equ	0xFE0
 16740                           indf2	equ	0xFDF
 16741                           postinc2	equ	0xFDE
 16742                           postdec2	equ	0xFDD
 16743                           fsr2h	equ	0xFDA
 16744                           fsr2l	equ	0xFD9
 16745                           status	equ	0xFD8
 16746                           
 16747 ;; *************** function _process_adc *****************
 16748 ;; Defined at:
 16749 ;;		line 66 in file "adc.c"
 16750 ;; Parameters:    Size  Location     Type
 16751 ;;		None
 16752 ;; Auto vars:     Size  Location     Type
 16753 ;;		None
 16754 ;; Return value:  Size  Location     Type
 16755 ;;                  1    wreg      void 
 16756 ;; Registers used:
 16757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16758 ;; Tracked objects:
 16759 ;;		On entry : 0/0
 16760 ;;		On exit  : 0/0
 16761 ;;		Unchanged: 0/0
 16762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16765 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16766 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16767 ;;Total ram usage:        4 bytes
 16768 ;; Hardware stack levels used:    1
 16769 ;; Hardware stack levels required when called:    1
 16770 ;; This function calls:
 16771 ;;		_stop_adc
 16772 ;; This function is called by:
 16773 ;;		_high_pri_isr
 16774 ;; This function uses a non-reentrant model
 16775 ;;
 16776                           
 16777                           	psect	text97
 16778  003C86                     __ptext97:
 16779                           	opt stack 0
 16780  003C86                     _process_adc:
 16781                           	opt stack 12
 16782                           
 16783                           ;adc.c: 69: realNumbers[i++] = ((unsigned short)(ADRESH << 8) + (unsigned short)ADRESL) 
      +                          - 512;
 16784                           
 16785                           ; BSR set to: 0
 16786                           ;incstack = 0
 16787  003C86  0E00               	movlw	0
 16788  003C88  6E01               	movwf	??_process_adc& (0+255),c
 16789  003C8A  0EFE               	movlw	254
 16790  003C8C  6E02               	movwf	(??_process_adc+1)& (0+255),c
 16791  003C8E  5063               	movf	3939,w,c	;volatile
 16792  003C90  CF64 F003          	movff	3940,??_process_adc+2	;volatile
 16793  003C94  6A04               	clrf	(??_process_adc+3)& (0+255),c
 16794  003C96  C003  F004         	movff	??_process_adc+2,??_process_adc+3
 16795  003C9A  6A03               	clrf	??_process_adc+2,c
 16796  003C9C  2603               	addwf	??_process_adc+2,f,c
 16797  003C9E  0E00               	movlw	0
 16798  003CA0  2204               	addwfc	??_process_adc+3,f,c
 16799  003CA2  5001               	movf	??_process_adc,w,c
 16800  003CA4  2603               	addwf	??_process_adc+2,f,c
 16801  003CA6  5002               	movf	??_process_adc+1,w,c
 16802  003CA8  2204               	addwfc	??_process_adc+3,f,c
 16803  003CAA  90D8               	bcf	status,0,c
 16804  003CAC  0100               	movlb	0	; () banked
 16805  003CAE  35B3               	rlcf	_i& (0+255),w,b
 16806  003CB0  6ED9               	movwf	fsr2l,c
 16807  003CB2  0100               	movlb	0	; () banked
 16808  003CB4  35B4               	rlcf	(_i+1)& (0+255),w,b
 16809  003CB6  6EDA               	movwf	fsr2h,c
 16810  003CB8  0E00               	movlw	low _realNumbers
 16811  003CBA  26D9               	addwf	fsr2l,f,c
 16812  003CBC  0E03               	movlw	high _realNumbers
 16813  003CBE  22DA               	addwfc	fsr2h,f,c
 16814  003CC0  C003  FFDE         	movff	??_process_adc+2,postinc2
 16815  003CC4  C004  FFDD         	movff	??_process_adc+3,postdec2
 16816                           
 16817                           ; BSR set to: 0
 16818  003CC8  0100               	movlb	0	; () banked
 16819  003CCA  4BB3               	infsnz	_i& (0+255),f,b
 16820  003CCC  2BB4               	incf	(_i+1)& (0+255),f,b
 16821                           
 16822                           ; BSR set to: 0
 16823                           ;adc.c: 70: if(i >= 64)
 16824  003CCE  0100               	movlb	0	; () banked
 16825  003CD0  BFB4               	btfsc	(_i+1)& (0+255),7,b
 16826  003CD2  D00F               	goto	i2l472
 16827  003CD4  0100               	movlb	0	; () banked
 16828  003CD6  51B4               	movf	(_i+1)& (0+255),w,b
 16829  003CD8  E105               	bnz	i2u496_40
 16830  003CDA  0E40               	movlw	64
 16831  003CDC  0100               	movlb	0	; () banked
 16832  003CDE  5DB3               	subwf	_i& (0+255),w,b
 16833  003CE0  A0D8               	btfss	status,0,c
 16834  003CE2  D007               	goto	i2l472
 16835  003CE4                     i2u496_40:
 16836                           
 16837                           ; BSR set to: 0
 16838                           ;adc.c: 71: {
 16839                           ;adc.c: 72: stop_adc();
 16840  003CE4  EC25  F026         	call	_stop_adc	;wreg free
 16841                           
 16842                           ;adc.c: 73: fft_ready = 1;
 16843  003CE8  0E00               	movlw	0
 16844  003CEA  0100               	movlb	0	; () banked
 16845  003CEC  6FB2               	movwf	(_fft_ready+1)& (0+255),b
 16846  003CEE  0E01               	movlw	1
 16847  003CF0  6FB1               	movwf	_fft_ready& (0+255),b
 16848  003CF2                     i2l472:
 16849                           
 16850                           ; BSR set to: 0
 16851                           ;adc.c: 74: }
 16852                           ;adc.c: 75: PIR1bits.ADIF = 0;
 16853                           
 16854                           ; BSR set to: 0
 16855  003CF2  010E               	movlb	14	; () banked
 16856  003CF4  91CB               	bcf	203,0,b	;volatile
 16857                           
 16858                           ; BSR set to: 14
 16859  003CF6  0012               	return		;funcret
 16860  003CF8                     __end_of_process_adc:
 16861                           	opt stack 0
 16862                           pclatu	equ	0xFFB
 16863                           pclath	equ	0xFFA
 16864                           tblptru	equ	0xFF8
 16865                           tblptrh	equ	0xFF7
 16866                           tblptrl	equ	0xFF6
 16867                           tablat	equ	0xFF5
 16868                           prodh	equ	0xFF4
 16869                           prodl	equ	0xFF3
 16870                           postinc0	equ	0xFEE
 16871                           fsr0h	equ	0xFEA
 16872                           fsr0l	equ	0xFE9
 16873                           wreg	equ	0xFE8
 16874                           postdec1	equ	0xFE5
 16875                           fsr1h	equ	0xFE2
 16876                           fsr1l	equ	0xFE1
 16877                           bsr	equ	0xFE0
 16878                           indf2	equ	0xFDF
 16879                           postinc2	equ	0xFDE
 16880                           postdec2	equ	0xFDD
 16881                           fsr2h	equ	0xFDA
 16882                           fsr2l	equ	0xFD9
 16883                           status	equ	0xFD8
 16884                           
 16885 ;; *************** function _stop_adc *****************
 16886 ;; Defined at:
 16887 ;;		line 61 in file "adc.c"
 16888 ;; Parameters:    Size  Location     Type
 16889 ;;		None
 16890 ;; Auto vars:     Size  Location     Type
 16891 ;;		None
 16892 ;; Return value:  Size  Location     Type
 16893 ;;                  1    wreg      void 
 16894 ;; Registers used:
 16895 ;;		None
 16896 ;; Tracked objects:
 16897 ;;		On entry : 0/0
 16898 ;;		On exit  : 0/0
 16899 ;;		Unchanged: 0/0
 16900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 16901 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16902 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16903 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16904 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 16905 ;;Total ram usage:        0 bytes
 16906 ;; Hardware stack levels used:    1
 16907 ;; This function calls:
 16908 ;;		Nothing
 16909 ;; This function is called by:
 16910 ;;		_process_adc
 16911 ;; This function uses a non-reentrant model
 16912 ;;
 16913                           
 16914                           	psect	text98
 16915  004C4A                     __ptext98:
 16916                           	opt stack 0
 16917  004C4A                     _stop_adc:
 16918                           	opt stack 12
 16919                           
 16920                           ;adc.c: 63: T1CONbits.ON = 0;
 16921                           
 16922                           ; BSR set to: 14
 16923                           ;incstack = 0
 16924  004C4A  90CF               	bcf	4047,0,c	;volatile
 16925  004C4C  0012               	return		;funcret
 16926  004C4E                     __end_of_stop_adc:
 16927                           	opt stack 0
 16928                           pclatu	equ	0xFFB
 16929                           pclath	equ	0xFFA
 16930                           tblptru	equ	0xFF8
 16931                           tblptrh	equ	0xFF7
 16932                           tblptrl	equ	0xFF6
 16933                           tablat	equ	0xFF5
 16934                           prodh	equ	0xFF4
 16935                           prodl	equ	0xFF3
 16936                           postinc0	equ	0xFEE
 16937                           fsr0h	equ	0xFEA
 16938                           fsr0l	equ	0xFE9
 16939                           wreg	equ	0xFE8
 16940                           postdec1	equ	0xFE5
 16941                           fsr1h	equ	0xFE2
 16942                           fsr1l	equ	0xFE1
 16943                           bsr	equ	0xFE0
 16944                           indf2	equ	0xFDF
 16945                           postinc2	equ	0xFDE
 16946                           postdec2	equ	0xFDD
 16947                           fsr2h	equ	0xFDA
 16948                           fsr2l	equ	0xFD9
 16949                           status	equ	0xFD8
 16950                           pclatu	equ	0xFFB
 16951                           pclath	equ	0xFFA
 16952                           tblptru	equ	0xFF8
 16953                           tblptrh	equ	0xFF7
 16954                           tblptrl	equ	0xFF6
 16955                           tablat	equ	0xFF5
 16956                           prodh	equ	0xFF4
 16957                           prodl	equ	0xFF3
 16958                           postinc0	equ	0xFEE
 16959                           fsr0h	equ	0xFEA
 16960                           fsr0l	equ	0xFE9
 16961                           wreg	equ	0xFE8
 16962                           postdec1	equ	0xFE5
 16963                           fsr1h	equ	0xFE2
 16964                           fsr1l	equ	0xFE1
 16965                           bsr	equ	0xFE0
 16966                           indf2	equ	0xFDF
 16967                           postinc2	equ	0xFDE
 16968                           postdec2	equ	0xFDD
 16969                           fsr2h	equ	0xFDA
 16970                           fsr2l	equ	0xFD9
 16971                           status	equ	0xFD8
 16972                           
 16973                           	psect	rparam
 16974  0000                     pclatu	equ	0xFFB
 16975                           pclath	equ	0xFFA
 16976                           tblptru	equ	0xFF8
 16977                           tblptrh	equ	0xFF7
 16978                           tblptrl	equ	0xFF6
 16979                           tablat	equ	0xFF5
 16980                           prodh	equ	0xFF4
 16981                           prodl	equ	0xFF3
 16982                           postinc0	equ	0xFEE
 16983                           fsr0h	equ	0xFEA
 16984                           fsr0l	equ	0xFE9
 16985                           wreg	equ	0xFE8
 16986                           postdec1	equ	0xFE5
 16987                           fsr1h	equ	0xFE2
 16988                           fsr1l	equ	0xFE1
 16989                           bsr	equ	0xFE0
 16990                           indf2	equ	0xFDF
 16991                           postinc2	equ	0xFDE
 16992                           postdec2	equ	0xFDD
 16993                           fsr2h	equ	0xFDA
 16994                           fsr2l	equ	0xFD9
 16995                           status	equ	0xFD8
 16996                           
 16997                           	psect	temp
 16998  000043                     btemp:
 16999                           	opt stack 0
 17000  000043                     	ds	1
 17001  0000                     int$flags	set	btemp
 17002  0000                     wtemp6	set	btemp+1
 17003                           pclatu	equ	0xFFB
 17004                           pclath	equ	0xFFA
 17005                           tblptru	equ	0xFF8
 17006                           tblptrh	equ	0xFF7
 17007                           tblptrl	equ	0xFF6
 17008                           tablat	equ	0xFF5
 17009                           prodh	equ	0xFF4
 17010                           prodl	equ	0xFF3
 17011                           postinc0	equ	0xFEE
 17012                           fsr0h	equ	0xFEA
 17013                           fsr0l	equ	0xFE9
 17014                           wreg	equ	0xFE8
 17015                           postdec1	equ	0xFE5
 17016                           fsr1h	equ	0xFE2
 17017                           fsr1l	equ	0xFE1
 17018                           bsr	equ	0xFE0
 17019                           indf2	equ	0xFDF
 17020                           postinc2	equ	0xFDE
 17021                           postdec2	equ	0xFDD
 17022                           fsr2h	equ	0xFDA
 17023                           fsr2l	equ	0xFD9
 17024                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    4
    Data        4
    BSS         2000
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     38      66
    BANK0           160     73     124
    BANK1           256     55     105
    BANK2           256      0     247
    BANK3           256      0     256
    BANK4           256      0     200
    BANK5           256      0     200
    BANK6           256      0     200
    BANK7           256      0     200
    BANK8           256    198     198
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          136      0       0

Pointer List with Targets:

    usb_str	PTR unsigned char  size(2) Largest target is 200
		 -> usb_ser_str_dat(BANK7[200]), NULL(NULL[0]), 

    tim_dat	PTR unsigned char  size(2) Largest target is 200
		 -> bt_ser_str_dat(BANK6[200]), NULL(NULL[0]), 

    bt_str	PTR unsigned char  size(2) Largest target is 200
		 -> bt_ser_str_dat(BANK6[200]), NULL(NULL[0]), 

    set_time_led@time	PTR struct . size(2) Largest target is 12
		 -> curr_time(BANK0[12]), NULL(NULL[0]), 

    screen_update@time	PTR struct . size(2) Largest target is 12
		 -> curr_time(BANK0[12]), NULL(NULL[0]), 

    draw_circle@clr	PTR struct . size(2) Largest target is 3
		 -> set_load_led@color(BANK0[3]), 

    get_random_color@clr	PTR struct . size(2) Largest target is 3
		 -> set_jason@clr(BANK0[3]), set_en_mj@clr(BANK0[3]), set_minell@clr(BANK0[3]), set_dag@clr(BANK0[3]), 
		 -> set_trou@clr(BANK0[3]), set_verjaars@clr(BANK0[3]), set_gelukkige@clr(BANK0[3]), set_load_led@color(BANK0[3]), 

    set_pixel@clr	PTR struct . size(2) Largest target is 3
		 -> set_jason@clr(BANK0[3]), set_en_mj@clr(BANK0[3]), set_minell@clr(BANK0[3]), set_dag@clr(BANK0[3]), 
		 -> set_trou@clr(BANK0[3]), set_verjaars@clr(BANK0[3]), set_gelukkige@clr(BANK0[3]), set_load_led@color(BANK0[3]), 
		 -> set_white_pixel@white(BANK0[3]), 

    sp__get_usb_serial_str	PTR unsigned char  size(2) Largest target is 200
		 -> usb_ser_str_dat(BANK7[200]), NULL(NULL[0]), 

    sp__get_bt_serial_str	PTR unsigned char  size(2) Largest target is 200
		 -> bt_ser_str_dat(BANK6[200]), NULL(NULL[0]), 

    i2c_read@data	PTR unsigned char  size(2) Largest target is 47
		 -> dat(BANK2[47]), get_time@data(BANK0[7]), i2c_read_single@temp(BANK1[1]), 

    i2c_write@data	PTR unsigned char  size(2) Largest target is 576
		 -> led_cont(BIGRAM[576]), open_short_test@all_led(COMRAM[24]), init_led@all_on(BANK1[24]), set_time@time_buffer(COMRAM[6]), 
		 -> i2c_write_single@data(BANK1[1]), main@all_on(BANK8[192]), 

    sp__get_time	PTR struct . size(2) Largest target is 12
		 -> curr_time(BANK0[12]), 

    time	PTR struct . size(2) Largest target is 12
		 -> curr_time(BANK0[12]), NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _low_pri_isr in COMRAM

    _set_load_led->_rand
    _get_random_color->_rand
    _rand->___lmul
    ___awmod->_rand
    _set_pixel->_set_pixel_pwm
    _set_pixel_pwm->___lwdiv
    i1_set_page->i1_i2c_write_single
    i1_i2c_write_single->i1_i2c_write
    i1_i2c_write->___wmul
    i1_i2c_write->i1_set_status_led
    _prog_sw_process->_set_error_state
    _set_error_state->i1_set_status_led
    _get_time->i1_i2c_read
    i1_i2c_read->i1_I2C_Master_Read
    i1_I2C_Master_Write->i1_I2C_Master_Wait
    i1_I2C_Master_Stop->i1_I2C_Master_Wait
    i1_I2C_Master_Start->i1_I2C_Master_Wait
    i1_I2C_Master_Read->i1_I2C_Master_Wait
    _audio_jack_process->i1_set_status_led

Critical Paths under _high_pri_isr in COMRAM

    _high_pri_isr->_pwm_process
    _pwm_process->i2___wmul
    _process_bt_serial->_bt_msg_received

Critical Paths under _main in BANK0

    None.

Critical Paths under _low_pri_isr in BANK0

    _low_pri_isr->_screen_update
    _screen_update->_set_load_led
    _set_time_led->_clear_led
    _set_vyf_uur->_set_white_pixel
    _set_vyf_min->_set_white_pixel
    _set_voor->_set_white_pixel
    _set_vier_uur->_set_white_pixel
    _set_vier_min->_set_white_pixel
    _set_verjaars->_set_pixel
    _set_veer->_set_white_pixel
    _set_uur->_set_white_pixel
    _set_twintig->_set_white_pixel
    _set_twee_min->_set_white_pixel
    _set_twee_hour->_set_white_pixel
    _set_twaalf_uur->_set_white_pixel
    _set_twaalf_min->_set_white_pixel
    _set_trou->_set_pixel
    _set_tien_uur->_set_white_pixel
    _set_tien_min->_set_white_pixel
    _set_sewe_uur->_set_white_pixel
    _set_sewe_min->_set_white_pixel
    _set_ses_uur->_set_white_pixel
    _set_ses_min->_set_white_pixel
    _set_oor->_set_white_pixel
    _set_ntien_min->_set_white_pixel
    _set_nege_uur->_set_white_pixel
    _set_nege_min->_set_white_pixel
    _set_minuut->_set_white_pixel
    _set_minute->_set_white_pixel
    _set_minell->_set_pixel
    _set_kwart->_set_white_pixel
    _set_jason->_set_pixel
    _set_half->_set_white_pixel
    _set_gelukkige->_set_pixel
    _set_en_mj->_set_pixel
    _set_en->_set_white_pixel
    _set_elf_uur->_set_white_pixel
    _set_elf_min->_set_white_pixel
    _set_een_min->_set_white_pixel
    _set_een_hour->_set_white_pixel
    _set_drie_uur->_set_white_pixel
    _set_drie_min->_set_white_pixel
    _set_die_tyd_is->_set_white_pixel
    _set_der->_set_white_pixel
    _set_dag->_set_pixel
    _set_agt_uur->_set_white_pixel
    _set_agt_min->_set_white_pixel
    _set_white_pixel->_set_pixel
    _set_load_led->_draw_circle
    _get_random_color->___awmod
    _rand->___lmul
    _draw_circle->_set_pixel
    _set_pixel->_set_pixel_pwm
    _clear_led->_refresh_led
    _refresh_led->i1_set_page
    i1_set_page->i1_i2c_write_single
    i1_i2c_write_single->i1_i2c_write
    _get_time->i1_i2c_read

Critical Paths under _high_pri_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_init_led
    _init_led->_set_page
    _set_page->_i2c_write_single
    _i2c_write_single->_i2c_write
    _i2c_write->_set_status_led
    _i2c_read_single->_i2c_read
    _i2c_read->_I2C_Master_Read
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _low_pri_isr in BANK1

    None.

Critical Paths under _high_pri_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _low_pri_isr in BANK2

    None.

Critical Paths under _high_pri_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _low_pri_isr in BANK3

    None.

Critical Paths under _high_pri_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _low_pri_isr in BANK4

    None.

Critical Paths under _high_pri_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _low_pri_isr in BANK5

    None.

Critical Paths under _high_pri_isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _low_pri_isr in BANK6

    None.

Critical Paths under _high_pri_isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _low_pri_isr in BANK7

    None.

Critical Paths under _high_pri_isr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _low_pri_isr in BANK8

    None.

Critical Paths under _high_pri_isr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _low_pri_isr in BANK9

    None.

Critical Paths under _high_pri_isr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _low_pri_isr in BANK10

    None.

Critical Paths under _high_pri_isr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _low_pri_isr in BANK11

    None.

Critical Paths under _high_pri_isr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _low_pri_isr in BANK12

    None.

Critical Paths under _high_pri_isr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _low_pri_isr in BANK13

    None.

Critical Paths under _high_pri_isr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _low_pri_isr in BANK14

    None.

Critical Paths under _high_pri_isr in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               200   200      0   52576
                                             53 BANK1      2     2      0
                                              0 BANK8    198   198      0
                    _i2c_read_single
                          _i2c_write
                   _i2c_write_single
                          _init_comm
                            _init_io
                           _init_led
                           _init_pwm
                           _set_page
                     _set_status_led
 ---------------------------------------------------------------------------------
 (1) _init_pwm                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_led                                            30    30      0   23692
                                             23 BANK1     30    30      0
                          _i2c_write
                   _i2c_write_single
                           _set_page
 ---------------------------------------------------------------------------------
 (1) _set_page                                             5     2      3   10464
                                             18 BANK1      5     2      3
                   _i2c_write_single
 ---------------------------------------------------------------------------------
 (2) _i2c_write_single                                     3     1      2    7704
                                             15 BANK1      3     1      2
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            9     3      6    4725
                                              6 BANK1      9     3      6
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                     _set_status_led
 ---------------------------------------------------------------------------------
 (1) _set_status_led                                       6     2      4    1942
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _init_io                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_comm                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _i2c_read_single                                      3     2      1    2404
                                             18 BANK1      3     2      1
                           _i2c_read
 ---------------------------------------------------------------------------------
 (2) _i2c_read                                            13     8      5    1806
                                              5 BANK1     13     8      5
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                    _I2C_Master_Wait
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Write                                     2     0      2     571
                                              1 BANK1      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Read                                      4     2      2     245
                                              1 BANK1      4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (5) _I2C_Master_Wait                                      1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _low_pri_isr                                         21    21      0 1825689
                                             52 BANK0     21    21      0
                 _audio_jack_process
                           _get_time
                    _prog_sw_process
                      _screen_update
 ---------------------------------------------------------------------------------
 (8) _screen_update                                        2     0      2 1823207
                                             50 BANK0      2     0      2
                        _refresh_led
                       _set_load_led
                       _set_time_led
               _time_needs_to_be_set
 ---------------------------------------------------------------------------------
 (9) _time_needs_to_be_set                                 2     0      2       0
                                             28 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _set_time_led                                        10     8      2 1787531
                                             25 BANK0     10     8      2
                          _clear_led
                        _set_agt_min
                        _set_agt_uur
                            _set_dag
                            _set_der
                     _set_die_tyd_is
                       _set_drie_min
                       _set_drie_uur
                       _set_een_hour
                        _set_een_min
                        _set_elf_min
                        _set_elf_uur
                             _set_en
                          _set_en_mj
                      _set_gelukkige
                           _set_half
                          _set_jason
                          _set_kwart
                         _set_minell
                         _set_minute
                         _set_minuut
                       _set_nege_min
                       _set_nege_uur
                      _set_ntien_min
                            _set_oor
                        _set_ses_min
                        _set_ses_uur
                       _set_sewe_min
                       _set_sewe_uur
                       _set_tien_min
                       _set_tien_uur
                           _set_trou
                     _set_twaalf_min
                     _set_twaalf_uur
                      _set_twee_hour
                       _set_twee_min
                        _set_twintig
                            _set_uur
                           _set_veer
                       _set_verjaars
                       _set_vier_min
                       _set_vier_uur
                           _set_voor
                        _set_vyf_min
                        _set_vyf_uur
 ---------------------------------------------------------------------------------
 (10) _set_vyf_uur                                         0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_vyf_min                                         0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_voor                                            0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_vier_uur                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_vier_min                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_verjaars                                        3     3      0   20208
                                             17 BANK0      3     3      0
                   _get_random_color
                          _set_pixel
 ---------------------------------------------------------------------------------
 (10) _set_veer                                            0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_uur                                             0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_twintig                                         0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_twee_min                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_twee_hour                                       0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_twaalf_uur                                      0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_twaalf_min                                      0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_trou                                            3     3      0   20084
                                             17 BANK0      3     3      0
                   _get_random_color
                          _set_pixel
 ---------------------------------------------------------------------------------
 (10) _set_tien_uur                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_tien_min                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_sewe_uur                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_sewe_min                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_ses_uur                                         0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_ses_min                                         0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_oor                                             0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_ntien_min                                       0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_nege_uur                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_nege_min                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_minuut                                          0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_minute                                          0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_minell                                          3     3      0   20146
                                             17 BANK0      3     3      0
                   _get_random_color
                          _set_pixel
 ---------------------------------------------------------------------------------
 (10) _set_kwart                                           0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_jason                                           3     3      0   20115
                                             17 BANK0      3     3      0
                   _get_random_color
                          _set_pixel
 ---------------------------------------------------------------------------------
 (10) _set_half                                            0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_gelukkige                                       3     3      0   20239
                                             17 BANK0      3     3      0
                   _get_random_color
                          _set_pixel
 ---------------------------------------------------------------------------------
 (10) _set_en_mj                                           3     3      0   20022
                                             17 BANK0      3     3      0
                   _get_random_color
                          _set_pixel
 ---------------------------------------------------------------------------------
 (10) _set_en                                              0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_elf_uur                                         0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_elf_min                                         0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_een_min                                         0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_een_hour                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_drie_uur                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_drie_min                                        0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_die_tyd_is                                      0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_der                                             0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_dag                                             3     3      0   20053
                                             17 BANK0      3     3      0
                   _get_random_color
                          _set_pixel
 ---------------------------------------------------------------------------------
 (10) _set_agt_uur                                         0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (10) _set_agt_min                                         0     0      0   44299
                    _set_white_pixel
 ---------------------------------------------------------------------------------
 (11) _set_white_pixel                                     7     3      4   44299
                                             17 BANK0      7     3      4
                          _set_pixel
 ---------------------------------------------------------------------------------
 (9) _set_load_led                                        11    11      0   30683
                                             39 BANK0     11    11      0
                            ___awmod
                          _clear_led
                        _draw_circle
                   _get_random_color
                               _rand
 ---------------------------------------------------------------------------------
 (11) _get_random_color                                    2     0      2    2782
                                             10 BANK0      2     0      2
                            ___awmod
                               _rand
 ---------------------------------------------------------------------------------
 (12) _rand                                                2     0      2     456
                                             36 COMRAM     2     0      2
                             ___lmul
 ---------------------------------------------------------------------------------
 (13) ___lmul                                             12     4      8     456
                                             28 COMRAM     8     0      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (12) ___awmod                                             6     2      4    1513
                                              4 BANK0      6     2      4
                               _rand (ARG)
 ---------------------------------------------------------------------------------
 (10) _draw_circle                                        22    14      8   19063
                                             17 BANK0     22    14      8
                          _set_pixel
 ---------------------------------------------------------------------------------
 (12) _set_pixel                                           6     0      6   17120
                                             11 BANK0      6     0      6
                      _set_pixel_pwm
 ---------------------------------------------------------------------------------
 (13) _set_pixel_pwm                                      13     6      7    4421
                                             35 COMRAM     2     2      0
                                              0 BANK0     11     4      7
                            ___lwdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (14) ___lwdiv                                             7     3      4    1321
                                             28 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (10) _clear_led                                           6     6      0    6678
                                             19 BANK0      6     6      0
                             ___wmul
                        _refresh_led
 ---------------------------------------------------------------------------------
 (11) _refresh_led                                         6     6      0    4872
                                             13 BANK0      6     6      0
                             ___wmul
                        i1_i2c_write
                         i1_set_page
 ---------------------------------------------------------------------------------
 (12) i1_set_page                                          5     2      3    1698
                                              8 BANK0      5     2      3
                 i1_i2c_write_single
 ---------------------------------------------------------------------------------
 (13) i1_i2c_write_single                                  3     1      2    1498
                                             37 COMRAM     1     1      0
                                              6 BANK0      2     0      2
                        i1_i2c_write
 ---------------------------------------------------------------------------------
 (14) i1_i2c_write                                         9     3      6    1265
                                             34 COMRAM     3     3      0
                                              0 BANK0      6     0      6
                             ___wmul (ARG)
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                 i1_I2C_Master_Write
                   i1_set_status_led
 ---------------------------------------------------------------------------------
 (14) ___wmul                                              6     2      4    1608
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) _prog_sw_process                                      3     3      0     707
                                             36 COMRAM     1     1      0
                                              0 BANK0      2     2      0
                    _set_error_state
 ---------------------------------------------------------------------------------
 (9) _set_error_state                                      2     0      2     673
                                             34 COMRAM     2     0      2
                   i1_set_status_led
 ---------------------------------------------------------------------------------
 (8) _get_time                                            11     9      2    1223
                                              8 BANK0     11     9      2
                         i1_i2c_read
 ---------------------------------------------------------------------------------
 (9) i1_i2c_read                                          13     8      5     766
                                             33 COMRAM     5     0      5
                                              0 BANK0      8     8      0
                  i1_I2C_Master_Read
                 i1_I2C_Master_Start
                  i1_I2C_Master_Stop
                  i1_I2C_Master_Wait
                 i1_I2C_Master_Write
 ---------------------------------------------------------------------------------
 (15) i1_I2C_Master_Write                                  2     0      2     241
                                             29 COMRAM     2     0      2
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (15) i1_I2C_Master_Stop                                   0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (15) i1_I2C_Master_Start                                  0     0      0       0
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (10) i1_I2C_Master_Read                                   4     2      2     135
                                             29 COMRAM     4     2      2
                  i1_I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (16) i1_I2C_Master_Wait                                   1     1      0       0
                                             28 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _audio_jack_process                                   1     1      0     552
                                             34 COMRAM     1     1      0
                   i1_set_status_led
 ---------------------------------------------------------------------------------
 (15) i1_set_status_led                                    6     2      4     552
                                             28 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (17) _high_pri_isr                                       18    18      0     369
                                             10 COMRAM    18    18      0
                        _process_adc
                  _process_bt_serial
                 _process_usb_serial
                        _pwm_process
 ---------------------------------------------------------------------------------
 (18) _pwm_process                                         4     4      0     257
                                              6 COMRAM     4     4      0
                           i2___wmul
 ---------------------------------------------------------------------------------
 (19) i2___wmul                                            6     2      4     209
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (18) _process_usb_serial                                  1     1      0      67
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (18) _process_bt_serial                                   1     1      0      45
                                              2 COMRAM     1     1      0
                    _bt_msg_received
 ---------------------------------------------------------------------------------
 (19) _bt_msg_received                                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (18) _process_adc                                         4     4      0       0
                                              0 COMRAM     4     4      0
                           _stop_adc
 ---------------------------------------------------------------------------------
 (19) _stop_adc                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 19
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _i2c_read_single
     _i2c_read
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _i2c_write
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     _set_status_led
   _i2c_write_single
     _i2c_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _set_status_led
   _init_comm
   _init_io
   _init_led
     _i2c_write
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
       _set_status_led
     _i2c_write_single
       _i2c_write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _set_status_led
     _set_page
       _i2c_write_single
         _i2c_write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
           _set_status_led
   _init_pwm
   _set_page
     _i2c_write_single
       _i2c_write
         _I2C_Master_Start
           _I2C_Master_Wait
         _I2C_Master_Stop
           _I2C_Master_Wait
         _I2C_Master_Write
           _I2C_Master_Wait
         _set_status_led
   _set_status_led

 _low_pri_isr (ROOT)
   _audio_jack_process
     i1_set_status_led
   _get_time
     i1_i2c_read
       i1_I2C_Master_Read
         i1_I2C_Master_Wait
       i1_I2C_Master_Start
         i1_I2C_Master_Wait
       i1_I2C_Master_Stop
         i1_I2C_Master_Wait
       i1_I2C_Master_Wait
       i1_I2C_Master_Write
         i1_I2C_Master_Wait
   _prog_sw_process
     _set_error_state
       i1_set_status_led
   _screen_update
     _refresh_led
       ___wmul
       i1_i2c_write
         ___wmul (ARG)
         i1_I2C_Master_Start (ARG)
           i1_I2C_Master_Wait
         i1_I2C_Master_Stop (ARG)
           i1_I2C_Master_Wait
         i1_I2C_Master_Write (ARG)
           i1_I2C_Master_Wait
         i1_set_status_led (ARG)
       i1_set_page
         i1_i2c_write_single
           i1_i2c_write
             ___wmul (ARG)
             i1_I2C_Master_Start (ARG)
               i1_I2C_Master_Wait
             i1_I2C_Master_Stop (ARG)
               i1_I2C_Master_Wait
             i1_I2C_Master_Write (ARG)
               i1_I2C_Master_Wait
             i1_set_status_led (ARG)
     _set_load_led
       ___awmod
         _rand (ARG)
           ___lmul
       _clear_led
         ___wmul
         _refresh_led
           ___wmul
           i1_i2c_write
             ___wmul (ARG)
             i1_I2C_Master_Start (ARG)
               i1_I2C_Master_Wait
             i1_I2C_Master_Stop (ARG)
               i1_I2C_Master_Wait
             i1_I2C_Master_Write (ARG)
               i1_I2C_Master_Wait
             i1_set_status_led (ARG)
           i1_set_page
             i1_i2c_write_single
               i1_i2c_write
                 ___wmul (ARG)
                 i1_I2C_Master_Start (ARG)
                   i1_I2C_Master_Wait
                 i1_I2C_Master_Stop (ARG)
                   i1_I2C_Master_Wait
                 i1_I2C_Master_Write (ARG)
                   i1_I2C_Master_Wait
                 i1_set_status_led (ARG)
       _draw_circle
         _set_pixel
           _set_pixel_pwm
             ___lwdiv
             ___wmul
       _get_random_color
         ___awmod
           _rand (ARG)
             ___lmul
         _rand
           ___lmul
       _rand
         ___lmul
     _set_time_led
       _clear_led
         ___wmul
         _refresh_led
           ___wmul
           i1_i2c_write
             ___wmul (ARG)
             i1_I2C_Master_Start (ARG)
               i1_I2C_Master_Wait
             i1_I2C_Master_Stop (ARG)
               i1_I2C_Master_Wait
             i1_I2C_Master_Write (ARG)
               i1_I2C_Master_Wait
             i1_set_status_led (ARG)
           i1_set_page
             i1_i2c_write_single
               i1_i2c_write
                 ___wmul (ARG)
                 i1_I2C_Master_Start (ARG)
                   i1_I2C_Master_Wait
                 i1_I2C_Master_Stop (ARG)
                   i1_I2C_Master_Wait
                 i1_I2C_Master_Write (ARG)
                   i1_I2C_Master_Wait
                 i1_set_status_led (ARG)
       _set_agt_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_agt_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_dag
         _get_random_color
           ___awmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
         _set_pixel
           _set_pixel_pwm
             ___lwdiv
             ___wmul
       _set_der
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_die_tyd_is
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_drie_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_drie_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_een_hour
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_een_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_elf_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_elf_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_en
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_en_mj
         _get_random_color
           ___awmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
         _set_pixel
           _set_pixel_pwm
             ___lwdiv
             ___wmul
       _set_gelukkige
         _get_random_color
           ___awmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
         _set_pixel
           _set_pixel_pwm
             ___lwdiv
             ___wmul
       _set_half
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_jason
         _get_random_color
           ___awmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
         _set_pixel
           _set_pixel_pwm
             ___lwdiv
             ___wmul
       _set_kwart
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_minell
         _get_random_color
           ___awmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
         _set_pixel
           _set_pixel_pwm
             ___lwdiv
             ___wmul
       _set_minute
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_minuut
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_nege_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_nege_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_ntien_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_oor
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_ses_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_ses_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_sewe_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_sewe_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_tien_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_tien_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_trou
         _get_random_color
           ___awmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
         _set_pixel
           _set_pixel_pwm
             ___lwdiv
             ___wmul
       _set_twaalf_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_twaalf_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_twee_hour
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_twee_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_twintig
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_veer
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_verjaars
         _get_random_color
           ___awmod
             _rand (ARG)
               ___lmul
           _rand
             ___lmul
         _set_pixel
           _set_pixel_pwm
             ___lwdiv
             ___wmul
       _set_vier_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_vier_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_voor
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_vyf_min
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
       _set_vyf_uur
         _set_white_pixel
           _set_pixel
             _set_pixel_pwm
               ___lwdiv
               ___wmul
     _time_needs_to_be_set

 _high_pri_isr (ROOT)
   _process_adc
     _stop_adc
   _process_bt_serial
     _bt_msg_received
   _process_usb_serial
   _pwm_process
     i2___wmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E87      0     240      35       15.5%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100     C6      C6      22       77.3%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0      C8      20       78.1%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0      C8      18       78.1%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0      C8      16       78.1%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0      C8      14       78.1%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0     100      12      100.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0      F7      10       96.5%
BITBANK1           100      0       0       7        0.0%
BANK1              100     37      69       8       41.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      7C       5       77.5%
BITBANK14           88      0       0      33        0.0%
BANK14              88      0       0      34        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     26      42       1       70.2%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     704       6        0.0%
DATA                 0      0     944       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Jul 17 00:13:06 2018

                             _i 00B3                ?_prog_sw_process 0001                   ?_high_pri_isr 0001  
                   __CFG_CP$OFF 000000                    ?_draw_circle 0071                              l70 0FD2  
                            l69 0FB2                              bsr 000FE0             ___wmul@multiplicand 001F  
   __size_of_audio_jack_process 0050                     _pwm_process 2330                     _usb_ser_str 0500  
                           l210 2D64                             l203 2D7E                             l204 2CE2  
                           l206 2CFC                             l207 2D16                             l208 2D30  
                           l209 2D4A                             l321 2B24                             l330 25FE  
                           l322 2BA0                             l323 2B72                             l332 2684  
                           l333 2656                             l350 49A4                             l319 2B00  
                           l642 21C2                             l638 1ED6                    __CFG_CPD$OFF 000000  
             ?_get_random_color 006A                             _dat 02C8                    ___awmod@sign 0069  
                           wreg 000FE8              ??_get_random_color 0027                 __end_of_BTBLINK 0F03  
                  __CFG_LVP$OFF 000000                    __CFG_ZCD$OFF 000000                            l6047 20FC  
                          l6057 2128                            l6145 0FB2                            l6129 0F3E  
                          l6139 0F6A                            u9000 10EE                            u9010 1104  
                          u9100 11D0                            u9020 1106                            u9110 11E6  
                          u9030 1154                            i1l88 0080                            u8400 1F24  
                          u9200 126A                            u9120 11E8                            u9040 1156  
                          i1l89 0092                            u8410 1F5C                            u9210 12B4  
                          u9130 11FE                            u9050 116C                            u8500 1FF2  
                          u8420 1F5E                            u8340 1ED4                            u9300 1338  
                          u9220 12B6                            u9140 1200                            u9060 116E  
                          u8510 2008                            u8430 1F74                            u8350 1EF2  
                          u9310 134E                            u9230 12CC                            u9150 1238  
                          u9070 1184                            u8600 20AE                            u8520 200A  
                          u8440 1F76                            u8360 1EF4                            u9400 1404  
                          u9320 1350                            u9240 12CE                            u9160 123A  
                          u9080 1186                            u8610 20C4                            u8530 2030  
                          u8450 1F8C                            u8370 1F0A                            u9410 141A  
                          u9330 1390                            u9250 12E4                            u9170 1250  
                          u9090 11CE     __size_of_process_usb_serial 0052                            u8700 217C  
                          u8620 20C6                            u8540 2032                            u8460 1F8E  
                          u8380 1F0C                            u9500 14B0                            u9420 141C  
                          u9340 1392                            u9260 12E6                            u9180 1252  
                          u8710 2192                            u8630 20DC                            u8550 2048  
                          u8470 1FD8                            u8390 1F22                            u9510 14EE  
                          u9430 1432                            u9350 13A8                            u9270 131E  
                          u9190 1268                            u8720 2194                            u8640 20DE  
                          u8560 204A                            u8480 1FDA                            u9600 1578  
                          u9520 14F0                            u9440 1434                            u9360 13AA  
                          u9280 1320                            u8570 2060                            u8490 1FF0  
                          u9610 158E                            u9530 1506                            u9450 147E  
                          u9370 13C0                            u9290 1336                            u8660 2128  
                          u8580 2062                            u9700 163E                            u9620 1590  
                          u9540 1508                            u9460 1480                            u9380 13C2  
                          u8900 1020                            u8670 2162                            u8590 20AC  
                          u9710 1654                            u9630 15D2                            u9550 151E  
                          u9470 1496                            u9390 1402                            u8910 1058  
                          u8830 0F6A                            u8680 2164                            u9720 1656  
                          u9640 15D4                            u9560 1520                            u9480 1498  
                          u8920 105A                            u8690 217A                            u9730 166C  
                          u9650 15EA                            u9570 155E                            u9490 14AE  
                          u8930 1070                            u8850 0FEE                            u9740 166E  
                          u9660 15EC                            u9580 1560                            u8940 1072  
                          u8860 0FF0                            u9750 16FC                            u9670 1602  
                          u9590 1576                            u8950 1088                            u8870 1006  
                          u9680 1604                            u8960 108A                            u8880 1008  
                          u7985 49C4                            u7986 49C6                            u9690 163C  
                          u8970 10D4                            u8890 101E                            u8980 10D6  
                          u8990 10EC                            _TMR1 000FCD              i1i2c_read@reg_addr 0022  
                          _data 0200                            _main 0F06                            _rand 4370  
 __size_of_time_needs_to_be_set 0018                            _time 00C1                            fsr0h 000FEA  
                          fsr1h 000FE2                            fsr2h 000FDA                            fsr0l 000FE9  
                          indf2 000FDF                            fsr1l 000FE1                            fsr2l 000FD9  
                          btemp 0043                            prodh 000FF4                      i1_set_page 4952  
                          prodl 000FF3     i1I2C_Master_Read@final_read 001E                            start 00FA  
          set_error_state@error 0023                    ___param_bank 000000                __end_of_BTCNTMAX 0F05  
                ??_high_pri_isr 000B                   __CFG_SCANE$ON 000000                ?_I2C_Master_Read 0101  
              ?_I2C_Master_Wait 0001                ?_I2C_Master_Stop 0001                    _ADC_SAM_FREQ 00D1  
           i2c_read_single@addr 0113                           _ADACT 000F56                           ?_main 0001  
                  get_time@data 006C                           _ADPCH 000F5F                           ?_rand 0025  
                 __CFG_WDTE$OFF 000000                 __end_of___awmod 361A             i2c_read_single@temp 0114  
                         u10507 10AE                           u10517 1122                           u10607 153C  
                         u10527 11A8                           u10617 15AC                           u10537 121C  
                         u10707 262E                           u10627 1620                           u10547 128E  
                         u10467 0F26                           u10637 1692                           u10557 1302  
                         u10477 0F72                           u10647 16AA                           u10567 1374  
                         u10487 0F98                           u10657 16DC                           u10577 13E6  
                         u10497 103C                           u10667 1F40                           u10587 1458  
                         u10677 1FB2                           u10597 14CC                           u10687 2086  
                         u10697 2130                  __CFG_DEBUG$OFF 000000                 __end_of___lwdiv 441A  
                         i1l210 2F36                           i1l203 2F50                           i1l204 2EB4  
                         i1l220 48A6                           i1l206 2ECE                           i1l207 2EE8  
                         i1l208 2F02                           i1l209 2F1C                           i1l321 2FCA  
                         i1l330 29BC                           i1l322 3030                           i1l323 300E  
                         i1l332 2A34                           i1l333 2A0E                           i1l350 49E0  
                         i1l319 2FAA                           i1l512 21DA                           i1l513 231E  
                         i1l701 17DE                           i1l702 1898                           i1l710 1846  
                         i1l703 1856                           i1l711 184C                           i1l712 1850  
                         i1l704 1820                           _PCON0 000FD7                           i1l721 190E  
                         i1l730 195C                           i1l714 18EC                           i1l706 1826  
                         i1l731 1962                           i1l723 1920                           i1l707 182C  
                         i1l660 2756                           i1l740 19DA                           i1l732 1968  
                         i1l708 1836                           i2l405 442C                           i1l741 19E0  
                         i1l717 1974                           i1l733 196E                           i1l725 1932  
                         i1l709 1840                           i2l406 4456                           i1l662 2872  
                         i1l750 1AAE                           i1l742 19E6                           i1l718 18FC  
                         i1l751 1AEE                           i1l735 1A10                           i1l743 19EC  
                         i1l727 1944                           i1l744 19F2                           i1l736 19C8  
                         i1l737 1A6E                           i1l745 19F8                           i1l729 1956  
                         i2l194 2386                           i1l746 19FE                           i1l738 19CE  
                         i1l747 1A04                           i1l739 19D4                           i1l691 4B3A  
                         i2l372 48D6                           i2l196 23C8                           i1l668 2CC6  
                         i1l684 1B9E                           i1l748 1A0A                           i1l692 4B46  
                         i2l373 48F8                           i2l197 241A                           i1l685 1E3A  
                         i1l686 1E92                           i2l472 3CF2                           i1l696 1786  
                         i1l698 179E                           i1l699 17BE                           _TMR0H 000FD4  
                         _TMR0L 000FD3         __end_of_set_error_state 48C6                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000             ___lmul@multiplicand 0021  
                 __CFG_WRT3$OFF 000000                   __CFG_WRT4$OFF 000000                   __CFG_WRT5$OFF 000000  
                 __CFG_WRT6$OFF 000000                   __CFG_WRT7$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                  __CFG_EBTR4$OFF 000000                  __CFG_EBTR5$OFF 000000  
                __CFG_EBTR6$OFF 000000                  __CFG_EBTR7$OFF 000000                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                           _b_cnt 0039  
                 _usb_str_ready 00B5                  __CFG_EBTRB$OFF 000000                           _g_cnt 003D  
                         _r_cnt 0041                 __end_of_init_io 36AE                           _randx 00D8  
                   ?i1_i2c_read 0022              __CFG_MCLRE$EXTMCLR 000000                           main@i 08C2  
                         main@m 08C1                           main@n 08C0                 __end_of_set_dag 3B92  
               __end_of_set_der 47EA                           pclath 000FFA                           tablat 000FF5  
               __end_of_set_oor 4678                 __end_of_set_uur 459A        __size_of_bt_msg_received 0018  
                  draw_circle@x 0083                    draw_circle@y 0085                __end_ofi2___wmul 4B9C  
      __end_ofi1_set_status_led 2F82                           status 000FD8                           wtemp6 0044  
            i1_i2c_write_single 4ACE                  __CFG_CSWEN$OFF 000000                 __initialization 337A  
                  __end_of_main 16FE                    __end_of_rand 43C8                __end_of_i2c_read 272E  
           ?i1_i2c_write_single 0066                          ??_main 0135                          ??_rand 0027  
               _set_white_pixel 4AA0                   __activetblptr 000003                    ?_refresh_led 0001  
             ?_I2C_Master_Start 0001               ?_I2C_Master_Write 0101              ??_I2C_Master_Start 0101  
            ??_I2C_Master_Write 0103                          _ADRESH 000F64                          _ADRESL 000F63  
                  i2c_read@addr 010F                    i2c_read@data 0108            ??i1_i2c_write_single 0026  
                        _RC1REG 000F99                          _RC2REG 000E99                          _RC3PPS 000EFA  
                        _RB5PPS 000EF4                          i1l1106 42C8                          i1l1107 42E4  
                        _RC4PPS 000EFB                          i1l1060 44A2                          i1l1061 44B6  
                        _RB7PPS 000EF6                          i1l1502 4406                          i1l1503 4410  
                        i1l1282 35EE                          i1l1283 35FC                          i1l1275 3594  
                        _RC6PPS 000EFD                          i1l1284 3610                          i1l1276 35A4  
                        i1l1278 35C4                          i1l1279 35B8                          _RC7PPS 000EFE  
                        i1l1498 43E6                          i1l1499 43DE                          i1l5513 3A10  
                __CFG_WDTCCS$SC 000000                          i1l5509 3A08                          i1l5493 3992  
                        i1l5815 179E                          i1l5499 39AC                          i1l5861 18EC  
                        i1l5849 1898                          i2l4369 241A        __end_of_i2c_write_single 4AA0  
                        _TX1REG 000F9A                          _TX2REG 000E9A                    ?_low_pri_isr 0001  
            __size_of_i2c_write 0106                    ?_set_agt_min 0001          _usb_ser_str_read_start 00B9  
                  ?_set_agt_uur 0001                    ?_set_een_min 0001                     ?i1_set_page 0068  
                  ?_set_elf_min 0001                    ?_set_elf_uur 0001                  __CFG_PWRTE$OFF 000000  
         __end_of_screen_update 4B50                  __CFG_XINST$OFF 000000                __end_of_get_time 2330  
                        ___lmul 42B6         __size_of_set_die_tyd_is 00C2                          ___wmul 4B50  
                __CFG_STVREN$ON 000000                       ??___awmod 0027                    ?_set_ses_min 0001  
                  ?_set_ses_uur 0001                          _bt_cnt 0035                       ??___lwdiv 0021  
                        _bt_str 002B             __size_ofi1_i2c_read 012E                 _i2c_read_single 4AFC  
              __end_of_init_led 21C4                __end_of_init_pwm 3B14                          clear_0 33A2  
                        clear_1 33B4                          clear_2 33C0                          clear_3 33CC  
                        clear_4 33D8                          clear_5 33E6                          clear_6 33F8  
                        clear_7 3404                          clear_8 3410                          clear_9 341C  
               ___awmod@divisor 0066                          _set_en 4A3E                    ?_set_twintig 0001  
                  ?_set_vyf_min 0001                 ___awmod@counter 0068                          _toggle 00BF  
                  ?_set_vyf_uur 0001                    ?i1_i2c_write 0060            __size_of_draw_circle 0370  
   __size_ofi1_I2C_Master_Start 0008                __end_of_set_half 41F2     __size_ofi1_I2C_Master_Write 000A  
                     ??_init_io 0100                __end_of_set_page 4952                __end_of_set_veer 3E80  
              ?_set_error_state 0023                __end_of_set_trou 3578                __end_of_set_voor 3D5A  
                 draw_circle@x0 0071                   draw_circle@y0 0073                   draw_circle@dx 007F  
                 draw_circle@dy 007D                    __mediumconst 0000                       ??_set_dag 0027  
                     ??_set_der 0026                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                       ??_set_oor 0026                       ??_set_uur 0026  
         i1I2C_Master_Read@temp 0020            __end_of_high_pri_isr 337A                __end_of_stop_adc 4C4E  
                  ?_process_adc 0001           __end_of_set_gelukkige 25E6                      __accesstop 0060  
       __end_of__initialization 3422                  i1i2c_read@addr 0065                  i1i2c_read@data 0025  
               _pwm_process$892 0009                 _pwm_process$893 000A                   ___rparam_used 000001  
               set_time_led@min 0081               ??_bt_msg_received 0003                  __pcstackCOMRAM 0001  
       __end_of_set_white_pixel 4ACE                    __pidataBANK0 4C46                    ?_pwm_process 0001  
            __size_of_clear_led 008E                       ?i2___wmul 0001                i1i2c_write@index 0024  
             __end_of_i2c_write 2BDA             __size_ofi1_set_page 0044                 _usb_ser_str_dat 0700  
         __end_of_set_ntien_min 3C0C           __end_of_set_pixel_pwm 2CC8             i1i2c_write@data_len 0062  
                    __pbssBANK0 00A9                      __pbssBANK1 0137                      __pbssBANK2 0200  
                    __pbssBANK3 0300                      __pbssBANK4 0400                      __pbssBANK5 0500  
                    __pbssBANK6 0600                      __pbssBANK7 0700                       ?_i2c_read 0105  
     __size_of_get_random_color 0080           __end_of_set_twee_hour 3F44              __size_of_init_comm 0020  
           i1I2C_Master_Write@d 001E                 set_verjaars@clr 0071             i1i2c_write@reg_addr 0065  
       __end_of_i2c_read_single 4B28                         ?___lmul 001D                         ?___wmul 001D  
               __CFG_PPS1WAY$ON 000000      __end_of_audio_jack_process 44BC                  ___lmul@product 0060  
                       ?_set_en 0001    __end_of_time_needs_to_be_set 4BD4              __size_of_set_en_mj 005A  
            __size_of_set_jason 00C6                         _BTBLINK 0F01              __size_of_set_kwart 007A  
            __size_of_set_pixel 0092                      ??i2___wmul 0005                   i2c_read@index 0110  
      __size_of_prog_sw_process 0034                      _bt_ser_str 0400     prog_sw_process@prog_sw_stat 0060  
                       _TMR1CLK 000FD2                         _SSP1ADD 000F93      __end_of_process_usb_serial 446C  
                       _SSP1BUF 000F92            __size_of_refresh_led 0146                    ??i1_i2c_read 0060  
                     ?_get_time 0068           process_bt_serial@data 0003                       _ADCLKbits 000F57  
                    ??_i2c_read 010A                   ?_set_een_hour 0001         __size_of_set_twaalf_min 0092  
       __size_of_set_twaalf_uur 0092                       ?_init_led 0001               __end_of_clear_led 3A16  
                     ?_init_pwm 0001               ?i1_set_status_led 001D         __size_of_set_status_led 00EC  
                 ?_set_drie_min 0001                       _ADREFbits 000F58                   ?_set_drie_uur 0001  
       i2c_read_single@reg_addr 0112              ??i1_set_status_led 0021                         __Hparam 0000  
          __size_of_low_pri_isr 00E2                   ?_set_nege_min 0001                         __Lparam 0000  
                     ?_set_half 0001                   ?_set_nege_uur 0001            __size_of_set_agt_min 004A  
                     ?_set_page 0112                    _bt_connected 00AD            __size_of_set_agt_uur 004A  
                 ?_set_load_led 0001      __CFG_RSTOSC$HFINTOSC_64MHZ 000000            __size_of_set_een_min 004A  
                     ?_set_veer 0001                       ?_set_trou 0001                       ?_set_voor 0001  
                _set_die_tyd_is 3204            __size_of_set_elf_min 004A            __size_of_set_elf_uur 004A  
                    _curr_b_cnt 0037                ?_set_white_pixel 0071                      _curr_g_cnt 003B  
               __size_of___lmul 0060                         ___awmod 3578                 __size_of___wmul 0026  
                    _curr_r_cnt 003F                         ___lwdiv 43C8                    __psmallconst 0F00  
                       __pcinit 337A                       ?_stop_adc 0001              __end_ofi1_i2c_read 2AD4  
                 ?_set_tien_min 0001                         __ramtop 0F00            __size_of_set_ses_min 004A  
                 ?_set_sewe_min 0001                   ?_set_tien_uur 0001                   ?_set_time_led 0079  
          __size_of_set_ses_uur 004A                   ?_set_sewe_uur 0001                 __size_of_set_en 0032  
                       __ptext0 0F06                         __ptext1 3A96                         __ptext2 1EA8  
                       __ptext3 490E                         __ptext4 4A70                         __ptext5 2AD4  
                       __ptext6 2CC8                         __ptext7 361A                         __ptext8 4B9C  
                       __ptext9 4AFC               i1_I2C_Master_Read 49D2               i1_I2C_Master_Wait 4C00  
             i1_I2C_Master_Stop 4C36                   ?_set_vier_min 0001                   ?_set_verjaars 0001  
                 ?_set_vier_uur 0001                       _T1CONbits 000FCF                         _counter 00AF  
                       _init_io 361A               __end_of_init_comm 4BBC            __size_of_set_twintig 00AA  
            ?i1_I2C_Master_Read 001E            __size_of_set_vyf_min 004A           __size_of_high_pri_isr 3372  
            ?i1_I2C_Master_Wait 0001            __size_of_set_vyf_uur 004A                ___awmod@dividend 0064  
                 ?_set_twee_min 0001              ?i1_I2C_Master_Stop 0001            __size_ofi1_i2c_write 00E0  
                     _IOCAFbits 000F0A                       _IOCCFbits 000F1A                         _set_dag 3B14  
                       _set_der 47A0        __size_of_I2C_Master_Read 003C                       _IOCANbits 000F0B  
                     _IOCAPbits 000F0C                         _set_oor 462E                         _tim_dat 002D  
      __size_of_I2C_Master_Wait 0014                       _IOCCNbits 000F1B                         _set_uur 4550  
                     _IOCCPbits 000F1C        __size_of_I2C_Master_Stop 0008                refresh_led@board 0071  
                       _usb_str 00A9                      ??_get_time 006A            set_white_pixel@white 0075  
                __pintcode_body 32C6             ??i1_I2C_Master_Read 0020            end_of_initialization 3422  
           ??i1_I2C_Master_Wait 001D             ??i1_I2C_Master_Stop 001E                  ??_set_een_hour 0026  
                    clear_led@i 0075                      clear_led@j 0077               ?_i2c_write_single 010F  
                     i1u1071_27 29E8               __end_of_set_en_mj 4370                      ??_init_led 0117  
                       int_func 32C6             i2___wmul@multiplier 0001               __end_of_set_jason 3204  
                    ??_init_pwm 0100                  ??_set_drie_min 0026            __size_of_process_adc 0072  
             __end_of_set_kwart 3C86                  ??_set_drie_uur 0026               __end_of_set_pixel 3988  
                  ??i1_set_page 0027              ??_i2c_write_single 0111       __size_of_I2C_Master_Start 0008  
        __end_of_set_die_tyd_is 32C6       __size_of_I2C_Master_Write 000A                  draw_circle@clr 0077  
                ??_set_nege_min 0026                  draw_circle@err 0081                  ??_set_nege_uur 0026  
                ??_set_load_led 0087                     set_trou@clr 0071                ?_i2c_read_single 0112  
                    ??_set_half 0026                      ??_set_page 0115                      ??_set_veer 0026  
                    ??_set_trou 0027                      _set_minell 2DB4                      ??_set_voor 0026  
                    _set_minute 3864                      _set_minuut 37D2                         postdec1 000FE5  
                       postdec2 000FDD                         postinc0 000FEE                         postinc2 000FDE  
                  _high_pri_isr 0008                    _bt_str_ready 00B7       __end_ofi1_I2C_Master_Read 4A0A  
     __end_ofi1_I2C_Master_Wait 4C12                  ??_set_tien_min 0026       __end_ofi1_I2C_Master_Stop 4C3E  
         __CFG_WDTCPS$WDTCPS_31 000000                  ??_set_sewe_min 0026                  ??_set_tien_uur 0026  
        process_usb_serial@data 0001                  ??_set_time_led 007B                  ??_set_sewe_uur 0026  
                    ??_stop_adc 0001                  ??_set_vier_min 0026                  ??_set_verjaars 0027  
                     _PORTAbits 000F8D                  ??_set_vier_uur 0026                       _PORTCbits 000F8F  
                ??_set_twee_min 0026            __size_of_pwm_process 0160                set_pixel_pwm@clr 0065  
              set_pixel_pwm@pwm 0064                   i2c_write@addr 010A                   i2c_write@data 0106  
                     _TRISAbits 000F88                       _TRISBbits 000F89                       _TRISCbits 000F8A  
            __end_ofi1_set_page 4996                 i1i2c_read@index 0066                __CFG_FEXTOSC$OFF 000000  
  set_status_led@error_override 0102                 _bt_msg_received 4BD4               ??_prog_sw_process 0025  
   __size_ofi1_i2c_write_single 002E               set_page@cont_addr 0114                      main@all_on 0800  
                  _i2c_bus_busy 00BD                _get_random_color 3A16            _time_needs_to_be_set 4BBC  
              set_time_led@hour 007D                set_time_led@teen 007F                set_time_led@time 0079  
               ?_set_die_tyd_is 0001                   ??_draw_circle 0079                  __end_of___lmul 4316  
                __end_of___wmul 4B76                     _ADC_TIM_VAL 00C3      __end_ofi1_I2C_Master_Start 4C46  
    __end_ofi1_I2C_Master_Write 4C26                  __end_of_set_en 4A70                i2___wmul@product 0005  
           start_initialization 337A               __size_ofi2___wmul 0026          __size_of_screen_update 0028  
                     _i2c_write 2AD4                  _set_twaalf_min 3740        __size_of_set_error_state 0048  
                _set_twaalf_uur 36AE               ??_I2C_Master_Read 0103               ??_I2C_Master_Wait 0100  
         ?_time_needs_to_be_set 001D               ??_I2C_Master_Stop 0101                  _set_status_led 2CC8  
             __size_of_i2c_read 0148                 _bt_ser_str_cntr 0031                _usb_ser_str_cntr 002F  
              __CFG_LPBOREN$OFF 000000                     ?_set_minell 0001                     ?_set_minute 0001  
                   ?_set_minuut 0001                _imaginaryNumbers 0380                        ??___lmul 0025  
                      ??___wmul 0021             get_random_color@clr 006A                     __pdataBANK0 00D8  
    __size_ofi1_I2C_Master_Read 0038      __size_ofi1_I2C_Master_Wait 0012      __size_ofi1_I2C_Master_Stop 0008  
          __end_of_set_een_hour 47A0                        ??_set_en 0026          __size_of_set_gelukkige 0156  
                set_pixel_pwm@x 0060                  set_pixel_pwm@y 0062            __end_of_set_drie_min 42B6  
          __end_of_set_drie_uur 4254                     __pbssBIGRAM 08C6         __end_of_bt_msg_received 4BEC  
           __end_of_draw_circle 1EA8                     __pbssCOMRAM 0027            __end_of_set_nege_min 4190  
                 __pcstackBANK0 0060                   __pcstackBANK1 0100                   __pcstackBANK8 0800  
          __end_of_set_nege_uur 412E              _audio_jack_process 446C            __end_of_set_load_led 313E  
                    ?_i2c_write 0106          __end_of_set_twaalf_min 37D2          __end_of_set_twaalf_uur 3740  
               i1i2c_write@addr 0064                 i1i2c_write@data 0060          __end_of_set_status_led 2DB4  
           ?_audio_jack_process 0001            __end_of_set_tien_min 4008            __end_of_set_sewe_min 40CC  
          __end_of_set_tien_uur 3FA6            __end_of_set_time_led 1B38            __end_of_set_sewe_uur 406A  
             __size_of_get_time 016C               screen_update@time 0092            __end_of_set_vier_min 3E1E  
          __end_of_set_verjaars 29A6            __end_of_set_vier_uur 3DBC                       __pnvBANK0 00D4  
              _I2C_Master_Start 4C2E                _I2C_Master_Write 4C12            __end_of_set_twee_min 3EE2  
             __size_of_init_led 031C              _process_usb_serial 441A               __size_of_init_pwm 007E  
              ___lwdiv@dividend 001D                       _clear_led 3988                   _screen_update 4B28  
                     __pintcode 0008          __size_of_set_ntien_min 007A          __size_of_set_pixel_pwm 00EE  
                      ?___awmod 0064               __size_of_set_half 0062               __size_of_set_page 0044  
                      ?___lwdiv 001D               __size_of_set_veer 0062               __size_of_set_trou 00A2  
             __size_of_set_voor 0062             ?_process_usb_serial 0001                     __pintcodelo 0018  
                     _fft_ready 00B1            ??_audio_jack_process 0023       __size_ofi1_set_status_led 00E4  
              set_gelukkige@clr 0071                     __smallconst 0F00               __size_of_stop_adc 0004  
                 ??_refresh_led 006D               draw_circle@radius 0075                        ?_init_io 0001  
        __size_of_set_twee_hour 0062                        ?_set_dag 0001                        ?_set_der 0001  
                    set_dag@clr 0071                        ?_set_oor 0001                        ?_set_uur 0001  
              ___lwdiv@quotient 0022                       _curr_time 00C5             __size_of_set_minell 00EA  
                     _init_comm 4B9C                       _curr_stat 00D4             __size_of_set_minute 0092  
               ?_set_twaalf_min 0001             __size_of_set_minuut 0092                  init_led@all_on 0119  
                      _BTCNTMAX 0F03                 ?_set_twaalf_uur 0001            ??_process_usb_serial 0001  
        ??_time_needs_to_be_set 001F                 ?_set_status_led 0100        i2c_write_single@reg_addr 0110  
                 ??_low_pri_isr 0094                  ___wmul@product 0021                   _set_gelukkige 2490  
                 ??_set_agt_min 0026                 refresh_led@succ 006F                   ??_set_agt_uur 0026  
                 ??_set_een_min 0026                        _IPR0bits 000EBA                   ??_set_elf_min 0026  
                      _PIE0bits 000EC2                      set_pixel@x 006B                      set_pixel@y 006D  
                 ??_set_elf_uur 0026                        _PIE3bits 000EC5             __CFG_BORV$VBOR_2P45 000000  
                      i1u424_20 4BCC                  ?_screen_update 0092                        i1u425_20 4BCE  
                      i1u801_20 3A08                        i1u802_20 3A10                        i1u811_20 308E  
                      i1u820_20 18E6                        i1u812_20 1752                        i2u420_40 4BE4  
                      i2u500_40 2382                        i1u813_20 179A                        i2u421_40 4BE6  
                      i2u510_40 2472                        i2u503_40 23C4                        i1u807_25 49FC  
                      i1u807_26 49FE                        _PIR0bits 000ECA                        i1u816_20 17F4  
                     _set_en_mj 4316                        i2u504_40 23E6                        i1u761_20 43EA  
                      i1u817_20 180A                        i2u505_40 23F4                        _PIR1bits 000ECB  
                      i1u818_20 18AE                        i2u506_40 2402                        i1u819_20 18C4  
                      i2u507_40 2432                        i2u508_40 2434                        i2u509_40 2470  
                    ?_clear_led 0001                        _PIR3bits 000ECD                        i1u790_20 2808  
             ??_set_error_state 0025                        i1u791_20 280A                        i1u783_20 2754  
                      _PIR4bits 000ECE                        i1u880_20 4A2E                        i1u792_20 2820  
                      i1u784_20 2772                       _set_jason 313E                        i1u881_20 4A30  
                      i1u793_20 2822                        i1u785_20 2774                        i1u777_20 35CA  
                      i1u794_20 2838                        i1u786_20 278A                        i1u875_20 21FE  
                      i1u795_20 283A                        i1u787_20 278C                        i2u491_40 4450  
                      i1u788_20 27A2                        i2u492_40 4462                        i1u877_20 4476  
                      i1u789_20 27A4                        i1u877_28 4478                        i1u879_20 4A14  
                      i2u495_40 4904                        i1u879_28 4A16                        i2u496_40 3CE4  
                      i2u497_40 2342                        i2u497_41 233E                        i2u498_40 2344  
                     _set_kwart 3C0C                       _set_pixel 38F6                   ??_set_ses_min 0026  
                      _SSP1CON1 000F96                        _SSP1CON2 000F97                   ??_set_ses_uur 0026  
                      _SSP1STAT 000F95                     _draw_circle 1B38                     _LED_TIM_VAL 00D6  
                 set_load_led@x 0089                   set_load_led@y 008B       __size_of_i2c_write_single 0030  
                 ??_set_twintig 0026                   ??_set_vyf_min 0026                   ??_set_vyf_uur 0026  
                 ??i1_i2c_write 0023                      _ADCON0bits 000F60               ___wmul@multiplier 001D  
      __end_of_get_random_color 3A96                        i2___wmul 4B76                 _prog_sw_process 4A0A  
             _process_bt_serial 48C6                       main@board 08C4        __size_of_set_white_pixel 002E  
                 _aud_jack_stat 00AB                ?_bt_msg_received 0001                   set_minell@clr 0071  
    i1i2c_write_single@reg_addr 0067              ?_process_bt_serial 0001          i1set_status_led@status 001D  
                   ??_i2c_write 010C                   _set_ntien_min 3B92                   _set_pixel_pwm 2BDA  
                    ?_init_comm 0001             I2C_Master_Read@temp 0103               ___lmul@multiplier 001D  
                     copy_data0 338E         i1i2c_read@data_read_len 0023                   ??_process_adc 0001  
           __end_of_refresh_led 2874                set_white_pixel@x 0071                set_white_pixel@y 0073  
              ??_set_die_tyd_is 0026             ??_process_bt_serial 0003                        _i2c_read 25E6  
                ?_set_gelukkige 0001          i1i2c_write_single@addr 0066          i1i2c_write_single@data 0026  
                 _set_twee_hour 3EE2                  _bt_ser_str_dat 0600                        __Hrparam 0000  
                    ?_set_en_mj 0001                      ?_set_jason 0001                        __Lrparam 0000  
                    ?_set_kwart 0001                      ?_set_pixel 006B              __CFG_BOREN$SBORDIS 000000  
         __size_of_set_een_hour 004A                       init_led@i 0131             __end_of_low_pri_isr 00FA  
           __end_of_set_agt_min 487E             __end_of_set_agt_uur 4834             __end_of_set_een_min 4756  
           __end_of_set_elf_min 470C             __end_of_set_elf_uur 46C2           __size_of_set_drie_min 0062  
              __size_of___awmod 00A2           __size_of_set_drie_uur 0062           i2___wmul@multiplicand 0003  
                 ??_pwm_process 0007                __size_of___lwdiv 0052                     _curr_bt_cnt 0033  
     __end_of_process_bt_serial 490E           __size_of_set_nege_min 0062        __size_of_i2c_read_single 002C  
         __size_of_set_nege_uur 0062           __size_of_set_load_led 00DC                      _ANSELAbits 000F11  
                    _ANSELBbits 000F19                      _ANSELCbits 000F21             __end_of_set_ses_min 462E  
           __end_of_set_ses_uur 45E4                 _I2C_Master_Read 4996                      _T0CON0bits 000FD5  
               _I2C_Master_Wait 4BEC                      _T0CON1bits 000FD6                 _I2C_Master_Stop 4C26  
                      _data_usb 0137                __size_of_init_io 0094                  ?_set_ntien_min 0001  
               ___lwdiv@divisor 001F                  ?_set_pixel_pwm 0060             __end_of_set_twintig 34D6  
           __end_of_set_vyf_min 4550             __end_of_set_vyf_uur 4506           __size_of_set_tien_min 0062  
               ___lwdiv@counter 0021             __end_ofi1_i2c_write 3062           __size_of_set_sewe_min 0062  
         __size_of_set_tien_uur 0062      __end_ofi1_i2c_write_single 4AFC                        __ptext10 25E6  
              __size_of_set_dag 007E                        __ptext11 4C12                        __ptext20 44BC  
         __size_of_set_time_led 043A                        __ptext12 4C26                        __ptext21 4506  
                      __ptext13 4C2E                        __ptext30 3EE2                        __ptext22 3CF8  
                      __ptext14 4996                        __ptext31 36AE                        __ptext23 3D5A  
                      __ptext15 4BEC                        __ptext40 462E                        __ptext32 3740  
                      __ptext24 3DBC                        __ptext41 3B92                        __ptext33 34D6  
                      __ptext25 2874                        __ptext17 4B28                        __ptext50 2490  
                      __ptext42 40CC                        __ptext34 3F44                        __ptext26 3E1E  
                      __ptext18 4BBC                        __ptext51 4316                        __ptext43 412E  
                      __ptext35 3FA6                        __ptext27 4550                        __ptext19 16FE  
                      __ptext60 47A0                        __ptext52 4A3E                        __ptext44 37D2  
                      __ptext36 4008                        __ptext28 342C                        __ptext61 3B14  
                      __ptext53 4678                        __ptext45 3864                        __ptext37 406A  
                      __ptext29 3E80                        __ptext70 1B38                        __ptext62 47EA  
                      __ptext54 46C2                        __ptext46 2DB4                        __ptext38 459A  
                      __ptext71 38F6                        __ptext63 4834                        __ptext55 470C  
                      __ptext47 3C0C                        __ptext39 45E4                        __ptext80 4A0A  
                      __ptext72 2BDA                        __ptext64 4AA0                        __ptext56 4756  
                      __ptext48 313E                        __ptext81 487E                        __ptext73 43C8  
                      __ptext65 3062                        __ptext57 41F2                        __ptext49 4190  
                      __ptext90 2E9E                        __ptext82 21C4                        __ptext74 3988  
                      __ptext66 3A16                        __ptext58 4254                        __ptext83 29A6  
                      __ptext75 272E                        __ptext67 4370                        __ptext59 3204  
                      __ptext92 2330                        __ptext84 4C1C                        __ptext76 4952  
                      __ptext68 42B6                        __ptext93 4B76                        __ptext85 4C36  
                      __ptext77 4ACE                        __ptext69 3578                        __ptext94 441A  
                      __ptext86 4C3E                        __ptext78 2F82                __size_of_set_der 004A  
         __size_of_set_sewe_uur 0062                        __ptext95 48C6                        __ptext87 49D2  
                      __ptext79 4B50                        __ptext96 4BD4                        __ptext88 4C00  
                      __ptext97 3C86                        __ptext89 446C                        __ptext98 4C4A  
          set_status_led@status 0100                __size_of_set_oor 004A                    _SSP1CON1bits 000F96  
                  _SSP1CON2bits 000F97                __size_of_set_uur 004A                     _realNumbers 0300  
         __size_of_set_vier_min 0062           __size_of_set_verjaars 0132              i1_I2C_Master_Start 4C3E  
         __size_of_set_vier_uur 0062                    set_en_mj@clr 0071                        _get_time 21C4  
                      _led_cont 08C6              i1_I2C_Master_Write 4C1C           __size_of_set_twee_min 0062  
                  _set_een_hour 4756                        _init_led 1EA8                   __size_of_main 07F8  
                 __size_of_rand 0058                        _init_pwm 3A96                   init_led@board 0133  
          i2c_write_single@addr 010F            i2c_write_single@data 0111                 ??_screen_update 0027  
           ?i1_I2C_Master_Start 0001                  ?_set_twee_hour 0001             ?i1_I2C_Master_Write 001E  
                  set_jason@clr 0071            __CFG_WDTCWS$WDTCWS_7 000000                    set_page@page 0112  
                  _set_drie_min 4254                    _set_drie_uur 41F2                    set_page@succ 0115  
           __end_of_process_adc 3CF8                     ??_clear_led 0073                        _set_half 4190  
                    _RC1STAbits 000F9D                        _set_page 490E                    _set_nege_min 412E  
                  ??_set_minell 0027                i2c_read@reg_addr 0105                    _set_nege_uur 40CC  
                      _set_veer 3E1E                      _RC2STAbits 000E9D                    ??_set_minute 0026  
                  ??_set_minuut 0026                        _set_trou 34D6                        _set_voor 3CF8  
                  _set_load_led 3062         __end_of_prog_sw_process 4A3E                        int$flags 0043  
i1set_status_led@error_override 001F                    _SSP1STATbits 000F95             i1set_page@cont_addr 006A  
                      _stop_adc 4C4A                i1_set_status_led 2E9E                    _set_tien_min 3FA6  
                  _set_sewe_min 406A                    _set_tien_uur 3F44                    _set_time_led 16FE  
                  _set_sewe_uur 4008            ??i1_I2C_Master_Start 001E                    _set_vier_min 3DBC  
                  _set_verjaars 2874            ??i1_I2C_Master_Write 0020                    _set_vier_uur 3D5A  
      __end_of_I2C_Master_Start 4C36        __end_of_I2C_Master_Write 4C1C                      _INTCONbits 000FF2  
                   _refresh_led 272E              set_load_led@radius 008D                    _set_twee_min 3E80  
           __end_of_pwm_process 2490                    set_pixel@clr 006F                     ??_init_comm 0100  
               ??_set_gelukkige 0027              __end_of_set_minell 2E9E               ??_set_white_pixel 0026  
            __end_of_set_minute 38F6              __end_of_set_minuut 3864                        intlevel1 0000  
                      intlevel2 0000           i2c_read@data_read_len 0106                     _low_pri_isr 0018  
             __CFG_CLKOUTEN$OFF 000000                    _time_quality 0027                     _set_agt_min 4834  
                   _set_agt_uur 47EA                     _set_een_min 470C                     _set_elf_min 46C2  
                   _set_elf_uur 4678                     ??_set_en_mj 0027                     ??_set_jason 0027  
                i1set_page@page 0068                     ??_set_kwart 0026                     ??_set_pixel 0026  
                i1set_page@succ 006B               i2c_write@data_len 0108                     _set_ses_min 45E4  
                   _set_ses_uur 459A         __end_of_I2C_Master_Read 49D2         __end_of_I2C_Master_Wait 4C00  
             set_load_led@color 008F                _i2c_write_single 4A70         __end_of_I2C_Master_Stop 4C2E  
    __size_of_process_bt_serial 0048                     _set_twintig 342C                     _set_vyf_min 4506  
                   _set_vyf_uur 44BC                     i1_i2c_write 2F82                      _SSP1DATPPS 000EB8  
               ??_set_ntien_min 0026                      _SSP1CLKPPS 000EB7                ??_set_twaalf_min 0026  
               ??_set_pixel_pwm 0024               I2C_Master_Write@d 0101                ??_set_twaalf_uur 0026  
     I2C_Master_Read@final_read 0101               i2c_write@reg_addr 010B                ??_set_status_led 0104  
             ??_i2c_read_single 0113           _bt_ser_str_read_start 00BB                      _TX1STAbits 000F9E  
                    _TX2STAbits 000E9E                      i1_i2c_read 29A6                 _set_error_state 487E  
            set_pixel_pwm@board 0067              set_pixel_pwm@index 0069                     _process_adc 3C86  
               ??_set_twee_hour 0026                  i2c_write@index 010D  
